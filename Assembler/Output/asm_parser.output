Terminais não usados na gramática

    ERROR
    DOLAR


Gramática

    0 $accept: prog $end

    1 prog: prog ENDFILE
    2     | prog stmt
    3     | stmt

    4 stmt: add_stmt
    5     | sub_stmt
    6     | or_stmt
    7     | and_stmt
    8     | not_stmt
    9     | xor_stmt
   10     | cmp_stmt
   11     | branch_stmt
   12     | move_stmt
   13     | jump_stmt
   14     | load_stmt
   15     | store_stmt
   16     | push_stmt
   17     | pop_stmt
   18     | reti_stmt
   19     | halt_stmt
   20     | nop_stmt
   21     | byte_stmt
   22     | word_stmt
   23     | alloc_stmt
   24     | org_stmt
   25     | equ_stmt
   26     | label

   27 add_stmt: ADD REG COMMA REG COMMA REG
   28         | ADD REG COMMA REG COMMA CARDINAL NUMBER

   29 sub_stmt: SUB REG COMMA REG COMMA REG
   30         | SUB REG COMMA REG COMMA CARDINAL NUMBER

   31 or_stmt: OR REG COMMA REG COMMA REG
   32        | OR REG COMMA REG COMMA CARDINAL NUMBER

   33 and_stmt: AND REG COMMA REG COMMA REG
   34         | AND REG COMMA REG COMMA CARDINAL NUMBER

   35 xor_stmt: XOR REG COMMA REG COMMA REG
   36         | XOR REG COMMA REG COMMA CARDINAL NUMBER

   37 not_stmt: NOT REG COMMA REG
   38         | NOT REG COMMA CARDINAL NUMBER

   39 cmp_stmt: CMP REG COMMA REG

   40 branch_stmt: BRANCH IDENTIFIER

   41 move_stmt: MOVE REG COMMA REG

   42 jump_stmt: JUMP REG COMMA CARDINAL NUMBER
   43          | JUMP_LINK REG COMMA REG COMMA CARDINAL NUMBER

   44 load_stmt: LOAD_DIRECT REG COMMA CARDINAL NUMBER
   45          | LOAD_IMMEDIATE REG COMMA CARDINAL NUMBER
   46          | LOAD_INDEXED REG COMMA REG COMMA CARDINAL NUMBER

   47 store_stmt: STORE_DIRECT REG COMMA CARDINAL NUMBER
   48           | STORE_INDEXED REG COMMA REG COMMA CARDINAL NUMBER

   49 push_stmt: PUSH REG

   50 pop_stmt: POP REG

   51 reti_stmt: RETI

   52 halt_stmt: HALT

   53 nop_stmt: NOP

   54 byte_stmt: BYTE NUMBER

   55 word_stmt: WORD NUMBER

   56 alloc_stmt: ALLOC IDENTIFIER NUMBER

   57 org_stmt: ORG NUMBER

   58 equ_stmt: EQU IDENTIFIER COMMA NUMBER

   59 label: IDENTIFIER COLON


Terminais, com regras onde aparecem

    $end (0) 0
    error (256)
    ADD (258) 27 28
    SUB (259) 29 30
    OR (260) 31 32
    AND (261) 33 34
    NOT (262) 37 38
    XOR (263) 35 36
    CMP (264) 39
    BRANCH (265) 40
    JUMP (266) 42
    JUMP_LINK (267) 43
    MOVE (268) 41
    LOAD_DIRECT (269) 44
    LOAD_IMMEDIATE (270) 45
    LOAD_INDEXED (271) 46
    STORE_DIRECT (272) 47
    STORE_INDEXED (273) 48
    PUSH (274) 49
    POP (275) 50
    RETI (276) 51
    HALT (277) 52
    NOP (278) 53
    NUMBER (279) 28 30 32 34 36 38 42 43 44 45 46 47 48 54 55 56 57 58
    REG (280) 27 28 29 30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 47 48 49 50
    IDENTIFIER (281) 40 56 58 59
    ENDFILE (282) 1
    ERROR (283)
    COMMA (284) 27 28 29 30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 47 48 58
    CARDINAL (285) 28 30 32 34 36 38 42 43 44 45 46 47 48
    COLON (286) 59
    DOLAR (287)
    BYTE (288) 54
    WORD (289) 55
    ALLOC (290) 56
    ORG (291) 57
    EQU (292) 58


Não terminais, com regras onde aparecem

    $accept (38)
        à esquerda: 0
    prog (39)
        à esquerda: 1 2 3
        à direita: 0 1 2
    stmt (40)
        à esquerda: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
        à direita: 2 3
    add_stmt (41)
        à esquerda: 27 28
        à direita: 4
    sub_stmt (42)
        à esquerda: 29 30
        à direita: 5
    or_stmt (43)
        à esquerda: 31 32
        à direita: 6
    and_stmt (44)
        à esquerda: 33 34
        à direita: 7
    xor_stmt (45)
        à esquerda: 35 36
        à direita: 9
    not_stmt (46)
        à esquerda: 37 38
        à direita: 8
    cmp_stmt (47)
        à esquerda: 39
        à direita: 10
    branch_stmt (48)
        à esquerda: 40
        à direita: 11
    move_stmt (49)
        à esquerda: 41
        à direita: 12
    jump_stmt (50)
        à esquerda: 42 43
        à direita: 13
    load_stmt (51)
        à esquerda: 44 45 46
        à direita: 14
    store_stmt (52)
        à esquerda: 47 48
        à direita: 15
    push_stmt (53)
        à esquerda: 49
        à direita: 16
    pop_stmt (54)
        à esquerda: 50
        à direita: 17
    reti_stmt (55)
        à esquerda: 51
        à direita: 18
    halt_stmt (56)
        à esquerda: 52
        à direita: 19
    nop_stmt (57)
        à esquerda: 53
        à direita: 20
    byte_stmt (58)
        à esquerda: 54
        à direita: 21
    word_stmt (59)
        à esquerda: 55
        à direita: 22
    alloc_stmt (60)
        à esquerda: 56
        à direita: 23
    org_stmt (61)
        à esquerda: 57
        à direita: 24
    equ_stmt (62)
        à esquerda: 58
        à direita: 25
    label (63)
        à esquerda: 59
        à direita: 26


Estado 0

    0 $accept: • prog $end

    ADD             troca e vai para estado 1
    SUB             troca e vai para estado 2
    OR              troca e vai para estado 3
    AND             troca e vai para estado 4
    NOT             troca e vai para estado 5
    XOR             troca e vai para estado 6
    CMP             troca e vai para estado 7
    BRANCH          troca e vai para estado 8
    JUMP            troca e vai para estado 9
    JUMP_LINK       troca e vai para estado 10
    MOVE            troca e vai para estado 11
    LOAD_DIRECT     troca e vai para estado 12
    LOAD_IMMEDIATE  troca e vai para estado 13
    LOAD_INDEXED    troca e vai para estado 14
    STORE_DIRECT    troca e vai para estado 15
    STORE_INDEXED   troca e vai para estado 16
    PUSH            troca e vai para estado 17
    POP             troca e vai para estado 18
    RETI            troca e vai para estado 19
    HALT            troca e vai para estado 20
    NOP             troca e vai para estado 21
    IDENTIFIER      troca e vai para estado 22
    BYTE            troca e vai para estado 23
    WORD            troca e vai para estado 24
    ALLOC           troca e vai para estado 25
    ORG             troca e vai para estado 26
    EQU             troca e vai para estado 27

    prog         vai para estado 28
    stmt         vai para estado 29
    add_stmt     vai para estado 30
    sub_stmt     vai para estado 31
    or_stmt      vai para estado 32
    and_stmt     vai para estado 33
    xor_stmt     vai para estado 34
    not_stmt     vai para estado 35
    cmp_stmt     vai para estado 36
    branch_stmt  vai para estado 37
    move_stmt    vai para estado 38
    jump_stmt    vai para estado 39
    load_stmt    vai para estado 40
    store_stmt   vai para estado 41
    push_stmt    vai para estado 42
    pop_stmt     vai para estado 43
    reti_stmt    vai para estado 44
    halt_stmt    vai para estado 45
    nop_stmt     vai para estado 46
    byte_stmt    vai para estado 47
    word_stmt    vai para estado 48
    alloc_stmt   vai para estado 49
    org_stmt     vai para estado 50
    equ_stmt     vai para estado 51
    label        vai para estado 52


Estado 1

   27 add_stmt: ADD • REG COMMA REG COMMA REG
   28         | ADD • REG COMMA REG COMMA CARDINAL NUMBER

    REG  troca e vai para estado 53


Estado 2

   29 sub_stmt: SUB • REG COMMA REG COMMA REG
   30         | SUB • REG COMMA REG COMMA CARDINAL NUMBER

    REG  troca e vai para estado 54


Estado 3

   31 or_stmt: OR • REG COMMA REG COMMA REG
   32        | OR • REG COMMA REG COMMA CARDINAL NUMBER

    REG  troca e vai para estado 55


Estado 4

   33 and_stmt: AND • REG COMMA REG COMMA REG
   34         | AND • REG COMMA REG COMMA CARDINAL NUMBER

    REG  troca e vai para estado 56


Estado 5

   37 not_stmt: NOT • REG COMMA REG
   38         | NOT • REG COMMA CARDINAL NUMBER

    REG  troca e vai para estado 57


Estado 6

   35 xor_stmt: XOR • REG COMMA REG COMMA REG
   36         | XOR • REG COMMA REG COMMA CARDINAL NUMBER

    REG  troca e vai para estado 58


Estado 7

   39 cmp_stmt: CMP • REG COMMA REG

    REG  troca e vai para estado 59


Estado 8

   40 branch_stmt: BRANCH • IDENTIFIER

    IDENTIFIER  troca e vai para estado 60


Estado 9

   42 jump_stmt: JUMP • REG COMMA CARDINAL NUMBER

    REG  troca e vai para estado 61


Estado 10

   43 jump_stmt: JUMP_LINK • REG COMMA REG COMMA CARDINAL NUMBER

    REG  troca e vai para estado 62


Estado 11

   41 move_stmt: MOVE • REG COMMA REG

    REG  troca e vai para estado 63


Estado 12

   44 load_stmt: LOAD_DIRECT • REG COMMA CARDINAL NUMBER

    REG  troca e vai para estado 64


Estado 13

   45 load_stmt: LOAD_IMMEDIATE • REG COMMA CARDINAL NUMBER

    REG  troca e vai para estado 65


Estado 14

   46 load_stmt: LOAD_INDEXED • REG COMMA REG COMMA CARDINAL NUMBER

    REG  troca e vai para estado 66


Estado 15

   47 store_stmt: STORE_DIRECT • REG COMMA CARDINAL NUMBER

    REG  troca e vai para estado 67


Estado 16

   48 store_stmt: STORE_INDEXED • REG COMMA REG COMMA CARDINAL NUMBER

    REG  troca e vai para estado 68


Estado 17

   49 push_stmt: PUSH • REG

    REG  troca e vai para estado 69


Estado 18

   50 pop_stmt: POP • REG

    REG  troca e vai para estado 70


Estado 19

   51 reti_stmt: RETI •

    $default  redução com regra 51 (reti_stmt)


Estado 20

   52 halt_stmt: HALT •

    $default  redução com regra 52 (halt_stmt)


Estado 21

   53 nop_stmt: NOP •

    $default  redução com regra 53 (nop_stmt)


Estado 22

   59 label: IDENTIFIER • COLON

    COLON  troca e vai para estado 71


Estado 23

   54 byte_stmt: BYTE • NUMBER

    NUMBER  troca e vai para estado 72


Estado 24

   55 word_stmt: WORD • NUMBER

    NUMBER  troca e vai para estado 73


Estado 25

   56 alloc_stmt: ALLOC • IDENTIFIER NUMBER

    IDENTIFIER  troca e vai para estado 74


Estado 26

   57 org_stmt: ORG • NUMBER

    NUMBER  troca e vai para estado 75


Estado 27

   58 equ_stmt: EQU • IDENTIFIER COMMA NUMBER

    IDENTIFIER  troca e vai para estado 76


Estado 28

    0 $accept: prog • $end
    1 prog: prog • ENDFILE
    2     | prog • stmt

    $end            troca e vai para estado 77
    ADD             troca e vai para estado 1
    SUB             troca e vai para estado 2
    OR              troca e vai para estado 3
    AND             troca e vai para estado 4
    NOT             troca e vai para estado 5
    XOR             troca e vai para estado 6
    CMP             troca e vai para estado 7
    BRANCH          troca e vai para estado 8
    JUMP            troca e vai para estado 9
    JUMP_LINK       troca e vai para estado 10
    MOVE            troca e vai para estado 11
    LOAD_DIRECT     troca e vai para estado 12
    LOAD_IMMEDIATE  troca e vai para estado 13
    LOAD_INDEXED    troca e vai para estado 14
    STORE_DIRECT    troca e vai para estado 15
    STORE_INDEXED   troca e vai para estado 16
    PUSH            troca e vai para estado 17
    POP             troca e vai para estado 18
    RETI            troca e vai para estado 19
    HALT            troca e vai para estado 20
    NOP             troca e vai para estado 21
    IDENTIFIER      troca e vai para estado 22
    ENDFILE         troca e vai para estado 78
    BYTE            troca e vai para estado 23
    WORD            troca e vai para estado 24
    ALLOC           troca e vai para estado 25
    ORG             troca e vai para estado 26
    EQU             troca e vai para estado 27

    stmt         vai para estado 79
    add_stmt     vai para estado 30
    sub_stmt     vai para estado 31
    or_stmt      vai para estado 32
    and_stmt     vai para estado 33
    xor_stmt     vai para estado 34
    not_stmt     vai para estado 35
    cmp_stmt     vai para estado 36
    branch_stmt  vai para estado 37
    move_stmt    vai para estado 38
    jump_stmt    vai para estado 39
    load_stmt    vai para estado 40
    store_stmt   vai para estado 41
    push_stmt    vai para estado 42
    pop_stmt     vai para estado 43
    reti_stmt    vai para estado 44
    halt_stmt    vai para estado 45
    nop_stmt     vai para estado 46
    byte_stmt    vai para estado 47
    word_stmt    vai para estado 48
    alloc_stmt   vai para estado 49
    org_stmt     vai para estado 50
    equ_stmt     vai para estado 51
    label        vai para estado 52


Estado 29

    3 prog: stmt •

    $default  redução com regra 3 (prog)


Estado 30

    4 stmt: add_stmt •

    $default  redução com regra 4 (stmt)


Estado 31

    5 stmt: sub_stmt •

    $default  redução com regra 5 (stmt)


Estado 32

    6 stmt: or_stmt •

    $default  redução com regra 6 (stmt)


Estado 33

    7 stmt: and_stmt •

    $default  redução com regra 7 (stmt)


Estado 34

    9 stmt: xor_stmt •

    $default  redução com regra 9 (stmt)


Estado 35

    8 stmt: not_stmt •

    $default  redução com regra 8 (stmt)


Estado 36

   10 stmt: cmp_stmt •

    $default  redução com regra 10 (stmt)


Estado 37

   11 stmt: branch_stmt •

    $default  redução com regra 11 (stmt)


Estado 38

   12 stmt: move_stmt •

    $default  redução com regra 12 (stmt)


Estado 39

   13 stmt: jump_stmt •

    $default  redução com regra 13 (stmt)


Estado 40

   14 stmt: load_stmt •

    $default  redução com regra 14 (stmt)


Estado 41

   15 stmt: store_stmt •

    $default  redução com regra 15 (stmt)


Estado 42

   16 stmt: push_stmt •

    $default  redução com regra 16 (stmt)


Estado 43

   17 stmt: pop_stmt •

    $default  redução com regra 17 (stmt)


Estado 44

   18 stmt: reti_stmt •

    $default  redução com regra 18 (stmt)


Estado 45

   19 stmt: halt_stmt •

    $default  redução com regra 19 (stmt)


Estado 46

   20 stmt: nop_stmt •

    $default  redução com regra 20 (stmt)


Estado 47

   21 stmt: byte_stmt •

    $default  redução com regra 21 (stmt)


Estado 48

   22 stmt: word_stmt •

    $default  redução com regra 22 (stmt)


Estado 49

   23 stmt: alloc_stmt •

    $default  redução com regra 23 (stmt)


Estado 50

   24 stmt: org_stmt •

    $default  redução com regra 24 (stmt)


Estado 51

   25 stmt: equ_stmt •

    $default  redução com regra 25 (stmt)


Estado 52

   26 stmt: label •

    $default  redução com regra 26 (stmt)


Estado 53

   27 add_stmt: ADD REG • COMMA REG COMMA REG
   28         | ADD REG • COMMA REG COMMA CARDINAL NUMBER

    COMMA  troca e vai para estado 80


Estado 54

   29 sub_stmt: SUB REG • COMMA REG COMMA REG
   30         | SUB REG • COMMA REG COMMA CARDINAL NUMBER

    COMMA  troca e vai para estado 81


Estado 55

   31 or_stmt: OR REG • COMMA REG COMMA REG
   32        | OR REG • COMMA REG COMMA CARDINAL NUMBER

    COMMA  troca e vai para estado 82


Estado 56

   33 and_stmt: AND REG • COMMA REG COMMA REG
   34         | AND REG • COMMA REG COMMA CARDINAL NUMBER

    COMMA  troca e vai para estado 83


Estado 57

   37 not_stmt: NOT REG • COMMA REG
   38         | NOT REG • COMMA CARDINAL NUMBER

    COMMA  troca e vai para estado 84


Estado 58

   35 xor_stmt: XOR REG • COMMA REG COMMA REG
   36         | XOR REG • COMMA REG COMMA CARDINAL NUMBER

    COMMA  troca e vai para estado 85


Estado 59

   39 cmp_stmt: CMP REG • COMMA REG

    COMMA  troca e vai para estado 86


Estado 60

   40 branch_stmt: BRANCH IDENTIFIER •

    $default  redução com regra 40 (branch_stmt)


Estado 61

   42 jump_stmt: JUMP REG • COMMA CARDINAL NUMBER

    COMMA  troca e vai para estado 87


Estado 62

   43 jump_stmt: JUMP_LINK REG • COMMA REG COMMA CARDINAL NUMBER

    COMMA  troca e vai para estado 88


Estado 63

   41 move_stmt: MOVE REG • COMMA REG

    COMMA  troca e vai para estado 89


Estado 64

   44 load_stmt: LOAD_DIRECT REG • COMMA CARDINAL NUMBER

    COMMA  troca e vai para estado 90


Estado 65

   45 load_stmt: LOAD_IMMEDIATE REG • COMMA CARDINAL NUMBER

    COMMA  troca e vai para estado 91


Estado 66

   46 load_stmt: LOAD_INDEXED REG • COMMA REG COMMA CARDINAL NUMBER

    COMMA  troca e vai para estado 92


Estado 67

   47 store_stmt: STORE_DIRECT REG • COMMA CARDINAL NUMBER

    COMMA  troca e vai para estado 93


Estado 68

   48 store_stmt: STORE_INDEXED REG • COMMA REG COMMA CARDINAL NUMBER

    COMMA  troca e vai para estado 94


Estado 69

   49 push_stmt: PUSH REG •

    $default  redução com regra 49 (push_stmt)


Estado 70

   50 pop_stmt: POP REG •

    $default  redução com regra 50 (pop_stmt)


Estado 71

   59 label: IDENTIFIER COLON •

    $default  redução com regra 59 (label)


Estado 72

   54 byte_stmt: BYTE NUMBER •

    $default  redução com regra 54 (byte_stmt)


Estado 73

   55 word_stmt: WORD NUMBER •

    $default  redução com regra 55 (word_stmt)


Estado 74

   56 alloc_stmt: ALLOC IDENTIFIER • NUMBER

    NUMBER  troca e vai para estado 95


Estado 75

   57 org_stmt: ORG NUMBER •

    $default  redução com regra 57 (org_stmt)


Estado 76

   58 equ_stmt: EQU IDENTIFIER • COMMA NUMBER

    COMMA  troca e vai para estado 96


Estado 77

    0 $accept: prog $end •

    $default  aceitar


Estado 78

    1 prog: prog ENDFILE •

    $default  redução com regra 1 (prog)


Estado 79

    2 prog: prog stmt •

    $default  redução com regra 2 (prog)


Estado 80

   27 add_stmt: ADD REG COMMA • REG COMMA REG
   28         | ADD REG COMMA • REG COMMA CARDINAL NUMBER

    REG  troca e vai para estado 97


Estado 81

   29 sub_stmt: SUB REG COMMA • REG COMMA REG
   30         | SUB REG COMMA • REG COMMA CARDINAL NUMBER

    REG  troca e vai para estado 98


Estado 82

   31 or_stmt: OR REG COMMA • REG COMMA REG
   32        | OR REG COMMA • REG COMMA CARDINAL NUMBER

    REG  troca e vai para estado 99


Estado 83

   33 and_stmt: AND REG COMMA • REG COMMA REG
   34         | AND REG COMMA • REG COMMA CARDINAL NUMBER

    REG  troca e vai para estado 100


Estado 84

   37 not_stmt: NOT REG COMMA • REG
   38         | NOT REG COMMA • CARDINAL NUMBER

    REG       troca e vai para estado 101
    CARDINAL  troca e vai para estado 102


Estado 85

   35 xor_stmt: XOR REG COMMA • REG COMMA REG
   36         | XOR REG COMMA • REG COMMA CARDINAL NUMBER

    REG  troca e vai para estado 103


Estado 86

   39 cmp_stmt: CMP REG COMMA • REG

    REG  troca e vai para estado 104


Estado 87

   42 jump_stmt: JUMP REG COMMA • CARDINAL NUMBER

    CARDINAL  troca e vai para estado 105


Estado 88

   43 jump_stmt: JUMP_LINK REG COMMA • REG COMMA CARDINAL NUMBER

    REG  troca e vai para estado 106


Estado 89

   41 move_stmt: MOVE REG COMMA • REG

    REG  troca e vai para estado 107


Estado 90

   44 load_stmt: LOAD_DIRECT REG COMMA • CARDINAL NUMBER

    CARDINAL  troca e vai para estado 108


Estado 91

   45 load_stmt: LOAD_IMMEDIATE REG COMMA • CARDINAL NUMBER

    CARDINAL  troca e vai para estado 109


Estado 92

   46 load_stmt: LOAD_INDEXED REG COMMA • REG COMMA CARDINAL NUMBER

    REG  troca e vai para estado 110


Estado 93

   47 store_stmt: STORE_DIRECT REG COMMA • CARDINAL NUMBER

    CARDINAL  troca e vai para estado 111


Estado 94

   48 store_stmt: STORE_INDEXED REG COMMA • REG COMMA CARDINAL NUMBER

    REG  troca e vai para estado 112


Estado 95

   56 alloc_stmt: ALLOC IDENTIFIER NUMBER •

    $default  redução com regra 56 (alloc_stmt)


Estado 96

   58 equ_stmt: EQU IDENTIFIER COMMA • NUMBER

    NUMBER  troca e vai para estado 113


Estado 97

   27 add_stmt: ADD REG COMMA REG • COMMA REG
   28         | ADD REG COMMA REG • COMMA CARDINAL NUMBER

    COMMA  troca e vai para estado 114


Estado 98

   29 sub_stmt: SUB REG COMMA REG • COMMA REG
   30         | SUB REG COMMA REG • COMMA CARDINAL NUMBER

    COMMA  troca e vai para estado 115


Estado 99

   31 or_stmt: OR REG COMMA REG • COMMA REG
   32        | OR REG COMMA REG • COMMA CARDINAL NUMBER

    COMMA  troca e vai para estado 116


Estado 100

   33 and_stmt: AND REG COMMA REG • COMMA REG
   34         | AND REG COMMA REG • COMMA CARDINAL NUMBER

    COMMA  troca e vai para estado 117


Estado 101

   37 not_stmt: NOT REG COMMA REG •

    $default  redução com regra 37 (not_stmt)


Estado 102

   38 not_stmt: NOT REG COMMA CARDINAL • NUMBER

    NUMBER  troca e vai para estado 118


Estado 103

   35 xor_stmt: XOR REG COMMA REG • COMMA REG
   36         | XOR REG COMMA REG • COMMA CARDINAL NUMBER

    COMMA  troca e vai para estado 119


Estado 104

   39 cmp_stmt: CMP REG COMMA REG •

    $default  redução com regra 39 (cmp_stmt)


Estado 105

   42 jump_stmt: JUMP REG COMMA CARDINAL • NUMBER

    NUMBER  troca e vai para estado 120


Estado 106

   43 jump_stmt: JUMP_LINK REG COMMA REG • COMMA CARDINAL NUMBER

    COMMA  troca e vai para estado 121


Estado 107

   41 move_stmt: MOVE REG COMMA REG •

    $default  redução com regra 41 (move_stmt)


Estado 108

   44 load_stmt: LOAD_DIRECT REG COMMA CARDINAL • NUMBER

    NUMBER  troca e vai para estado 122


Estado 109

   45 load_stmt: LOAD_IMMEDIATE REG COMMA CARDINAL • NUMBER

    NUMBER  troca e vai para estado 123


Estado 110

   46 load_stmt: LOAD_INDEXED REG COMMA REG • COMMA CARDINAL NUMBER

    COMMA  troca e vai para estado 124


Estado 111

   47 store_stmt: STORE_DIRECT REG COMMA CARDINAL • NUMBER

    NUMBER  troca e vai para estado 125


Estado 112

   48 store_stmt: STORE_INDEXED REG COMMA REG • COMMA CARDINAL NUMBER

    COMMA  troca e vai para estado 126


Estado 113

   58 equ_stmt: EQU IDENTIFIER COMMA NUMBER •

    $default  redução com regra 58 (equ_stmt)


Estado 114

   27 add_stmt: ADD REG COMMA REG COMMA • REG
   28         | ADD REG COMMA REG COMMA • CARDINAL NUMBER

    REG       troca e vai para estado 127
    CARDINAL  troca e vai para estado 128


Estado 115

   29 sub_stmt: SUB REG COMMA REG COMMA • REG
   30         | SUB REG COMMA REG COMMA • CARDINAL NUMBER

    REG       troca e vai para estado 129
    CARDINAL  troca e vai para estado 130


Estado 116

   31 or_stmt: OR REG COMMA REG COMMA • REG
   32        | OR REG COMMA REG COMMA • CARDINAL NUMBER

    REG       troca e vai para estado 131
    CARDINAL  troca e vai para estado 132


Estado 117

   33 and_stmt: AND REG COMMA REG COMMA • REG
   34         | AND REG COMMA REG COMMA • CARDINAL NUMBER

    REG       troca e vai para estado 133
    CARDINAL  troca e vai para estado 134


Estado 118

   38 not_stmt: NOT REG COMMA CARDINAL NUMBER •

    $default  redução com regra 38 (not_stmt)


Estado 119

   35 xor_stmt: XOR REG COMMA REG COMMA • REG
   36         | XOR REG COMMA REG COMMA • CARDINAL NUMBER

    REG       troca e vai para estado 135
    CARDINAL  troca e vai para estado 136


Estado 120

   42 jump_stmt: JUMP REG COMMA CARDINAL NUMBER •

    $default  redução com regra 42 (jump_stmt)


Estado 121

   43 jump_stmt: JUMP_LINK REG COMMA REG COMMA • CARDINAL NUMBER

    CARDINAL  troca e vai para estado 137


Estado 122

   44 load_stmt: LOAD_DIRECT REG COMMA CARDINAL NUMBER •

    $default  redução com regra 44 (load_stmt)


Estado 123

   45 load_stmt: LOAD_IMMEDIATE REG COMMA CARDINAL NUMBER •

    $default  redução com regra 45 (load_stmt)


Estado 124

   46 load_stmt: LOAD_INDEXED REG COMMA REG COMMA • CARDINAL NUMBER

    CARDINAL  troca e vai para estado 138


Estado 125

   47 store_stmt: STORE_DIRECT REG COMMA CARDINAL NUMBER •

    $default  redução com regra 47 (store_stmt)


Estado 126

   48 store_stmt: STORE_INDEXED REG COMMA REG COMMA • CARDINAL NUMBER

    CARDINAL  troca e vai para estado 139


Estado 127

   27 add_stmt: ADD REG COMMA REG COMMA REG •

    $default  redução com regra 27 (add_stmt)


Estado 128

   28 add_stmt: ADD REG COMMA REG COMMA CARDINAL • NUMBER

    NUMBER  troca e vai para estado 140


Estado 129

   29 sub_stmt: SUB REG COMMA REG COMMA REG •

    $default  redução com regra 29 (sub_stmt)


Estado 130

   30 sub_stmt: SUB REG COMMA REG COMMA CARDINAL • NUMBER

    NUMBER  troca e vai para estado 141


Estado 131

   31 or_stmt: OR REG COMMA REG COMMA REG •

    $default  redução com regra 31 (or_stmt)


Estado 132

   32 or_stmt: OR REG COMMA REG COMMA CARDINAL • NUMBER

    NUMBER  troca e vai para estado 142


Estado 133

   33 and_stmt: AND REG COMMA REG COMMA REG •

    $default  redução com regra 33 (and_stmt)


Estado 134

   34 and_stmt: AND REG COMMA REG COMMA CARDINAL • NUMBER

    NUMBER  troca e vai para estado 143


Estado 135

   35 xor_stmt: XOR REG COMMA REG COMMA REG •

    $default  redução com regra 35 (xor_stmt)


Estado 136

   36 xor_stmt: XOR REG COMMA REG COMMA CARDINAL • NUMBER

    NUMBER  troca e vai para estado 144


Estado 137

   43 jump_stmt: JUMP_LINK REG COMMA REG COMMA CARDINAL • NUMBER

    NUMBER  troca e vai para estado 145


Estado 138

   46 load_stmt: LOAD_INDEXED REG COMMA REG COMMA CARDINAL • NUMBER

    NUMBER  troca e vai para estado 146


Estado 139

   48 store_stmt: STORE_INDEXED REG COMMA REG COMMA CARDINAL • NUMBER

    NUMBER  troca e vai para estado 147


Estado 140

   28 add_stmt: ADD REG COMMA REG COMMA CARDINAL NUMBER •

    $default  redução com regra 28 (add_stmt)


Estado 141

   30 sub_stmt: SUB REG COMMA REG COMMA CARDINAL NUMBER •

    $default  redução com regra 30 (sub_stmt)


Estado 142

   32 or_stmt: OR REG COMMA REG COMMA CARDINAL NUMBER •

    $default  redução com regra 32 (or_stmt)


Estado 143

   34 and_stmt: AND REG COMMA REG COMMA CARDINAL NUMBER •

    $default  redução com regra 34 (and_stmt)


Estado 144

   36 xor_stmt: XOR REG COMMA REG COMMA CARDINAL NUMBER •

    $default  redução com regra 36 (xor_stmt)


Estado 145

   43 jump_stmt: JUMP_LINK REG COMMA REG COMMA CARDINAL NUMBER •

    $default  redução com regra 43 (jump_stmt)


Estado 146

   46 load_stmt: LOAD_INDEXED REG COMMA REG COMMA CARDINAL NUMBER •

    $default  redução com regra 46 (load_stmt)


Estado 147

   48 store_stmt: STORE_INDEXED REG COMMA REG COMMA CARDINAL NUMBER •

    $default  redução com regra 48 (store_stmt)
