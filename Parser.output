Terminals unused in grammar

    ERROR
    TERNARY
    CARDINAL
    ARROW
    DEFINE
    POINTER
    ADDRESS_OF
    OTHER
    DOT
    QUOTE


State 0 conflicts: 9 shift/reduce
State 16 conflicts: 9 shift/reduce
State 57 conflicts: 13 shift/reduce, 14 reduce/reduce
State 59 conflicts: 13 shift/reduce, 14 reduce/reduce
State 62 conflicts: 13 shift/reduce, 14 reduce/reduce
State 69 conflicts: 13 shift/reduce, 14 reduce/reduce
State 93 conflicts: 9 shift/reduce
State 94 conflicts: 9 shift/reduce
State 97 conflicts: 9 shift/reduce
State 99 conflicts: 9 shift/reduce
State 135 conflicts: 10 shift/reduce
State 190 conflicts: 9 shift/reduce
State 194 conflicts: 9 shift/reduce
State 201 conflicts: 9 shift/reduce
State 211 conflicts: 9 shift/reduce
State 229 conflicts: 9 shift/reduce
State 231 conflicts: 9 shift/reduce
State 251 conflicts: 2 shift/reduce
State 260 conflicts: 1 shift/reduce
State 268 conflicts: 2 reduce/reduce
State 269 conflicts: 9 shift/reduce
State 271 conflicts: 9 shift/reduce
State 279 conflicts: 28 shift/reduce, 14 reduce/reduce
State 282 conflicts: 26 shift/reduce, 14 reduce/reduce
State 290 conflicts: 9 shift/reduce
State 291 conflicts: 1 shift/reduce
State 293 conflicts: 1 shift/reduce
State 303 conflicts: 26 shift/reduce, 14 reduce/reduce
State 317 conflicts: 9 shift/reduce
State 318 conflicts: 9 shift/reduce
State 319 conflicts: 9 shift/reduce
State 320 conflicts: 9 shift/reduce
State 323 conflicts: 9 shift/reduce
State 325 conflicts: 26 shift/reduce, 14 reduce/reduce
State 326 conflicts: 26 shift/reduce, 14 reduce/reduce
State 327 conflicts: 9 shift/reduce
State 328 conflicts: 9 shift/reduce
State 329 conflicts: 27 shift/reduce, 14 reduce/reduce
State 330 conflicts: 9 shift/reduce
State 334 conflicts: 26 shift/reduce, 14 reduce/reduce


Grammar

    0 $accept: Final $end

    1 Final: prog

    2 prog: prog endfile
    3     | prog global_stmt
    4     | global_stmt

    5 global_stmt: func_declaration
    6            | declaration_stmt SEMI
    7            | instantiation_stmt SEMI

    8 stmts: stmts stmt
    9      | stmt

   10 stmt: goto_stmt
   11     | label
   12     | if_stmt
   13     | for_stmt
   14     | while_stmt
   15     | switch_case
   16     | do_while_stmt SEMI
   17     | return_stmt SEMI
   18     | declaration_stmt SEMI
   19     | assignment_stmt SEMI
   20     | instantiation_stmt SEMI
   21     | compound_stmt
   22     | CONTINUE SEMI
   23     | BREAK SEMI

   24 assignment_stmt: ID assign_op expr
   25                | unary_op ID
   26                | ID unary_op
   27                | ID assign_op LEFT_BRACE expr RIGHT_BRACE
   28                | ID LEFT_BRACKET expr RIGHT_BRACKET assign_op expr

   29 declaration_stmt: variable_declaration
   30                 | array_declaration
   31                 | struct_declaration
   32                 | enum_declaration
   33                 | union_declaration
   34                 | typeDef_declaration

   35 variable_declaration: prefixes type ID
   36                     | prefixes type ID assign_op expr

   37 array_declaration: prefixes type ID LEFT_BRACKET expr RIGHT_BRACKET
   38                  | prefixes type ID LEFT_BRACKET expr RIGHT_BRACKET assign_op LEFT_BRACE expr RIGHT_BRACE

   39 func_declaration: prefixes type ID LPAREN func_parameters_declaration RPAREN compound_stmt
   40                 | prefixes type ID LPAREN func_parameters_declaration RPAREN SEMI

   41 func_parameters_declaration: ε
   42                            | func_parameters_declaration COMMA variable_declaration
   43                            | variable_declaration
   44                            | VOID

   45 struct_declaration: STRUCT ID LEFT_BRACE data_struct_stmts RIGHT_BRACE

   46 union_declaration: UNION ID LEFT_BRACE data_struct_stmts RIGHT_BRACE

   47 data_struct_stmts: ε
   48                  | data_struct_stmts declaration_stmt SEMI
   49                  | data_struct_stmts func_declaration SEMI
   50                  | declaration_stmt SEMI
   51                  | func_declaration SEMI

   52 enum_declaration: ENUM ID LEFT_BRACE enum_parameters RIGHT_BRACE

   53 enum_parameters: ε
   54                | enum_parameters COMMA ID
   55                | ID

   56 typeDef_declaration: TYPEDEF enum_declaration ID
   57                    | TYPEDEF ENUM LEFT_BRACE enum_parameters RIGHT_BRACE ID
   58                    | TYPEDEF union_declaration ID
   59                    | TYPEDEF UNION LEFT_BRACE data_struct_stmts RIGHT_BRACE ID
   60                    | TYPEDEF struct_declaration ID
   61                    | TYPEDEF STRUCT LEFT_BRACE data_struct_stmts RIGHT_BRACE ID
   62                    | TYPEDEF type ID

   63 instantiation_stmt: struct_inst
   64                   | union_inst
   65                   | func_inst

   66 struct_inst: STRUCT ID ID

   67 union_inst: UNION ID ID

   68 func_inst: ID LPAREN func_inst_parameters RPAREN

   69 func_inst_parameters: ε
   70                     | func_inst_parameters COMMA expr
   71                     | expr
   72                     | VOID

   73 expr: expr op term
   74     | expr comp_op term
   75     | expr bitwise_op term
   76     | expr logical_op term
   77     | term

   78 term: term prio_op operand
   79     | operand

   80 operand: unary_op factor
   81        | factor unary_op
   82        | type_cast factor
   83        | LOGICAL_NOT factor
   84        | factor

   85 factor: LPAREN expr RPAREN
   86       | NUM
   87       | ID
   88       | FNUM
   89       | func_inst
   90       | size_of_stmt

   91 op: PLUS
   92   | MINUS
   93   | RIGHT_SHIFT
   94   | LEFT_SHIFT

   95 prio_op: TIMES
   96        | OVER
   97        | PERCENT

   98 unary_op: INCREMENT
   99         | DECREMENT

  100 comp_op: GREATER_THAN
  101        | LESS_THAN_OR_EQUAL
  102        | GREATER_THAN_OR_EQUAL
  103        | LESS_THAN
  104        | EQUAL
  105        | NOT_EQUAL

  106 logical_op: LOGICAL_AND
  107           | LOGICAL_OR

  108 bitwise_op: BITWISE_AND
  109           | BITWISE_NOT
  110           | BITWISE_OR
  111           | BITWISE_XOR

  112 assign_op: ASSIGN
  113          | PLUS_ASSIGN
  114          | MINUS_ASSIGN
  115          | MODULUS_ASSIGN
  116          | LEFT_SHIFT_ASSIGN
  117          | RIGHT_SHIFT_ASSIGN
  118          | BITWISE_AND_ASSIGN
  119          | BITWISE_OR_ASSIGN
  120          | BITWISE_XOR_ASSIGN
  121          | MULTIPLY_ASSIGN
  122          | DIVIDE_ASSIGN

  123 compound_stmt: LEFT_BRACE stmts RIGHT_BRACE
  124              | LEFT_BRACE RIGHT_BRACE

  125 if_stmt: IF LPAREN condition RPAREN stmts
  126        | IF LPAREN condition RPAREN stmts elseif_stmt
  127        | IF LPAREN condition RPAREN stmts else_stmt
  128        | IF LPAREN condition RPAREN SEMI

  129 elseif_stmt: elseif_stmt ELSEIF LPAREN condition RPAREN stmts
  130            | ELSEIF LPAREN condition RPAREN stmts
  131            | ELSEIF LPAREN condition RPAREN stmts else_stmt

  132 else_stmt: ELSE stmts

  133 do_while_stmt: DO stmts WHILE LPAREN LPAREN condition RPAREN

  134 while_stmt: WHILE LPAREN condition RPAREN stmts
  135           | WHILE LPAREN condition RPAREN SEMI

  136 for_stmt: FOR LPAREN condition SEMI condition SEMI condition RPAREN stmts
  137         | FOR LPAREN variable_declaration SEMI condition SEMI condition RPAREN stmts

  138 condition: expr
  139          | assignment_stmt

  140 switch_case: SWITCH LPAREN ID RPAREN LEFT_BRACE case_list RIGHT_BRACE
  141            | SWITCH LPAREN ID RPAREN LEFT_BRACE case_list case_default RIGHT_BRACE
  142            | SWITCH LPAREN expr RPAREN LEFT_BRACE case_list RIGHT_BRACE
  143            | SWITCH LPAREN expr RPAREN LEFT_BRACE case_list case_default RIGHT_BRACE

  144 case_list: case_list case
  145          | case

  146 case: CASE NUM COLON stmts BREAK

  147 case_default: DEFAULT COLON stmts BREAK

  148 return_stmt: RETURN expr

  149 goto_stmt: GOTO ID SEMI

  150 size_of_stmt: SIZEOF LPAREN ID RPAREN
  151             | SIZEOF LPAREN type RPAREN
  152             | SIZEOF LPAREN special_type ID RPAREN

  153 label: ID COLON

  154 endfile: ENDFILE

  155 type: INT
  156     | FLOAT
  157     | DOUBLE
  158     | CHAR
  159     | VOID

  160 special_type: STRUCT
  161             | TYPEDEF
  162             | ENUM
  163             | UNION

  164 prefixes: ε
  165         | prefixes prefix
  166         | prefix

  167 prefix: EXTERN
  168       | LONG
  169       | SHORT
  170       | STATIC
  171       | SIGNED
  172       | UNSIGNED
  173       | VOLATILE
  174       | REGISTER
  175       | CONSTANT

  176 type_cast: LPAREN type RPAREN


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ENDFILE (258) 154
    ERROR (259)
    IF (260) 125 126 127 128
    ELSEIF (261) 129 130 131
    ELSE (262) 132
    DO (263) 133
    WHILE (264) 133 134 135
    FOR (265) 136 137
    SWITCH (266) 140 141 142 143
    CASE (267) 146
    DEFAULT (268) 147
    RETURN (269) 148
    BREAK (270) 23 146 147
    INT (271) 155
    FLOAT (272) 156
    DOUBLE (273) 157
    CHAR (274) 158
    VOID (275) 44 72 159
    STRUCT (276) 45 61 66 160
    TYPEDEF (277) 56 57 58 59 60 61 62 161
    CONTINUE (278) 22
    EXTERN (279) 167
    GOTO (280) 149
    LONG (281) 168
    ENUM (282) 52 57 162
    REGISTER (283) 174
    SHORT (284) 169
    SIZEOF (285) 150 151 152
    STATIC (286) 170
    SIGNED (287) 171
    UNION (288) 46 59 67 163
    UNSIGNED (289) 172
    VOLATILE (290) 173
    NUM (291) 86 146
    ID (292) 24 25 26 27 28 35 36 37 38 39 40 45 46 52 54 55 56 57 58 59 60 61 62 66 67 68 87 140 141 149 150 152 153
    FNUM (293) 88
    ASSIGN (294) 112
    PLUS (295) 91
    MINUS (296) 92
    TIMES (297) 95
    OVER (298) 96
    PERCENT (299) 97
    LPAREN (300) 39 40 68 85 125 126 127 128 129 130 131 133 134 135 136 137 140 141 142 143 150 151 152 176
    RPAREN (301) 39 40 68 85 125 126 127 128 129 130 131 133 134 135 136 137 140 141 142 143 150 151 152 176
    LEFT_BRACE (302) 27 38 45 46 52 57 59 61 123 124 140 141 142 143
    RIGHT_BRACE (303) 27 38 45 46 52 57 59 61 123 124 140 141 142 143
    LEFT_BRACKET (304) 28 37 38
    RIGHT_BRACKET (305) 28 37 38
    TERNARY (306)
    SEMI (307) 6 7 16 17 18 19 20 22 23 40 48 49 50 51 128 135 136 137 149
    COLON (308) 146 147 153
    COMMA (309) 42 54 70
    INCREMENT (310) 98
    DECREMENT (311) 99
    BITWISE_AND (312) 108
    BITWISE_OR (313) 110
    BITWISE_NOT (314) 109
    BITWISE_XOR (315) 111
    LOGICAL_NOT (316) 83
    LOGICAL_AND (317) 106
    LOGICAL_OR (318) 107
    EQUAL (319) 104
    NOT_EQUAL (320) 105
    LESS_THAN (321) 103
    GREATER_THAN (322) 100
    LESS_THAN_OR_EQUAL (323) 101
    GREATER_THAN_OR_EQUAL (324) 102
    RIGHT_SHIFT (325) 93
    LEFT_SHIFT (326) 94
    PLUS_ASSIGN (327) 113
    MINUS_ASSIGN (328) 114
    LEFT_SHIFT_ASSIGN (329) 116
    RIGHT_SHIFT_ASSIGN (330) 117
    BITWISE_AND_ASSIGN (331) 118
    BITWISE_OR_ASSIGN (332) 119
    BITWISE_XOR_ASSIGN (333) 120
    MULTIPLY_ASSIGN (334) 121
    DIVIDE_ASSIGN (335) 122
    MODULUS_ASSIGN (336) 115
    CARDINAL (337)
    ARROW (338)
    DEFINE (339)
    CONSTANT (340) 175
    POINTER (341)
    ADDRESS_OF (342)
    OTHER (343)
    DOT (344)
    QUOTE (345)


Nonterminals, with rules where they appear

    $accept (91)
        on left: 0
    Final (92)
        on left: 1
        on right: 0
    prog (93)
        on left: 2 3 4
        on right: 1 2 3
    global_stmt (94)
        on left: 5 6 7
        on right: 3 4
    stmts (95)
        on left: 8 9
        on right: 8 123 125 126 127 129 130 131 132 133 134 136 137 146 147
    stmt (96)
        on left: 10 11 12 13 14 15 16 17 18 19 20 21 22 23
        on right: 8 9
    assignment_stmt (97)
        on left: 24 25 26 27 28
        on right: 19 139
    declaration_stmt (98)
        on left: 29 30 31 32 33 34
        on right: 6 18 48 50
    variable_declaration (99)
        on left: 35 36
        on right: 29 42 43 137
    array_declaration (100)
        on left: 37 38
        on right: 30
    func_declaration (101)
        on left: 39 40
        on right: 5 49 51
    func_parameters_declaration (102)
        on left: 41 42 43 44
        on right: 39 40 42
    struct_declaration (103)
        on left: 45
        on right: 31 60
    union_declaration (104)
        on left: 46
        on right: 33 58
    data_struct_stmts (105)
        on left: 47 48 49 50 51
        on right: 45 46 48 49 59 61
    enum_declaration (106)
        on left: 52
        on right: 32 56
    enum_parameters (107)
        on left: 53 54 55
        on right: 52 54 57
    typeDef_declaration (108)
        on left: 56 57 58 59 60 61 62
        on right: 34
    instantiation_stmt (109)
        on left: 63 64 65
        on right: 7 20
    struct_inst (110)
        on left: 66
        on right: 63
    union_inst (111)
        on left: 67
        on right: 64
    func_inst (112)
        on left: 68
        on right: 65 89
    func_inst_parameters (113)
        on left: 69 70 71 72
        on right: 68 70
    expr (114)
        on left: 73 74 75 76 77
        on right: 24 27 28 36 37 38 70 71 73 74 75 76 85 138 142 143 148
    term (115)
        on left: 78 79
        on right: 73 74 75 76 77 78
    operand (116)
        on left: 80 81 82 83 84
        on right: 78 79
    factor (117)
        on left: 85 86 87 88 89 90
        on right: 80 81 82 83 84
    op (118)
        on left: 91 92 93 94
        on right: 73
    prio_op (119)
        on left: 95 96 97
        on right: 78
    unary_op (120)
        on left: 98 99
        on right: 25 26 80 81
    comp_op (121)
        on left: 100 101 102 103 104 105
        on right: 74
    logical_op (122)
        on left: 106 107
        on right: 76
    bitwise_op (123)
        on left: 108 109 110 111
        on right: 75
    assign_op (124)
        on left: 112 113 114 115 116 117 118 119 120 121 122
        on right: 24 27 28 36 38
    compound_stmt (125)
        on left: 123 124
        on right: 21 39
    if_stmt (126)
        on left: 125 126 127 128
        on right: 12
    elseif_stmt (127)
        on left: 129 130 131
        on right: 126 129
    else_stmt (128)
        on left: 132
        on right: 127 131
    do_while_stmt (129)
        on left: 133
        on right: 16
    while_stmt (130)
        on left: 134 135
        on right: 14
    for_stmt (131)
        on left: 136 137
        on right: 13
    condition (132)
        on left: 138 139
        on right: 125 126 127 128 129 130 131 133 134 135 136 137
    switch_case (133)
        on left: 140 141 142 143
        on right: 15
    case_list (134)
        on left: 144 145
        on right: 140 141 142 143 144
    case (135)
        on left: 146
        on right: 144 145
    case_default (136)
        on left: 147
        on right: 141 143
    return_stmt (137)
        on left: 148
        on right: 17
    goto_stmt (138)
        on left: 149
        on right: 10
    size_of_stmt (139)
        on left: 150 151 152
        on right: 90
    label (140)
        on left: 153
        on right: 11
    endfile (141)
        on left: 154
        on right: 2
    type (142)
        on left: 155 156 157 158 159
        on right: 35 36 37 38 39 40 62 151 176
    special_type (143)
        on left: 160 161 162 163
        on right: 152
    prefixes (144)
        on left: 164 165 166
        on right: 35 36 37 38 39 40 165
    prefix (145)
        on left: 167 168 169 170 171 172 173 174 175
        on right: 165 166
    type_cast (146)
        on left: 176
        on right: 82


State 0

    0 $accept: • Final $end

    STRUCT    shift, and go to state 1
    TYPEDEF   shift, and go to state 2
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    ENUM      shift, and go to state 5
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNION     shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    ID        shift, and go to state 13
    CONSTANT  shift, and go to state 14

    EXTERN    [reduce using rule 164 (prefixes)]
    LONG      [reduce using rule 164 (prefixes)]
    REGISTER  [reduce using rule 164 (prefixes)]
    SHORT     [reduce using rule 164 (prefixes)]
    STATIC    [reduce using rule 164 (prefixes)]
    SIGNED    [reduce using rule 164 (prefixes)]
    UNSIGNED  [reduce using rule 164 (prefixes)]
    VOLATILE  [reduce using rule 164 (prefixes)]
    CONSTANT  [reduce using rule 164 (prefixes)]
    $default  reduce using rule 164 (prefixes)

    Final                 go to state 15
    prog                  go to state 16
    global_stmt           go to state 17
    declaration_stmt      go to state 18
    variable_declaration  go to state 19
    array_declaration     go to state 20
    func_declaration      go to state 21
    struct_declaration    go to state 22
    union_declaration     go to state 23
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    instantiation_stmt    go to state 26
    struct_inst           go to state 27
    union_inst            go to state 28
    func_inst             go to state 29
    prefixes              go to state 30
    prefix                go to state 31


State 1

   45 struct_declaration: STRUCT • ID LEFT_BRACE data_struct_stmts RIGHT_BRACE
   66 struct_inst: STRUCT • ID ID

    ID  shift, and go to state 32


State 2

   56 typeDef_declaration: TYPEDEF • enum_declaration ID
   57                    | TYPEDEF • ENUM LEFT_BRACE enum_parameters RIGHT_BRACE ID
   58                    | TYPEDEF • union_declaration ID
   59                    | TYPEDEF • UNION LEFT_BRACE data_struct_stmts RIGHT_BRACE ID
   60                    | TYPEDEF • struct_declaration ID
   61                    | TYPEDEF • STRUCT LEFT_BRACE data_struct_stmts RIGHT_BRACE ID
   62                    | TYPEDEF • type ID

    INT     shift, and go to state 33
    FLOAT   shift, and go to state 34
    DOUBLE  shift, and go to state 35
    CHAR    shift, and go to state 36
    VOID    shift, and go to state 37
    STRUCT  shift, and go to state 38
    ENUM    shift, and go to state 39
    UNION   shift, and go to state 40

    struct_declaration  go to state 41
    union_declaration   go to state 42
    enum_declaration    go to state 43
    type                go to state 44


State 3

  167 prefix: EXTERN •

    $default  reduce using rule 167 (prefix)


State 4

  168 prefix: LONG •

    $default  reduce using rule 168 (prefix)


State 5

   52 enum_declaration: ENUM • ID LEFT_BRACE enum_parameters RIGHT_BRACE

    ID  shift, and go to state 45


State 6

  174 prefix: REGISTER •

    $default  reduce using rule 174 (prefix)


State 7

  169 prefix: SHORT •

    $default  reduce using rule 169 (prefix)


State 8

  170 prefix: STATIC •

    $default  reduce using rule 170 (prefix)


State 9

  171 prefix: SIGNED •

    $default  reduce using rule 171 (prefix)


State 10

   46 union_declaration: UNION • ID LEFT_BRACE data_struct_stmts RIGHT_BRACE
   67 union_inst: UNION • ID ID

    ID  shift, and go to state 46


State 11

  172 prefix: UNSIGNED •

    $default  reduce using rule 172 (prefix)


State 12

  173 prefix: VOLATILE •

    $default  reduce using rule 173 (prefix)


State 13

   68 func_inst: ID • LPAREN func_inst_parameters RPAREN

    LPAREN  shift, and go to state 47


State 14

  175 prefix: CONSTANT •

    $default  reduce using rule 175 (prefix)


State 15

    0 $accept: Final • $end

    $end  shift, and go to state 48


State 16

    1 Final: prog •
    2 prog: prog • endfile
    3     | prog • global_stmt

    ENDFILE   shift, and go to state 49
    STRUCT    shift, and go to state 1
    TYPEDEF   shift, and go to state 2
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    ENUM      shift, and go to state 5
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNION     shift, and go to state 10
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    ID        shift, and go to state 13
    CONSTANT  shift, and go to state 14

    $end      reduce using rule 1 (Final)
    EXTERN    [reduce using rule 164 (prefixes)]
    LONG      [reduce using rule 164 (prefixes)]
    REGISTER  [reduce using rule 164 (prefixes)]
    SHORT     [reduce using rule 164 (prefixes)]
    STATIC    [reduce using rule 164 (prefixes)]
    SIGNED    [reduce using rule 164 (prefixes)]
    UNSIGNED  [reduce using rule 164 (prefixes)]
    VOLATILE  [reduce using rule 164 (prefixes)]
    CONSTANT  [reduce using rule 164 (prefixes)]
    $default  reduce using rule 164 (prefixes)

    global_stmt           go to state 50
    declaration_stmt      go to state 18
    variable_declaration  go to state 19
    array_declaration     go to state 20
    func_declaration      go to state 21
    struct_declaration    go to state 22
    union_declaration     go to state 23
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    instantiation_stmt    go to state 26
    struct_inst           go to state 27
    union_inst            go to state 28
    func_inst             go to state 29
    endfile               go to state 51
    prefixes              go to state 30
    prefix                go to state 31


State 17

    4 prog: global_stmt •

    $default  reduce using rule 4 (prog)


State 18

    6 global_stmt: declaration_stmt • SEMI

    SEMI  shift, and go to state 52


State 19

   29 declaration_stmt: variable_declaration •

    $default  reduce using rule 29 (declaration_stmt)


State 20

   30 declaration_stmt: array_declaration •

    $default  reduce using rule 30 (declaration_stmt)


State 21

    5 global_stmt: func_declaration •

    $default  reduce using rule 5 (global_stmt)


State 22

   31 declaration_stmt: struct_declaration •

    $default  reduce using rule 31 (declaration_stmt)


State 23

   33 declaration_stmt: union_declaration •

    $default  reduce using rule 33 (declaration_stmt)


State 24

   32 declaration_stmt: enum_declaration •

    $default  reduce using rule 32 (declaration_stmt)


State 25

   34 declaration_stmt: typeDef_declaration •

    $default  reduce using rule 34 (declaration_stmt)


State 26

    7 global_stmt: instantiation_stmt • SEMI

    SEMI  shift, and go to state 53


State 27

   63 instantiation_stmt: struct_inst •

    $default  reduce using rule 63 (instantiation_stmt)


State 28

   64 instantiation_stmt: union_inst •

    $default  reduce using rule 64 (instantiation_stmt)


State 29

   65 instantiation_stmt: func_inst •

    $default  reduce using rule 65 (instantiation_stmt)


State 30

   35 variable_declaration: prefixes • type ID
   36                     | prefixes • type ID assign_op expr
   37 array_declaration: prefixes • type ID LEFT_BRACKET expr RIGHT_BRACKET
   38                  | prefixes • type ID LEFT_BRACKET expr RIGHT_BRACKET assign_op LEFT_BRACE expr RIGHT_BRACE
   39 func_declaration: prefixes • type ID LPAREN func_parameters_declaration RPAREN compound_stmt
   40                 | prefixes • type ID LPAREN func_parameters_declaration RPAREN SEMI
  165 prefixes: prefixes • prefix

    INT       shift, and go to state 33
    FLOAT     shift, and go to state 34
    DOUBLE    shift, and go to state 35
    CHAR      shift, and go to state 36
    VOID      shift, and go to state 37
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    CONSTANT  shift, and go to state 14

    type    go to state 54
    prefix  go to state 55


State 31

  166 prefixes: prefix •

    $default  reduce using rule 166 (prefixes)


State 32

   45 struct_declaration: STRUCT ID • LEFT_BRACE data_struct_stmts RIGHT_BRACE
   66 struct_inst: STRUCT ID • ID

    ID          shift, and go to state 56
    LEFT_BRACE  shift, and go to state 57


State 33

  155 type: INT •

    $default  reduce using rule 155 (type)


State 34

  156 type: FLOAT •

    $default  reduce using rule 156 (type)


State 35

  157 type: DOUBLE •

    $default  reduce using rule 157 (type)


State 36

  158 type: CHAR •

    $default  reduce using rule 158 (type)


State 37

  159 type: VOID •

    $default  reduce using rule 159 (type)


State 38

   45 struct_declaration: STRUCT • ID LEFT_BRACE data_struct_stmts RIGHT_BRACE
   61 typeDef_declaration: TYPEDEF STRUCT • LEFT_BRACE data_struct_stmts RIGHT_BRACE ID

    ID          shift, and go to state 58
    LEFT_BRACE  shift, and go to state 59


State 39

   52 enum_declaration: ENUM • ID LEFT_BRACE enum_parameters RIGHT_BRACE
   57 typeDef_declaration: TYPEDEF ENUM • LEFT_BRACE enum_parameters RIGHT_BRACE ID

    ID          shift, and go to state 45
    LEFT_BRACE  shift, and go to state 60


State 40

   46 union_declaration: UNION • ID LEFT_BRACE data_struct_stmts RIGHT_BRACE
   59 typeDef_declaration: TYPEDEF UNION • LEFT_BRACE data_struct_stmts RIGHT_BRACE ID

    ID          shift, and go to state 61
    LEFT_BRACE  shift, and go to state 62


State 41

   60 typeDef_declaration: TYPEDEF struct_declaration • ID

    ID  shift, and go to state 63


State 42

   58 typeDef_declaration: TYPEDEF union_declaration • ID

    ID  shift, and go to state 64


State 43

   56 typeDef_declaration: TYPEDEF enum_declaration • ID

    ID  shift, and go to state 65


State 44

   62 typeDef_declaration: TYPEDEF type • ID

    ID  shift, and go to state 66


State 45

   52 enum_declaration: ENUM ID • LEFT_BRACE enum_parameters RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 67


State 46

   46 union_declaration: UNION ID • LEFT_BRACE data_struct_stmts RIGHT_BRACE
   67 union_inst: UNION ID • ID

    ID          shift, and go to state 68
    LEFT_BRACE  shift, and go to state 69


State 47

   68 func_inst: ID LPAREN • func_inst_parameters RPAREN

    VOID         shift, and go to state 70
    SIZEOF       shift, and go to state 71
    NUM          shift, and go to state 72
    ID           shift, and go to state 73
    FNUM         shift, and go to state 74
    LPAREN       shift, and go to state 75
    INCREMENT    shift, and go to state 76
    DECREMENT    shift, and go to state 77
    LOGICAL_NOT  shift, and go to state 78

    $default  reduce using rule 69 (func_inst_parameters)

    func_inst             go to state 79
    func_inst_parameters  go to state 80
    expr                  go to state 81
    term                  go to state 82
    operand               go to state 83
    factor                go to state 84
    unary_op              go to state 85
    size_of_stmt          go to state 86
    type_cast             go to state 87


State 48

    0 $accept: Final $end •

    $default  accept


State 49

  154 endfile: ENDFILE •

    $default  reduce using rule 154 (endfile)


State 50

    3 prog: prog global_stmt •

    $default  reduce using rule 3 (prog)


State 51

    2 prog: prog endfile •

    $default  reduce using rule 2 (prog)


State 52

    6 global_stmt: declaration_stmt SEMI •

    $default  reduce using rule 6 (global_stmt)


State 53

    7 global_stmt: instantiation_stmt SEMI •

    $default  reduce using rule 7 (global_stmt)


State 54

   35 variable_declaration: prefixes type • ID
   36                     | prefixes type • ID assign_op expr
   37 array_declaration: prefixes type • ID LEFT_BRACKET expr RIGHT_BRACKET
   38                  | prefixes type • ID LEFT_BRACKET expr RIGHT_BRACKET assign_op LEFT_BRACE expr RIGHT_BRACE
   39 func_declaration: prefixes type • ID LPAREN func_parameters_declaration RPAREN compound_stmt
   40                 | prefixes type • ID LPAREN func_parameters_declaration RPAREN SEMI

    ID  shift, and go to state 88


State 55

  165 prefixes: prefixes prefix •

    $default  reduce using rule 165 (prefixes)


State 56

   66 struct_inst: STRUCT ID ID •

    $default  reduce using rule 66 (struct_inst)


State 57

   45 struct_declaration: STRUCT ID LEFT_BRACE • data_struct_stmts RIGHT_BRACE

    STRUCT    shift, and go to state 89
    TYPEDEF   shift, and go to state 2
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    ENUM      shift, and go to state 5
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNION     shift, and go to state 90
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    CONSTANT  shift, and go to state 14

    INT       reduce using rule 47 (data_struct_stmts)
    INT       [reduce using rule 164 (prefixes)]
    FLOAT     reduce using rule 47 (data_struct_stmts)
    FLOAT     [reduce using rule 164 (prefixes)]
    DOUBLE    reduce using rule 47 (data_struct_stmts)
    DOUBLE    [reduce using rule 164 (prefixes)]
    CHAR      reduce using rule 47 (data_struct_stmts)
    CHAR      [reduce using rule 164 (prefixes)]
    VOID      reduce using rule 47 (data_struct_stmts)
    VOID      [reduce using rule 164 (prefixes)]
    STRUCT    [reduce using rule 47 (data_struct_stmts)]
    TYPEDEF   [reduce using rule 47 (data_struct_stmts)]
    EXTERN    [reduce using rule 47 (data_struct_stmts)]
    EXTERN    [reduce using rule 164 (prefixes)]
    LONG      [reduce using rule 47 (data_struct_stmts)]
    LONG      [reduce using rule 164 (prefixes)]
    ENUM      [reduce using rule 47 (data_struct_stmts)]
    REGISTER  [reduce using rule 47 (data_struct_stmts)]
    REGISTER  [reduce using rule 164 (prefixes)]
    SHORT     [reduce using rule 47 (data_struct_stmts)]
    SHORT     [reduce using rule 164 (prefixes)]
    STATIC    [reduce using rule 47 (data_struct_stmts)]
    STATIC    [reduce using rule 164 (prefixes)]
    SIGNED    [reduce using rule 47 (data_struct_stmts)]
    SIGNED    [reduce using rule 164 (prefixes)]
    UNION     [reduce using rule 47 (data_struct_stmts)]
    UNSIGNED  [reduce using rule 47 (data_struct_stmts)]
    UNSIGNED  [reduce using rule 164 (prefixes)]
    VOLATILE  [reduce using rule 47 (data_struct_stmts)]
    VOLATILE  [reduce using rule 164 (prefixes)]
    CONSTANT  [reduce using rule 47 (data_struct_stmts)]
    CONSTANT  [reduce using rule 164 (prefixes)]
    $default  reduce using rule 47 (data_struct_stmts)

    declaration_stmt      go to state 91
    variable_declaration  go to state 19
    array_declaration     go to state 20
    func_declaration      go to state 92
    struct_declaration    go to state 22
    union_declaration     go to state 23
    data_struct_stmts     go to state 93
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    prefixes              go to state 30
    prefix                go to state 31


State 58

   45 struct_declaration: STRUCT ID • LEFT_BRACE data_struct_stmts RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 57


State 59

   61 typeDef_declaration: TYPEDEF STRUCT LEFT_BRACE • data_struct_stmts RIGHT_BRACE ID

    STRUCT    shift, and go to state 89
    TYPEDEF   shift, and go to state 2
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    ENUM      shift, and go to state 5
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNION     shift, and go to state 90
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    CONSTANT  shift, and go to state 14

    INT       reduce using rule 47 (data_struct_stmts)
    INT       [reduce using rule 164 (prefixes)]
    FLOAT     reduce using rule 47 (data_struct_stmts)
    FLOAT     [reduce using rule 164 (prefixes)]
    DOUBLE    reduce using rule 47 (data_struct_stmts)
    DOUBLE    [reduce using rule 164 (prefixes)]
    CHAR      reduce using rule 47 (data_struct_stmts)
    CHAR      [reduce using rule 164 (prefixes)]
    VOID      reduce using rule 47 (data_struct_stmts)
    VOID      [reduce using rule 164 (prefixes)]
    STRUCT    [reduce using rule 47 (data_struct_stmts)]
    TYPEDEF   [reduce using rule 47 (data_struct_stmts)]
    EXTERN    [reduce using rule 47 (data_struct_stmts)]
    EXTERN    [reduce using rule 164 (prefixes)]
    LONG      [reduce using rule 47 (data_struct_stmts)]
    LONG      [reduce using rule 164 (prefixes)]
    ENUM      [reduce using rule 47 (data_struct_stmts)]
    REGISTER  [reduce using rule 47 (data_struct_stmts)]
    REGISTER  [reduce using rule 164 (prefixes)]
    SHORT     [reduce using rule 47 (data_struct_stmts)]
    SHORT     [reduce using rule 164 (prefixes)]
    STATIC    [reduce using rule 47 (data_struct_stmts)]
    STATIC    [reduce using rule 164 (prefixes)]
    SIGNED    [reduce using rule 47 (data_struct_stmts)]
    SIGNED    [reduce using rule 164 (prefixes)]
    UNION     [reduce using rule 47 (data_struct_stmts)]
    UNSIGNED  [reduce using rule 47 (data_struct_stmts)]
    UNSIGNED  [reduce using rule 164 (prefixes)]
    VOLATILE  [reduce using rule 47 (data_struct_stmts)]
    VOLATILE  [reduce using rule 164 (prefixes)]
    CONSTANT  [reduce using rule 47 (data_struct_stmts)]
    CONSTANT  [reduce using rule 164 (prefixes)]
    $default  reduce using rule 47 (data_struct_stmts)

    declaration_stmt      go to state 91
    variable_declaration  go to state 19
    array_declaration     go to state 20
    func_declaration      go to state 92
    struct_declaration    go to state 22
    union_declaration     go to state 23
    data_struct_stmts     go to state 94
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    prefixes              go to state 30
    prefix                go to state 31


State 60

   57 typeDef_declaration: TYPEDEF ENUM LEFT_BRACE • enum_parameters RIGHT_BRACE ID

    ID  shift, and go to state 95

    $default  reduce using rule 53 (enum_parameters)

    enum_parameters  go to state 96


State 61

   46 union_declaration: UNION ID • LEFT_BRACE data_struct_stmts RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 69


State 62

   59 typeDef_declaration: TYPEDEF UNION LEFT_BRACE • data_struct_stmts RIGHT_BRACE ID

    STRUCT    shift, and go to state 89
    TYPEDEF   shift, and go to state 2
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    ENUM      shift, and go to state 5
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNION     shift, and go to state 90
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    CONSTANT  shift, and go to state 14

    INT       reduce using rule 47 (data_struct_stmts)
    INT       [reduce using rule 164 (prefixes)]
    FLOAT     reduce using rule 47 (data_struct_stmts)
    FLOAT     [reduce using rule 164 (prefixes)]
    DOUBLE    reduce using rule 47 (data_struct_stmts)
    DOUBLE    [reduce using rule 164 (prefixes)]
    CHAR      reduce using rule 47 (data_struct_stmts)
    CHAR      [reduce using rule 164 (prefixes)]
    VOID      reduce using rule 47 (data_struct_stmts)
    VOID      [reduce using rule 164 (prefixes)]
    STRUCT    [reduce using rule 47 (data_struct_stmts)]
    TYPEDEF   [reduce using rule 47 (data_struct_stmts)]
    EXTERN    [reduce using rule 47 (data_struct_stmts)]
    EXTERN    [reduce using rule 164 (prefixes)]
    LONG      [reduce using rule 47 (data_struct_stmts)]
    LONG      [reduce using rule 164 (prefixes)]
    ENUM      [reduce using rule 47 (data_struct_stmts)]
    REGISTER  [reduce using rule 47 (data_struct_stmts)]
    REGISTER  [reduce using rule 164 (prefixes)]
    SHORT     [reduce using rule 47 (data_struct_stmts)]
    SHORT     [reduce using rule 164 (prefixes)]
    STATIC    [reduce using rule 47 (data_struct_stmts)]
    STATIC    [reduce using rule 164 (prefixes)]
    SIGNED    [reduce using rule 47 (data_struct_stmts)]
    SIGNED    [reduce using rule 164 (prefixes)]
    UNION     [reduce using rule 47 (data_struct_stmts)]
    UNSIGNED  [reduce using rule 47 (data_struct_stmts)]
    UNSIGNED  [reduce using rule 164 (prefixes)]
    VOLATILE  [reduce using rule 47 (data_struct_stmts)]
    VOLATILE  [reduce using rule 164 (prefixes)]
    CONSTANT  [reduce using rule 47 (data_struct_stmts)]
    CONSTANT  [reduce using rule 164 (prefixes)]
    $default  reduce using rule 47 (data_struct_stmts)

    declaration_stmt      go to state 91
    variable_declaration  go to state 19
    array_declaration     go to state 20
    func_declaration      go to state 92
    struct_declaration    go to state 22
    union_declaration     go to state 23
    data_struct_stmts     go to state 97
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    prefixes              go to state 30
    prefix                go to state 31


State 63

   60 typeDef_declaration: TYPEDEF struct_declaration ID •

    $default  reduce using rule 60 (typeDef_declaration)


State 64

   58 typeDef_declaration: TYPEDEF union_declaration ID •

    $default  reduce using rule 58 (typeDef_declaration)


State 65

   56 typeDef_declaration: TYPEDEF enum_declaration ID •

    $default  reduce using rule 56 (typeDef_declaration)


State 66

   62 typeDef_declaration: TYPEDEF type ID •

    $default  reduce using rule 62 (typeDef_declaration)


State 67

   52 enum_declaration: ENUM ID LEFT_BRACE • enum_parameters RIGHT_BRACE

    ID  shift, and go to state 95

    $default  reduce using rule 53 (enum_parameters)

    enum_parameters  go to state 98


State 68

   67 union_inst: UNION ID ID •

    $default  reduce using rule 67 (union_inst)


State 69

   46 union_declaration: UNION ID LEFT_BRACE • data_struct_stmts RIGHT_BRACE

    STRUCT    shift, and go to state 89
    TYPEDEF   shift, and go to state 2
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    ENUM      shift, and go to state 5
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNION     shift, and go to state 90
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    CONSTANT  shift, and go to state 14

    INT       reduce using rule 47 (data_struct_stmts)
    INT       [reduce using rule 164 (prefixes)]
    FLOAT     reduce using rule 47 (data_struct_stmts)
    FLOAT     [reduce using rule 164 (prefixes)]
    DOUBLE    reduce using rule 47 (data_struct_stmts)
    DOUBLE    [reduce using rule 164 (prefixes)]
    CHAR      reduce using rule 47 (data_struct_stmts)
    CHAR      [reduce using rule 164 (prefixes)]
    VOID      reduce using rule 47 (data_struct_stmts)
    VOID      [reduce using rule 164 (prefixes)]
    STRUCT    [reduce using rule 47 (data_struct_stmts)]
    TYPEDEF   [reduce using rule 47 (data_struct_stmts)]
    EXTERN    [reduce using rule 47 (data_struct_stmts)]
    EXTERN    [reduce using rule 164 (prefixes)]
    LONG      [reduce using rule 47 (data_struct_stmts)]
    LONG      [reduce using rule 164 (prefixes)]
    ENUM      [reduce using rule 47 (data_struct_stmts)]
    REGISTER  [reduce using rule 47 (data_struct_stmts)]
    REGISTER  [reduce using rule 164 (prefixes)]
    SHORT     [reduce using rule 47 (data_struct_stmts)]
    SHORT     [reduce using rule 164 (prefixes)]
    STATIC    [reduce using rule 47 (data_struct_stmts)]
    STATIC    [reduce using rule 164 (prefixes)]
    SIGNED    [reduce using rule 47 (data_struct_stmts)]
    SIGNED    [reduce using rule 164 (prefixes)]
    UNION     [reduce using rule 47 (data_struct_stmts)]
    UNSIGNED  [reduce using rule 47 (data_struct_stmts)]
    UNSIGNED  [reduce using rule 164 (prefixes)]
    VOLATILE  [reduce using rule 47 (data_struct_stmts)]
    VOLATILE  [reduce using rule 164 (prefixes)]
    CONSTANT  [reduce using rule 47 (data_struct_stmts)]
    CONSTANT  [reduce using rule 164 (prefixes)]
    $default  reduce using rule 47 (data_struct_stmts)

    declaration_stmt      go to state 91
    variable_declaration  go to state 19
    array_declaration     go to state 20
    func_declaration      go to state 92
    struct_declaration    go to state 22
    union_declaration     go to state 23
    data_struct_stmts     go to state 99
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    prefixes              go to state 30
    prefix                go to state 31


State 70

   72 func_inst_parameters: VOID •

    $default  reduce using rule 72 (func_inst_parameters)


State 71

  150 size_of_stmt: SIZEOF • LPAREN ID RPAREN
  151             | SIZEOF • LPAREN type RPAREN
  152             | SIZEOF • LPAREN special_type ID RPAREN

    LPAREN  shift, and go to state 100


State 72

   86 factor: NUM •

    $default  reduce using rule 86 (factor)


State 73

   68 func_inst: ID • LPAREN func_inst_parameters RPAREN
   87 factor: ID •

    LPAREN  shift, and go to state 47

    $default  reduce using rule 87 (factor)


State 74

   88 factor: FNUM •

    $default  reduce using rule 88 (factor)


State 75

   85 factor: LPAREN • expr RPAREN
  176 type_cast: LPAREN • type RPAREN

    INT          shift, and go to state 33
    FLOAT        shift, and go to state 34
    DOUBLE       shift, and go to state 35
    CHAR         shift, and go to state 36
    VOID         shift, and go to state 37
    SIZEOF       shift, and go to state 71
    NUM          shift, and go to state 72
    ID           shift, and go to state 73
    FNUM         shift, and go to state 74
    LPAREN       shift, and go to state 75
    INCREMENT    shift, and go to state 76
    DECREMENT    shift, and go to state 77
    LOGICAL_NOT  shift, and go to state 78

    func_inst     go to state 79
    expr          go to state 101
    term          go to state 82
    operand       go to state 83
    factor        go to state 84
    unary_op      go to state 85
    size_of_stmt  go to state 86
    type          go to state 102
    type_cast     go to state 87


State 76

   98 unary_op: INCREMENT •

    $default  reduce using rule 98 (unary_op)


State 77

   99 unary_op: DECREMENT •

    $default  reduce using rule 99 (unary_op)


State 78

   83 operand: LOGICAL_NOT • factor

    SIZEOF  shift, and go to state 71
    NUM     shift, and go to state 72
    ID      shift, and go to state 73
    FNUM    shift, and go to state 74
    LPAREN  shift, and go to state 103

    func_inst     go to state 79
    factor        go to state 104
    size_of_stmt  go to state 86


State 79

   89 factor: func_inst •

    $default  reduce using rule 89 (factor)


State 80

   68 func_inst: ID LPAREN func_inst_parameters • RPAREN
   70 func_inst_parameters: func_inst_parameters • COMMA expr

    RPAREN  shift, and go to state 105
    COMMA   shift, and go to state 106


State 81

   71 func_inst_parameters: expr •
   73 expr: expr • op term
   74     | expr • comp_op term
   75     | expr • bitwise_op term
   76     | expr • logical_op term

    PLUS                   shift, and go to state 107
    MINUS                  shift, and go to state 108
    BITWISE_AND            shift, and go to state 109
    BITWISE_OR             shift, and go to state 110
    BITWISE_NOT            shift, and go to state 111
    BITWISE_XOR            shift, and go to state 112
    LOGICAL_AND            shift, and go to state 113
    LOGICAL_OR             shift, and go to state 114
    EQUAL                  shift, and go to state 115
    NOT_EQUAL              shift, and go to state 116
    LESS_THAN              shift, and go to state 117
    GREATER_THAN           shift, and go to state 118
    LESS_THAN_OR_EQUAL     shift, and go to state 119
    GREATER_THAN_OR_EQUAL  shift, and go to state 120
    RIGHT_SHIFT            shift, and go to state 121
    LEFT_SHIFT             shift, and go to state 122

    $default  reduce using rule 71 (func_inst_parameters)

    op          go to state 123
    comp_op     go to state 124
    logical_op  go to state 125
    bitwise_op  go to state 126


State 82

   77 expr: term •
   78 term: term • prio_op operand

    TIMES    shift, and go to state 127
    OVER     shift, and go to state 128
    PERCENT  shift, and go to state 129

    $default  reduce using rule 77 (expr)

    prio_op  go to state 130


State 83

   79 term: operand •

    $default  reduce using rule 79 (term)


State 84

   81 operand: factor • unary_op
   84        | factor •

    INCREMENT  shift, and go to state 76
    DECREMENT  shift, and go to state 77

    $default  reduce using rule 84 (operand)

    unary_op  go to state 131


State 85

   80 operand: unary_op • factor

    SIZEOF  shift, and go to state 71
    NUM     shift, and go to state 72
    ID      shift, and go to state 73
    FNUM    shift, and go to state 74
    LPAREN  shift, and go to state 103

    func_inst     go to state 79
    factor        go to state 132
    size_of_stmt  go to state 86


State 86

   90 factor: size_of_stmt •

    $default  reduce using rule 90 (factor)


State 87

   82 operand: type_cast • factor

    SIZEOF  shift, and go to state 71
    NUM     shift, and go to state 72
    ID      shift, and go to state 73
    FNUM    shift, and go to state 74
    LPAREN  shift, and go to state 103

    func_inst     go to state 79
    factor        go to state 133
    size_of_stmt  go to state 86


State 88

   35 variable_declaration: prefixes type ID •
   36                     | prefixes type ID • assign_op expr
   37 array_declaration: prefixes type ID • LEFT_BRACKET expr RIGHT_BRACKET
   38                  | prefixes type ID • LEFT_BRACKET expr RIGHT_BRACKET assign_op LEFT_BRACE expr RIGHT_BRACE
   39 func_declaration: prefixes type ID • LPAREN func_parameters_declaration RPAREN compound_stmt
   40                 | prefixes type ID • LPAREN func_parameters_declaration RPAREN SEMI

    ASSIGN              shift, and go to state 134
    LPAREN              shift, and go to state 135
    LEFT_BRACKET        shift, and go to state 136
    PLUS_ASSIGN         shift, and go to state 137
    MINUS_ASSIGN        shift, and go to state 138
    LEFT_SHIFT_ASSIGN   shift, and go to state 139
    RIGHT_SHIFT_ASSIGN  shift, and go to state 140
    BITWISE_AND_ASSIGN  shift, and go to state 141
    BITWISE_OR_ASSIGN   shift, and go to state 142
    BITWISE_XOR_ASSIGN  shift, and go to state 143
    MULTIPLY_ASSIGN     shift, and go to state 144
    DIVIDE_ASSIGN       shift, and go to state 145
    MODULUS_ASSIGN      shift, and go to state 146

    $default  reduce using rule 35 (variable_declaration)

    assign_op  go to state 147


State 89

   45 struct_declaration: STRUCT • ID LEFT_BRACE data_struct_stmts RIGHT_BRACE

    ID  shift, and go to state 58


State 90

   46 union_declaration: UNION • ID LEFT_BRACE data_struct_stmts RIGHT_BRACE

    ID  shift, and go to state 61


State 91

   50 data_struct_stmts: declaration_stmt • SEMI

    SEMI  shift, and go to state 148


State 92

   51 data_struct_stmts: func_declaration • SEMI

    SEMI  shift, and go to state 149


State 93

   45 struct_declaration: STRUCT ID LEFT_BRACE data_struct_stmts • RIGHT_BRACE
   48 data_struct_stmts: data_struct_stmts • declaration_stmt SEMI
   49                  | data_struct_stmts • func_declaration SEMI

    STRUCT       shift, and go to state 89
    TYPEDEF      shift, and go to state 2
    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    ENUM         shift, and go to state 5
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNION        shift, and go to state 90
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    RIGHT_BRACE  shift, and go to state 150
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 164 (prefixes)]
    LONG      [reduce using rule 164 (prefixes)]
    REGISTER  [reduce using rule 164 (prefixes)]
    SHORT     [reduce using rule 164 (prefixes)]
    STATIC    [reduce using rule 164 (prefixes)]
    SIGNED    [reduce using rule 164 (prefixes)]
    UNSIGNED  [reduce using rule 164 (prefixes)]
    VOLATILE  [reduce using rule 164 (prefixes)]
    CONSTANT  [reduce using rule 164 (prefixes)]
    $default  reduce using rule 164 (prefixes)

    declaration_stmt      go to state 151
    variable_declaration  go to state 19
    array_declaration     go to state 20
    func_declaration      go to state 152
    struct_declaration    go to state 22
    union_declaration     go to state 23
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    prefixes              go to state 30
    prefix                go to state 31


State 94

   48 data_struct_stmts: data_struct_stmts • declaration_stmt SEMI
   49                  | data_struct_stmts • func_declaration SEMI
   61 typeDef_declaration: TYPEDEF STRUCT LEFT_BRACE data_struct_stmts • RIGHT_BRACE ID

    STRUCT       shift, and go to state 89
    TYPEDEF      shift, and go to state 2
    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    ENUM         shift, and go to state 5
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNION        shift, and go to state 90
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    RIGHT_BRACE  shift, and go to state 153
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 164 (prefixes)]
    LONG      [reduce using rule 164 (prefixes)]
    REGISTER  [reduce using rule 164 (prefixes)]
    SHORT     [reduce using rule 164 (prefixes)]
    STATIC    [reduce using rule 164 (prefixes)]
    SIGNED    [reduce using rule 164 (prefixes)]
    UNSIGNED  [reduce using rule 164 (prefixes)]
    VOLATILE  [reduce using rule 164 (prefixes)]
    CONSTANT  [reduce using rule 164 (prefixes)]
    $default  reduce using rule 164 (prefixes)

    declaration_stmt      go to state 151
    variable_declaration  go to state 19
    array_declaration     go to state 20
    func_declaration      go to state 152
    struct_declaration    go to state 22
    union_declaration     go to state 23
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    prefixes              go to state 30
    prefix                go to state 31


State 95

   55 enum_parameters: ID •

    $default  reduce using rule 55 (enum_parameters)


State 96

   54 enum_parameters: enum_parameters • COMMA ID
   57 typeDef_declaration: TYPEDEF ENUM LEFT_BRACE enum_parameters • RIGHT_BRACE ID

    RIGHT_BRACE  shift, and go to state 154
    COMMA        shift, and go to state 155


State 97

   48 data_struct_stmts: data_struct_stmts • declaration_stmt SEMI
   49                  | data_struct_stmts • func_declaration SEMI
   59 typeDef_declaration: TYPEDEF UNION LEFT_BRACE data_struct_stmts • RIGHT_BRACE ID

    STRUCT       shift, and go to state 89
    TYPEDEF      shift, and go to state 2
    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    ENUM         shift, and go to state 5
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNION        shift, and go to state 90
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    RIGHT_BRACE  shift, and go to state 156
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 164 (prefixes)]
    LONG      [reduce using rule 164 (prefixes)]
    REGISTER  [reduce using rule 164 (prefixes)]
    SHORT     [reduce using rule 164 (prefixes)]
    STATIC    [reduce using rule 164 (prefixes)]
    SIGNED    [reduce using rule 164 (prefixes)]
    UNSIGNED  [reduce using rule 164 (prefixes)]
    VOLATILE  [reduce using rule 164 (prefixes)]
    CONSTANT  [reduce using rule 164 (prefixes)]
    $default  reduce using rule 164 (prefixes)

    declaration_stmt      go to state 151
    variable_declaration  go to state 19
    array_declaration     go to state 20
    func_declaration      go to state 152
    struct_declaration    go to state 22
    union_declaration     go to state 23
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    prefixes              go to state 30
    prefix                go to state 31


State 98

   52 enum_declaration: ENUM ID LEFT_BRACE enum_parameters • RIGHT_BRACE
   54 enum_parameters: enum_parameters • COMMA ID

    RIGHT_BRACE  shift, and go to state 157
    COMMA        shift, and go to state 155


State 99

   46 union_declaration: UNION ID LEFT_BRACE data_struct_stmts • RIGHT_BRACE
   48 data_struct_stmts: data_struct_stmts • declaration_stmt SEMI
   49                  | data_struct_stmts • func_declaration SEMI

    STRUCT       shift, and go to state 89
    TYPEDEF      shift, and go to state 2
    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    ENUM         shift, and go to state 5
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNION        shift, and go to state 90
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    RIGHT_BRACE  shift, and go to state 158
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 164 (prefixes)]
    LONG      [reduce using rule 164 (prefixes)]
    REGISTER  [reduce using rule 164 (prefixes)]
    SHORT     [reduce using rule 164 (prefixes)]
    STATIC    [reduce using rule 164 (prefixes)]
    SIGNED    [reduce using rule 164 (prefixes)]
    UNSIGNED  [reduce using rule 164 (prefixes)]
    VOLATILE  [reduce using rule 164 (prefixes)]
    CONSTANT  [reduce using rule 164 (prefixes)]
    $default  reduce using rule 164 (prefixes)

    declaration_stmt      go to state 151
    variable_declaration  go to state 19
    array_declaration     go to state 20
    func_declaration      go to state 152
    struct_declaration    go to state 22
    union_declaration     go to state 23
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    prefixes              go to state 30
    prefix                go to state 31


State 100

  150 size_of_stmt: SIZEOF LPAREN • ID RPAREN
  151             | SIZEOF LPAREN • type RPAREN
  152             | SIZEOF LPAREN • special_type ID RPAREN

    INT      shift, and go to state 33
    FLOAT    shift, and go to state 34
    DOUBLE   shift, and go to state 35
    CHAR     shift, and go to state 36
    VOID     shift, and go to state 37
    STRUCT   shift, and go to state 159
    TYPEDEF  shift, and go to state 160
    ENUM     shift, and go to state 161
    UNION    shift, and go to state 162
    ID       shift, and go to state 163

    type          go to state 164
    special_type  go to state 165


State 101

   73 expr: expr • op term
   74     | expr • comp_op term
   75     | expr • bitwise_op term
   76     | expr • logical_op term
   85 factor: LPAREN expr • RPAREN

    PLUS                   shift, and go to state 107
    MINUS                  shift, and go to state 108
    RPAREN                 shift, and go to state 166
    BITWISE_AND            shift, and go to state 109
    BITWISE_OR             shift, and go to state 110
    BITWISE_NOT            shift, and go to state 111
    BITWISE_XOR            shift, and go to state 112
    LOGICAL_AND            shift, and go to state 113
    LOGICAL_OR             shift, and go to state 114
    EQUAL                  shift, and go to state 115
    NOT_EQUAL              shift, and go to state 116
    LESS_THAN              shift, and go to state 117
    GREATER_THAN           shift, and go to state 118
    LESS_THAN_OR_EQUAL     shift, and go to state 119
    GREATER_THAN_OR_EQUAL  shift, and go to state 120
    RIGHT_SHIFT            shift, and go to state 121
    LEFT_SHIFT             shift, and go to state 122

    op          go to state 123
    comp_op     go to state 124
    logical_op  go to state 125
    bitwise_op  go to state 126


State 102

  176 type_cast: LPAREN type • RPAREN

    RPAREN  shift, and go to state 167


State 103

   85 factor: LPAREN • expr RPAREN

    SIZEOF       shift, and go to state 71
    NUM          shift, and go to state 72
    ID           shift, and go to state 73
    FNUM         shift, and go to state 74
    LPAREN       shift, and go to state 75
    INCREMENT    shift, and go to state 76
    DECREMENT    shift, and go to state 77
    LOGICAL_NOT  shift, and go to state 78

    func_inst     go to state 79
    expr          go to state 101
    term          go to state 82
    operand       go to state 83
    factor        go to state 84
    unary_op      go to state 85
    size_of_stmt  go to state 86
    type_cast     go to state 87


State 104

   83 operand: LOGICAL_NOT factor •

    $default  reduce using rule 83 (operand)


State 105

   68 func_inst: ID LPAREN func_inst_parameters RPAREN •

    $default  reduce using rule 68 (func_inst)


State 106

   70 func_inst_parameters: func_inst_parameters COMMA • expr

    SIZEOF       shift, and go to state 71
    NUM          shift, and go to state 72
    ID           shift, and go to state 73
    FNUM         shift, and go to state 74
    LPAREN       shift, and go to state 75
    INCREMENT    shift, and go to state 76
    DECREMENT    shift, and go to state 77
    LOGICAL_NOT  shift, and go to state 78

    func_inst     go to state 79
    expr          go to state 168
    term          go to state 82
    operand       go to state 83
    factor        go to state 84
    unary_op      go to state 85
    size_of_stmt  go to state 86
    type_cast     go to state 87


State 107

   91 op: PLUS •

    $default  reduce using rule 91 (op)


State 108

   92 op: MINUS •

    $default  reduce using rule 92 (op)


State 109

  108 bitwise_op: BITWISE_AND •

    $default  reduce using rule 108 (bitwise_op)


State 110

  110 bitwise_op: BITWISE_OR •

    $default  reduce using rule 110 (bitwise_op)


State 111

  109 bitwise_op: BITWISE_NOT •

    $default  reduce using rule 109 (bitwise_op)


State 112

  111 bitwise_op: BITWISE_XOR •

    $default  reduce using rule 111 (bitwise_op)


State 113

  106 logical_op: LOGICAL_AND •

    $default  reduce using rule 106 (logical_op)


State 114

  107 logical_op: LOGICAL_OR •

    $default  reduce using rule 107 (logical_op)


State 115

  104 comp_op: EQUAL •

    $default  reduce using rule 104 (comp_op)


State 116

  105 comp_op: NOT_EQUAL •

    $default  reduce using rule 105 (comp_op)


State 117

  103 comp_op: LESS_THAN •

    $default  reduce using rule 103 (comp_op)


State 118

  100 comp_op: GREATER_THAN •

    $default  reduce using rule 100 (comp_op)


State 119

  101 comp_op: LESS_THAN_OR_EQUAL •

    $default  reduce using rule 101 (comp_op)


State 120

  102 comp_op: GREATER_THAN_OR_EQUAL •

    $default  reduce using rule 102 (comp_op)


State 121

   93 op: RIGHT_SHIFT •

    $default  reduce using rule 93 (op)


State 122

   94 op: LEFT_SHIFT •

    $default  reduce using rule 94 (op)


State 123

   73 expr: expr op • term

    SIZEOF       shift, and go to state 71
    NUM          shift, and go to state 72
    ID           shift, and go to state 73
    FNUM         shift, and go to state 74
    LPAREN       shift, and go to state 75
    INCREMENT    shift, and go to state 76
    DECREMENT    shift, and go to state 77
    LOGICAL_NOT  shift, and go to state 78

    func_inst     go to state 79
    term          go to state 169
    operand       go to state 83
    factor        go to state 84
    unary_op      go to state 85
    size_of_stmt  go to state 86
    type_cast     go to state 87


State 124

   74 expr: expr comp_op • term

    SIZEOF       shift, and go to state 71
    NUM          shift, and go to state 72
    ID           shift, and go to state 73
    FNUM         shift, and go to state 74
    LPAREN       shift, and go to state 75
    INCREMENT    shift, and go to state 76
    DECREMENT    shift, and go to state 77
    LOGICAL_NOT  shift, and go to state 78

    func_inst     go to state 79
    term          go to state 170
    operand       go to state 83
    factor        go to state 84
    unary_op      go to state 85
    size_of_stmt  go to state 86
    type_cast     go to state 87


State 125

   76 expr: expr logical_op • term

    SIZEOF       shift, and go to state 71
    NUM          shift, and go to state 72
    ID           shift, and go to state 73
    FNUM         shift, and go to state 74
    LPAREN       shift, and go to state 75
    INCREMENT    shift, and go to state 76
    DECREMENT    shift, and go to state 77
    LOGICAL_NOT  shift, and go to state 78

    func_inst     go to state 79
    term          go to state 171
    operand       go to state 83
    factor        go to state 84
    unary_op      go to state 85
    size_of_stmt  go to state 86
    type_cast     go to state 87


State 126

   75 expr: expr bitwise_op • term

    SIZEOF       shift, and go to state 71
    NUM          shift, and go to state 72
    ID           shift, and go to state 73
    FNUM         shift, and go to state 74
    LPAREN       shift, and go to state 75
    INCREMENT    shift, and go to state 76
    DECREMENT    shift, and go to state 77
    LOGICAL_NOT  shift, and go to state 78

    func_inst     go to state 79
    term          go to state 172
    operand       go to state 83
    factor        go to state 84
    unary_op      go to state 85
    size_of_stmt  go to state 86
    type_cast     go to state 87


State 127

   95 prio_op: TIMES •

    $default  reduce using rule 95 (prio_op)


State 128

   96 prio_op: OVER •

    $default  reduce using rule 96 (prio_op)


State 129

   97 prio_op: PERCENT •

    $default  reduce using rule 97 (prio_op)


State 130

   78 term: term prio_op • operand

    SIZEOF       shift, and go to state 71
    NUM          shift, and go to state 72
    ID           shift, and go to state 73
    FNUM         shift, and go to state 74
    LPAREN       shift, and go to state 75
    INCREMENT    shift, and go to state 76
    DECREMENT    shift, and go to state 77
    LOGICAL_NOT  shift, and go to state 78

    func_inst     go to state 79
    operand       go to state 173
    factor        go to state 84
    unary_op      go to state 85
    size_of_stmt  go to state 86
    type_cast     go to state 87


State 131

   81 operand: factor unary_op •

    $default  reduce using rule 81 (operand)


State 132

   80 operand: unary_op factor •

    $default  reduce using rule 80 (operand)


State 133

   82 operand: type_cast factor •

    $default  reduce using rule 82 (operand)


State 134

  112 assign_op: ASSIGN •

    $default  reduce using rule 112 (assign_op)


State 135

   39 func_declaration: prefixes type ID LPAREN • func_parameters_declaration RPAREN compound_stmt
   40                 | prefixes type ID LPAREN • func_parameters_declaration RPAREN SEMI

    VOID      shift, and go to state 174
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    CONSTANT  shift, and go to state 14

    VOID      [reduce using rule 164 (prefixes)]
    EXTERN    [reduce using rule 164 (prefixes)]
    LONG      [reduce using rule 164 (prefixes)]
    REGISTER  [reduce using rule 164 (prefixes)]
    SHORT     [reduce using rule 164 (prefixes)]
    STATIC    [reduce using rule 164 (prefixes)]
    SIGNED    [reduce using rule 164 (prefixes)]
    UNSIGNED  [reduce using rule 164 (prefixes)]
    VOLATILE  [reduce using rule 164 (prefixes)]
    RPAREN    reduce using rule 41 (func_parameters_declaration)
    COMMA     reduce using rule 41 (func_parameters_declaration)
    CONSTANT  [reduce using rule 164 (prefixes)]
    $default  reduce using rule 164 (prefixes)

    variable_declaration         go to state 175
    func_parameters_declaration  go to state 176
    prefixes                     go to state 177
    prefix                       go to state 31


State 136

   37 array_declaration: prefixes type ID LEFT_BRACKET • expr RIGHT_BRACKET
   38                  | prefixes type ID LEFT_BRACKET • expr RIGHT_BRACKET assign_op LEFT_BRACE expr RIGHT_BRACE

    SIZEOF       shift, and go to state 71
    NUM          shift, and go to state 72
    ID           shift, and go to state 73
    FNUM         shift, and go to state 74
    LPAREN       shift, and go to state 75
    INCREMENT    shift, and go to state 76
    DECREMENT    shift, and go to state 77
    LOGICAL_NOT  shift, and go to state 78

    func_inst     go to state 79
    expr          go to state 178
    term          go to state 82
    operand       go to state 83
    factor        go to state 84
    unary_op      go to state 85
    size_of_stmt  go to state 86
    type_cast     go to state 87


State 137

  113 assign_op: PLUS_ASSIGN •

    $default  reduce using rule 113 (assign_op)


State 138

  114 assign_op: MINUS_ASSIGN •

    $default  reduce using rule 114 (assign_op)


State 139

  116 assign_op: LEFT_SHIFT_ASSIGN •

    $default  reduce using rule 116 (assign_op)


State 140

  117 assign_op: RIGHT_SHIFT_ASSIGN •

    $default  reduce using rule 117 (assign_op)


State 141

  118 assign_op: BITWISE_AND_ASSIGN •

    $default  reduce using rule 118 (assign_op)


State 142

  119 assign_op: BITWISE_OR_ASSIGN •

    $default  reduce using rule 119 (assign_op)


State 143

  120 assign_op: BITWISE_XOR_ASSIGN •

    $default  reduce using rule 120 (assign_op)


State 144

  121 assign_op: MULTIPLY_ASSIGN •

    $default  reduce using rule 121 (assign_op)


State 145

  122 assign_op: DIVIDE_ASSIGN •

    $default  reduce using rule 122 (assign_op)


State 146

  115 assign_op: MODULUS_ASSIGN •

    $default  reduce using rule 115 (assign_op)


State 147

   36 variable_declaration: prefixes type ID assign_op • expr

    SIZEOF       shift, and go to state 71
    NUM          shift, and go to state 72
    ID           shift, and go to state 73
    FNUM         shift, and go to state 74
    LPAREN       shift, and go to state 75
    INCREMENT    shift, and go to state 76
    DECREMENT    shift, and go to state 77
    LOGICAL_NOT  shift, and go to state 78

    func_inst     go to state 79
    expr          go to state 179
    term          go to state 82
    operand       go to state 83
    factor        go to state 84
    unary_op      go to state 85
    size_of_stmt  go to state 86
    type_cast     go to state 87


State 148

   50 data_struct_stmts: declaration_stmt SEMI •

    $default  reduce using rule 50 (data_struct_stmts)


State 149

   51 data_struct_stmts: func_declaration SEMI •

    $default  reduce using rule 51 (data_struct_stmts)


State 150

   45 struct_declaration: STRUCT ID LEFT_BRACE data_struct_stmts RIGHT_BRACE •

    $default  reduce using rule 45 (struct_declaration)


State 151

   48 data_struct_stmts: data_struct_stmts declaration_stmt • SEMI

    SEMI  shift, and go to state 180


State 152

   49 data_struct_stmts: data_struct_stmts func_declaration • SEMI

    SEMI  shift, and go to state 181


State 153

   61 typeDef_declaration: TYPEDEF STRUCT LEFT_BRACE data_struct_stmts RIGHT_BRACE • ID

    ID  shift, and go to state 182


State 154

   57 typeDef_declaration: TYPEDEF ENUM LEFT_BRACE enum_parameters RIGHT_BRACE • ID

    ID  shift, and go to state 183


State 155

   54 enum_parameters: enum_parameters COMMA • ID

    ID  shift, and go to state 184


State 156

   59 typeDef_declaration: TYPEDEF UNION LEFT_BRACE data_struct_stmts RIGHT_BRACE • ID

    ID  shift, and go to state 185


State 157

   52 enum_declaration: ENUM ID LEFT_BRACE enum_parameters RIGHT_BRACE •

    $default  reduce using rule 52 (enum_declaration)


State 158

   46 union_declaration: UNION ID LEFT_BRACE data_struct_stmts RIGHT_BRACE •

    $default  reduce using rule 46 (union_declaration)


State 159

  160 special_type: STRUCT •

    $default  reduce using rule 160 (special_type)


State 160

  161 special_type: TYPEDEF •

    $default  reduce using rule 161 (special_type)


State 161

  162 special_type: ENUM •

    $default  reduce using rule 162 (special_type)


State 162

  163 special_type: UNION •

    $default  reduce using rule 163 (special_type)


State 163

  150 size_of_stmt: SIZEOF LPAREN ID • RPAREN

    RPAREN  shift, and go to state 186


State 164

  151 size_of_stmt: SIZEOF LPAREN type • RPAREN

    RPAREN  shift, and go to state 187


State 165

  152 size_of_stmt: SIZEOF LPAREN special_type • ID RPAREN

    ID  shift, and go to state 188


State 166

   85 factor: LPAREN expr RPAREN •

    $default  reduce using rule 85 (factor)


State 167

  176 type_cast: LPAREN type RPAREN •

    $default  reduce using rule 176 (type_cast)


State 168

   70 func_inst_parameters: func_inst_parameters COMMA expr •
   73 expr: expr • op term
   74     | expr • comp_op term
   75     | expr • bitwise_op term
   76     | expr • logical_op term

    PLUS                   shift, and go to state 107
    MINUS                  shift, and go to state 108
    BITWISE_AND            shift, and go to state 109
    BITWISE_OR             shift, and go to state 110
    BITWISE_NOT            shift, and go to state 111
    BITWISE_XOR            shift, and go to state 112
    LOGICAL_AND            shift, and go to state 113
    LOGICAL_OR             shift, and go to state 114
    EQUAL                  shift, and go to state 115
    NOT_EQUAL              shift, and go to state 116
    LESS_THAN              shift, and go to state 117
    GREATER_THAN           shift, and go to state 118
    LESS_THAN_OR_EQUAL     shift, and go to state 119
    GREATER_THAN_OR_EQUAL  shift, and go to state 120
    RIGHT_SHIFT            shift, and go to state 121
    LEFT_SHIFT             shift, and go to state 122

    $default  reduce using rule 70 (func_inst_parameters)

    op          go to state 123
    comp_op     go to state 124
    logical_op  go to state 125
    bitwise_op  go to state 126


State 169

   73 expr: expr op term •
   78 term: term • prio_op operand

    TIMES    shift, and go to state 127
    OVER     shift, and go to state 128
    PERCENT  shift, and go to state 129

    $default  reduce using rule 73 (expr)

    prio_op  go to state 130


State 170

   74 expr: expr comp_op term •
   78 term: term • prio_op operand

    TIMES    shift, and go to state 127
    OVER     shift, and go to state 128
    PERCENT  shift, and go to state 129

    $default  reduce using rule 74 (expr)

    prio_op  go to state 130


State 171

   76 expr: expr logical_op term •
   78 term: term • prio_op operand

    TIMES    shift, and go to state 127
    OVER     shift, and go to state 128
    PERCENT  shift, and go to state 129

    $default  reduce using rule 76 (expr)

    prio_op  go to state 130


State 172

   75 expr: expr bitwise_op term •
   78 term: term • prio_op operand

    TIMES    shift, and go to state 127
    OVER     shift, and go to state 128
    PERCENT  shift, and go to state 129

    $default  reduce using rule 75 (expr)

    prio_op  go to state 130


State 173

   78 term: term prio_op operand •

    $default  reduce using rule 78 (term)


State 174

   44 func_parameters_declaration: VOID •

    $default  reduce using rule 44 (func_parameters_declaration)


State 175

   43 func_parameters_declaration: variable_declaration •

    $default  reduce using rule 43 (func_parameters_declaration)


State 176

   39 func_declaration: prefixes type ID LPAREN func_parameters_declaration • RPAREN compound_stmt
   40                 | prefixes type ID LPAREN func_parameters_declaration • RPAREN SEMI
   42 func_parameters_declaration: func_parameters_declaration • COMMA variable_declaration

    RPAREN  shift, and go to state 189
    COMMA   shift, and go to state 190


State 177

   35 variable_declaration: prefixes • type ID
   36                     | prefixes • type ID assign_op expr
  165 prefixes: prefixes • prefix

    INT       shift, and go to state 33
    FLOAT     shift, and go to state 34
    DOUBLE    shift, and go to state 35
    CHAR      shift, and go to state 36
    VOID      shift, and go to state 37
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    CONSTANT  shift, and go to state 14

    type    go to state 191
    prefix  go to state 55


State 178

   37 array_declaration: prefixes type ID LEFT_BRACKET expr • RIGHT_BRACKET
   38                  | prefixes type ID LEFT_BRACKET expr • RIGHT_BRACKET assign_op LEFT_BRACE expr RIGHT_BRACE
   73 expr: expr • op term
   74     | expr • comp_op term
   75     | expr • bitwise_op term
   76     | expr • logical_op term

    PLUS                   shift, and go to state 107
    MINUS                  shift, and go to state 108
    RIGHT_BRACKET          shift, and go to state 192
    BITWISE_AND            shift, and go to state 109
    BITWISE_OR             shift, and go to state 110
    BITWISE_NOT            shift, and go to state 111
    BITWISE_XOR            shift, and go to state 112
    LOGICAL_AND            shift, and go to state 113
    LOGICAL_OR             shift, and go to state 114
    EQUAL                  shift, and go to state 115
    NOT_EQUAL              shift, and go to state 116
    LESS_THAN              shift, and go to state 117
    GREATER_THAN           shift, and go to state 118
    LESS_THAN_OR_EQUAL     shift, and go to state 119
    GREATER_THAN_OR_EQUAL  shift, and go to state 120
    RIGHT_SHIFT            shift, and go to state 121
    LEFT_SHIFT             shift, and go to state 122

    op          go to state 123
    comp_op     go to state 124
    logical_op  go to state 125
    bitwise_op  go to state 126


State 179

   36 variable_declaration: prefixes type ID assign_op expr •
   73 expr: expr • op term
   74     | expr • comp_op term
   75     | expr • bitwise_op term
   76     | expr • logical_op term

    PLUS                   shift, and go to state 107
    MINUS                  shift, and go to state 108
    BITWISE_AND            shift, and go to state 109
    BITWISE_OR             shift, and go to state 110
    BITWISE_NOT            shift, and go to state 111
    BITWISE_XOR            shift, and go to state 112
    LOGICAL_AND            shift, and go to state 113
    LOGICAL_OR             shift, and go to state 114
    EQUAL                  shift, and go to state 115
    NOT_EQUAL              shift, and go to state 116
    LESS_THAN              shift, and go to state 117
    GREATER_THAN           shift, and go to state 118
    LESS_THAN_OR_EQUAL     shift, and go to state 119
    GREATER_THAN_OR_EQUAL  shift, and go to state 120
    RIGHT_SHIFT            shift, and go to state 121
    LEFT_SHIFT             shift, and go to state 122

    $default  reduce using rule 36 (variable_declaration)

    op          go to state 123
    comp_op     go to state 124
    logical_op  go to state 125
    bitwise_op  go to state 126


State 180

   48 data_struct_stmts: data_struct_stmts declaration_stmt SEMI •

    $default  reduce using rule 48 (data_struct_stmts)


State 181

   49 data_struct_stmts: data_struct_stmts func_declaration SEMI •

    $default  reduce using rule 49 (data_struct_stmts)


State 182

   61 typeDef_declaration: TYPEDEF STRUCT LEFT_BRACE data_struct_stmts RIGHT_BRACE ID •

    $default  reduce using rule 61 (typeDef_declaration)


State 183

   57 typeDef_declaration: TYPEDEF ENUM LEFT_BRACE enum_parameters RIGHT_BRACE ID •

    $default  reduce using rule 57 (typeDef_declaration)


State 184

   54 enum_parameters: enum_parameters COMMA ID •

    $default  reduce using rule 54 (enum_parameters)


State 185

   59 typeDef_declaration: TYPEDEF UNION LEFT_BRACE data_struct_stmts RIGHT_BRACE ID •

    $default  reduce using rule 59 (typeDef_declaration)


State 186

  150 size_of_stmt: SIZEOF LPAREN ID RPAREN •

    $default  reduce using rule 150 (size_of_stmt)


State 187

  151 size_of_stmt: SIZEOF LPAREN type RPAREN •

    $default  reduce using rule 151 (size_of_stmt)


State 188

  152 size_of_stmt: SIZEOF LPAREN special_type ID • RPAREN

    RPAREN  shift, and go to state 193


State 189

   39 func_declaration: prefixes type ID LPAREN func_parameters_declaration RPAREN • compound_stmt
   40                 | prefixes type ID LPAREN func_parameters_declaration RPAREN • SEMI

    LEFT_BRACE  shift, and go to state 194
    SEMI        shift, and go to state 195

    compound_stmt  go to state 196


State 190

   42 func_parameters_declaration: func_parameters_declaration COMMA • variable_declaration

    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    CONSTANT  shift, and go to state 14

    EXTERN    [reduce using rule 164 (prefixes)]
    LONG      [reduce using rule 164 (prefixes)]
    REGISTER  [reduce using rule 164 (prefixes)]
    SHORT     [reduce using rule 164 (prefixes)]
    STATIC    [reduce using rule 164 (prefixes)]
    SIGNED    [reduce using rule 164 (prefixes)]
    UNSIGNED  [reduce using rule 164 (prefixes)]
    VOLATILE  [reduce using rule 164 (prefixes)]
    CONSTANT  [reduce using rule 164 (prefixes)]
    $default  reduce using rule 164 (prefixes)

    variable_declaration  go to state 197
    prefixes              go to state 177
    prefix                go to state 31


State 191

   35 variable_declaration: prefixes type • ID
   36                     | prefixes type • ID assign_op expr

    ID  shift, and go to state 198


State 192

   37 array_declaration: prefixes type ID LEFT_BRACKET expr RIGHT_BRACKET •
   38                  | prefixes type ID LEFT_BRACKET expr RIGHT_BRACKET • assign_op LEFT_BRACE expr RIGHT_BRACE

    ASSIGN              shift, and go to state 134
    PLUS_ASSIGN         shift, and go to state 137
    MINUS_ASSIGN        shift, and go to state 138
    LEFT_SHIFT_ASSIGN   shift, and go to state 139
    RIGHT_SHIFT_ASSIGN  shift, and go to state 140
    BITWISE_AND_ASSIGN  shift, and go to state 141
    BITWISE_OR_ASSIGN   shift, and go to state 142
    BITWISE_XOR_ASSIGN  shift, and go to state 143
    MULTIPLY_ASSIGN     shift, and go to state 144
    DIVIDE_ASSIGN       shift, and go to state 145
    MODULUS_ASSIGN      shift, and go to state 146

    $default  reduce using rule 37 (array_declaration)

    assign_op  go to state 199


State 193

  152 size_of_stmt: SIZEOF LPAREN special_type ID RPAREN •

    $default  reduce using rule 152 (size_of_stmt)


State 194

  123 compound_stmt: LEFT_BRACE • stmts RIGHT_BRACE
  124              | LEFT_BRACE • RIGHT_BRACE

    IF           shift, and go to state 200
    DO           shift, and go to state 201
    WHILE        shift, and go to state 202
    FOR          shift, and go to state 203
    SWITCH       shift, and go to state 204
    RETURN       shift, and go to state 205
    BREAK        shift, and go to state 206
    STRUCT       shift, and go to state 1
    TYPEDEF      shift, and go to state 2
    CONTINUE     shift, and go to state 207
    EXTERN       shift, and go to state 3
    GOTO         shift, and go to state 208
    LONG         shift, and go to state 4
    ENUM         shift, and go to state 5
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNION        shift, and go to state 10
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    ID           shift, and go to state 209
    LEFT_BRACE   shift, and go to state 194
    RIGHT_BRACE  shift, and go to state 210
    INCREMENT    shift, and go to state 76
    DECREMENT    shift, and go to state 77
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 164 (prefixes)]
    LONG      [reduce using rule 164 (prefixes)]
    REGISTER  [reduce using rule 164 (prefixes)]
    SHORT     [reduce using rule 164 (prefixes)]
    STATIC    [reduce using rule 164 (prefixes)]
    SIGNED    [reduce using rule 164 (prefixes)]
    UNSIGNED  [reduce using rule 164 (prefixes)]
    VOLATILE  [reduce using rule 164 (prefixes)]
    CONSTANT  [reduce using rule 164 (prefixes)]
    $default  reduce using rule 164 (prefixes)

    stmts                 go to state 211
    stmt                  go to state 212
    assignment_stmt       go to state 213
    declaration_stmt      go to state 214
    variable_declaration  go to state 19
    array_declaration     go to state 20
    struct_declaration    go to state 22
    union_declaration     go to state 23
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    instantiation_stmt    go to state 215
    struct_inst           go to state 27
    union_inst            go to state 28
    func_inst             go to state 29
    unary_op              go to state 216
    compound_stmt         go to state 217
    if_stmt               go to state 218
    do_while_stmt         go to state 219
    while_stmt            go to state 220
    for_stmt              go to state 221
    switch_case           go to state 222
    return_stmt           go to state 223
    goto_stmt             go to state 224
    label                 go to state 225
    prefixes              go to state 226
    prefix                go to state 31


State 195

   40 func_declaration: prefixes type ID LPAREN func_parameters_declaration RPAREN SEMI •

    $default  reduce using rule 40 (func_declaration)


State 196

   39 func_declaration: prefixes type ID LPAREN func_parameters_declaration RPAREN compound_stmt •

    $default  reduce using rule 39 (func_declaration)


State 197

   42 func_parameters_declaration: func_parameters_declaration COMMA variable_declaration •

    $default  reduce using rule 42 (func_parameters_declaration)


State 198

   35 variable_declaration: prefixes type ID •
   36                     | prefixes type ID • assign_op expr

    ASSIGN              shift, and go to state 134
    PLUS_ASSIGN         shift, and go to state 137
    MINUS_ASSIGN        shift, and go to state 138
    LEFT_SHIFT_ASSIGN   shift, and go to state 139
    RIGHT_SHIFT_ASSIGN  shift, and go to state 140
    BITWISE_AND_ASSIGN  shift, and go to state 141
    BITWISE_OR_ASSIGN   shift, and go to state 142
    BITWISE_XOR_ASSIGN  shift, and go to state 143
    MULTIPLY_ASSIGN     shift, and go to state 144
    DIVIDE_ASSIGN       shift, and go to state 145
    MODULUS_ASSIGN      shift, and go to state 146

    $default  reduce using rule 35 (variable_declaration)

    assign_op  go to state 147


State 199

   38 array_declaration: prefixes type ID LEFT_BRACKET expr RIGHT_BRACKET assign_op • LEFT_BRACE expr RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 227


State 200

  125 if_stmt: IF • LPAREN condition RPAREN stmts
  126        | IF • LPAREN condition RPAREN stmts elseif_stmt
  127        | IF • LPAREN condition RPAREN stmts else_stmt
  128        | IF • LPAREN condition RPAREN SEMI

    LPAREN  shift, and go to state 228


State 201

  133 do_while_stmt: DO • stmts WHILE LPAREN LPAREN condition RPAREN

    IF          shift, and go to state 200
    DO          shift, and go to state 201
    WHILE       shift, and go to state 202
    FOR         shift, and go to state 203
    SWITCH      shift, and go to state 204
    RETURN      shift, and go to state 205
    BREAK       shift, and go to state 206
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 207
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 208
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 209
    LEFT_BRACE  shift, and go to state 194
    INCREMENT   shift, and go to state 76
    DECREMENT   shift, and go to state 77
    CONSTANT    shift, and go to state 14

    EXTERN    [reduce using rule 164 (prefixes)]
    LONG      [reduce using rule 164 (prefixes)]
    REGISTER  [reduce using rule 164 (prefixes)]
    SHORT     [reduce using rule 164 (prefixes)]
    STATIC    [reduce using rule 164 (prefixes)]
    SIGNED    [reduce using rule 164 (prefixes)]
    UNSIGNED  [reduce using rule 164 (prefixes)]
    VOLATILE  [reduce using rule 164 (prefixes)]
    CONSTANT  [reduce using rule 164 (prefixes)]
    $default  reduce using rule 164 (prefixes)

    stmts                 go to state 229
    stmt                  go to state 212
    assignment_stmt       go to state 213
    declaration_stmt      go to state 214
    variable_declaration  go to state 19
    array_declaration     go to state 20
    struct_declaration    go to state 22
    union_declaration     go to state 23
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    instantiation_stmt    go to state 215
    struct_inst           go to state 27
    union_inst            go to state 28
    func_inst             go to state 29
    unary_op              go to state 216
    compound_stmt         go to state 217
    if_stmt               go to state 218
    do_while_stmt         go to state 219
    while_stmt            go to state 220
    for_stmt              go to state 221
    switch_case           go to state 222
    return_stmt           go to state 223
    goto_stmt             go to state 224
    label                 go to state 225
    prefixes              go to state 226
    prefix                go to state 31


State 202

  134 while_stmt: WHILE • LPAREN condition RPAREN stmts
  135           | WHILE • LPAREN condition RPAREN SEMI

    LPAREN  shift, and go to state 230


State 203

  136 for_stmt: FOR • LPAREN condition SEMI condition SEMI condition RPAREN stmts
  137         | FOR • LPAREN variable_declaration SEMI condition SEMI condition RPAREN stmts

    LPAREN  shift, and go to state 231


State 204

  140 switch_case: SWITCH • LPAREN ID RPAREN LEFT_BRACE case_list RIGHT_BRACE
  141            | SWITCH • LPAREN ID RPAREN LEFT_BRACE case_list case_default RIGHT_BRACE
  142            | SWITCH • LPAREN expr RPAREN LEFT_BRACE case_list RIGHT_BRACE
  143            | SWITCH • LPAREN expr RPAREN LEFT_BRACE case_list case_default RIGHT_BRACE

    LPAREN  shift, and go to state 232


State 205

  148 return_stmt: RETURN • expr

    SIZEOF       shift, and go to state 71
    NUM          shift, and go to state 72
    ID           shift, and go to state 73
    FNUM         shift, and go to state 74
    LPAREN       shift, and go to state 75
    INCREMENT    shift, and go to state 76
    DECREMENT    shift, and go to state 77
    LOGICAL_NOT  shift, and go to state 78

    func_inst     go to state 79
    expr          go to state 233
    term          go to state 82
    operand       go to state 83
    factor        go to state 84
    unary_op      go to state 85
    size_of_stmt  go to state 86
    type_cast     go to state 87


State 206

   23 stmt: BREAK • SEMI

    SEMI  shift, and go to state 234


State 207

   22 stmt: CONTINUE • SEMI

    SEMI  shift, and go to state 235


State 208

  149 goto_stmt: GOTO • ID SEMI

    ID  shift, and go to state 236


State 209

   24 assignment_stmt: ID • assign_op expr
   26                | ID • unary_op
   27                | ID • assign_op LEFT_BRACE expr RIGHT_BRACE
   28                | ID • LEFT_BRACKET expr RIGHT_BRACKET assign_op expr
   68 func_inst: ID • LPAREN func_inst_parameters RPAREN
  153 label: ID • COLON

    ASSIGN              shift, and go to state 134
    LPAREN              shift, and go to state 47
    LEFT_BRACKET        shift, and go to state 237
    COLON               shift, and go to state 238
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    PLUS_ASSIGN         shift, and go to state 137
    MINUS_ASSIGN        shift, and go to state 138
    LEFT_SHIFT_ASSIGN   shift, and go to state 139
    RIGHT_SHIFT_ASSIGN  shift, and go to state 140
    BITWISE_AND_ASSIGN  shift, and go to state 141
    BITWISE_OR_ASSIGN   shift, and go to state 142
    BITWISE_XOR_ASSIGN  shift, and go to state 143
    MULTIPLY_ASSIGN     shift, and go to state 144
    DIVIDE_ASSIGN       shift, and go to state 145
    MODULUS_ASSIGN      shift, and go to state 146

    unary_op   go to state 239
    assign_op  go to state 240


State 210

  124 compound_stmt: LEFT_BRACE RIGHT_BRACE •

    $default  reduce using rule 124 (compound_stmt)


State 211

    8 stmts: stmts • stmt
  123 compound_stmt: LEFT_BRACE stmts • RIGHT_BRACE

    IF           shift, and go to state 200
    DO           shift, and go to state 201
    WHILE        shift, and go to state 202
    FOR          shift, and go to state 203
    SWITCH       shift, and go to state 204
    RETURN       shift, and go to state 205
    BREAK        shift, and go to state 206
    STRUCT       shift, and go to state 1
    TYPEDEF      shift, and go to state 2
    CONTINUE     shift, and go to state 207
    EXTERN       shift, and go to state 3
    GOTO         shift, and go to state 208
    LONG         shift, and go to state 4
    ENUM         shift, and go to state 5
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNION        shift, and go to state 10
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    ID           shift, and go to state 209
    LEFT_BRACE   shift, and go to state 194
    RIGHT_BRACE  shift, and go to state 241
    INCREMENT    shift, and go to state 76
    DECREMENT    shift, and go to state 77
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 164 (prefixes)]
    LONG      [reduce using rule 164 (prefixes)]
    REGISTER  [reduce using rule 164 (prefixes)]
    SHORT     [reduce using rule 164 (prefixes)]
    STATIC    [reduce using rule 164 (prefixes)]
    SIGNED    [reduce using rule 164 (prefixes)]
    UNSIGNED  [reduce using rule 164 (prefixes)]
    VOLATILE  [reduce using rule 164 (prefixes)]
    CONSTANT  [reduce using rule 164 (prefixes)]
    $default  reduce using rule 164 (prefixes)

    stmt                  go to state 242
    assignment_stmt       go to state 213
    declaration_stmt      go to state 214
    variable_declaration  go to state 19
    array_declaration     go to state 20
    struct_declaration    go to state 22
    union_declaration     go to state 23
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    instantiation_stmt    go to state 215
    struct_inst           go to state 27
    union_inst            go to state 28
    func_inst             go to state 29
    unary_op              go to state 216
    compound_stmt         go to state 217
    if_stmt               go to state 218
    do_while_stmt         go to state 219
    while_stmt            go to state 220
    for_stmt              go to state 221
    switch_case           go to state 222
    return_stmt           go to state 223
    goto_stmt             go to state 224
    label                 go to state 225
    prefixes              go to state 226
    prefix                go to state 31


State 212

    9 stmts: stmt •

    $default  reduce using rule 9 (stmts)


State 213

   19 stmt: assignment_stmt • SEMI

    SEMI  shift, and go to state 243


State 214

   18 stmt: declaration_stmt • SEMI

    SEMI  shift, and go to state 244


State 215

   20 stmt: instantiation_stmt • SEMI

    SEMI  shift, and go to state 245


State 216

   25 assignment_stmt: unary_op • ID

    ID  shift, and go to state 246


State 217

   21 stmt: compound_stmt •

    $default  reduce using rule 21 (stmt)


State 218

   12 stmt: if_stmt •

    $default  reduce using rule 12 (stmt)


State 219

   16 stmt: do_while_stmt • SEMI

    SEMI  shift, and go to state 247


State 220

   14 stmt: while_stmt •

    $default  reduce using rule 14 (stmt)


State 221

   13 stmt: for_stmt •

    $default  reduce using rule 13 (stmt)


State 222

   15 stmt: switch_case •

    $default  reduce using rule 15 (stmt)


State 223

   17 stmt: return_stmt • SEMI

    SEMI  shift, and go to state 248


State 224

   10 stmt: goto_stmt •

    $default  reduce using rule 10 (stmt)


State 225

   11 stmt: label •

    $default  reduce using rule 11 (stmt)


State 226

   35 variable_declaration: prefixes • type ID
   36                     | prefixes • type ID assign_op expr
   37 array_declaration: prefixes • type ID LEFT_BRACKET expr RIGHT_BRACKET
   38                  | prefixes • type ID LEFT_BRACKET expr RIGHT_BRACKET assign_op LEFT_BRACE expr RIGHT_BRACE
  165 prefixes: prefixes • prefix

    INT       shift, and go to state 33
    FLOAT     shift, and go to state 34
    DOUBLE    shift, and go to state 35
    CHAR      shift, and go to state 36
    VOID      shift, and go to state 37
    EXTERN    shift, and go to state 3
    LONG      shift, and go to state 4
    REGISTER  shift, and go to state 6
    SHORT     shift, and go to state 7
    STATIC    shift, and go to state 8
    SIGNED    shift, and go to state 9
    UNSIGNED  shift, and go to state 11
    VOLATILE  shift, and go to state 12
    CONSTANT  shift, and go to state 14

    type    go to state 249
    prefix  go to state 55


State 227

   38 array_declaration: prefixes type ID LEFT_BRACKET expr RIGHT_BRACKET assign_op LEFT_BRACE • expr RIGHT_BRACE

    SIZEOF       shift, and go to state 71
    NUM          shift, and go to state 72
    ID           shift, and go to state 73
    FNUM         shift, and go to state 74
    LPAREN       shift, and go to state 75
    INCREMENT    shift, and go to state 76
    DECREMENT    shift, and go to state 77
    LOGICAL_NOT  shift, and go to state 78

    func_inst     go to state 79
    expr          go to state 250
    term          go to state 82
    operand       go to state 83
    factor        go to state 84
    unary_op      go to state 85
    size_of_stmt  go to state 86
    type_cast     go to state 87


State 228

  125 if_stmt: IF LPAREN • condition RPAREN stmts
  126        | IF LPAREN • condition RPAREN stmts elseif_stmt
  127        | IF LPAREN • condition RPAREN stmts else_stmt
  128        | IF LPAREN • condition RPAREN SEMI

    SIZEOF       shift, and go to state 71
    NUM          shift, and go to state 72
    ID           shift, and go to state 251
    FNUM         shift, and go to state 74
    LPAREN       shift, and go to state 75
    INCREMENT    shift, and go to state 76
    DECREMENT    shift, and go to state 77
    LOGICAL_NOT  shift, and go to state 78

    assignment_stmt  go to state 252
    func_inst        go to state 79
    expr             go to state 253
    term             go to state 82
    operand          go to state 83
    factor           go to state 84
    unary_op         go to state 254
    condition        go to state 255
    size_of_stmt     go to state 86
    type_cast        go to state 87


State 229

    8 stmts: stmts • stmt
  133 do_while_stmt: DO stmts • WHILE LPAREN LPAREN condition RPAREN

    IF          shift, and go to state 200
    DO          shift, and go to state 201
    WHILE       shift, and go to state 256
    FOR         shift, and go to state 203
    SWITCH      shift, and go to state 204
    RETURN      shift, and go to state 205
    BREAK       shift, and go to state 206
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 207
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 208
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 209
    LEFT_BRACE  shift, and go to state 194
    INCREMENT   shift, and go to state 76
    DECREMENT   shift, and go to state 77
    CONSTANT    shift, and go to state 14

    EXTERN    [reduce using rule 164 (prefixes)]
    LONG      [reduce using rule 164 (prefixes)]
    REGISTER  [reduce using rule 164 (prefixes)]
    SHORT     [reduce using rule 164 (prefixes)]
    STATIC    [reduce using rule 164 (prefixes)]
    SIGNED    [reduce using rule 164 (prefixes)]
    UNSIGNED  [reduce using rule 164 (prefixes)]
    VOLATILE  [reduce using rule 164 (prefixes)]
    CONSTANT  [reduce using rule 164 (prefixes)]
    $default  reduce using rule 164 (prefixes)

    stmt                  go to state 242
    assignment_stmt       go to state 213
    declaration_stmt      go to state 214
    variable_declaration  go to state 19
    array_declaration     go to state 20
    struct_declaration    go to state 22
    union_declaration     go to state 23
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    instantiation_stmt    go to state 215
    struct_inst           go to state 27
    union_inst            go to state 28
    func_inst             go to state 29
    unary_op              go to state 216
    compound_stmt         go to state 217
    if_stmt               go to state 218
    do_while_stmt         go to state 219
    while_stmt            go to state 220
    for_stmt              go to state 221
    switch_case           go to state 222
    return_stmt           go to state 223
    goto_stmt             go to state 224
    label                 go to state 225
    prefixes              go to state 226
    prefix                go to state 31


State 230

  134 while_stmt: WHILE LPAREN • condition RPAREN stmts
  135           | WHILE LPAREN • condition RPAREN SEMI

    SIZEOF       shift, and go to state 71
    NUM          shift, and go to state 72
    ID           shift, and go to state 251
    FNUM         shift, and go to state 74
    LPAREN       shift, and go to state 75
    INCREMENT    shift, and go to state 76
    DECREMENT    shift, and go to state 77
    LOGICAL_NOT  shift, and go to state 78

    assignment_stmt  go to state 252
    func_inst        go to state 79
    expr             go to state 253
    term             go to state 82
    operand          go to state 83
    factor           go to state 84
    unary_op         go to state 254
    condition        go to state 257
    size_of_stmt     go to state 86
    type_cast        go to state 87


State 231

  136 for_stmt: FOR LPAREN • condition SEMI condition SEMI condition RPAREN stmts
  137         | FOR LPAREN • variable_declaration SEMI condition SEMI condition RPAREN stmts

    EXTERN       shift, and go to state 3
    LONG         shift, and go to state 4
    REGISTER     shift, and go to state 6
    SHORT        shift, and go to state 7
    SIZEOF       shift, and go to state 71
    STATIC       shift, and go to state 8
    SIGNED       shift, and go to state 9
    UNSIGNED     shift, and go to state 11
    VOLATILE     shift, and go to state 12
    NUM          shift, and go to state 72
    ID           shift, and go to state 251
    FNUM         shift, and go to state 74
    LPAREN       shift, and go to state 75
    INCREMENT    shift, and go to state 76
    DECREMENT    shift, and go to state 77
    LOGICAL_NOT  shift, and go to state 78
    CONSTANT     shift, and go to state 14

    EXTERN    [reduce using rule 164 (prefixes)]
    LONG      [reduce using rule 164 (prefixes)]
    REGISTER  [reduce using rule 164 (prefixes)]
    SHORT     [reduce using rule 164 (prefixes)]
    STATIC    [reduce using rule 164 (prefixes)]
    SIGNED    [reduce using rule 164 (prefixes)]
    UNSIGNED  [reduce using rule 164 (prefixes)]
    VOLATILE  [reduce using rule 164 (prefixes)]
    CONSTANT  [reduce using rule 164 (prefixes)]
    $default  reduce using rule 164 (prefixes)

    assignment_stmt       go to state 252
    variable_declaration  go to state 258
    func_inst             go to state 79
    expr                  go to state 253
    term                  go to state 82
    operand               go to state 83
    factor                go to state 84
    unary_op              go to state 254
    condition             go to state 259
    size_of_stmt          go to state 86
    prefixes              go to state 177
    prefix                go to state 31
    type_cast             go to state 87


State 232

  140 switch_case: SWITCH LPAREN • ID RPAREN LEFT_BRACE case_list RIGHT_BRACE
  141            | SWITCH LPAREN • ID RPAREN LEFT_BRACE case_list case_default RIGHT_BRACE
  142            | SWITCH LPAREN • expr RPAREN LEFT_BRACE case_list RIGHT_BRACE
  143            | SWITCH LPAREN • expr RPAREN LEFT_BRACE case_list case_default RIGHT_BRACE

    SIZEOF       shift, and go to state 71
    NUM          shift, and go to state 72
    ID           shift, and go to state 260
    FNUM         shift, and go to state 74
    LPAREN       shift, and go to state 75
    INCREMENT    shift, and go to state 76
    DECREMENT    shift, and go to state 77
    LOGICAL_NOT  shift, and go to state 78

    func_inst     go to state 79
    expr          go to state 261
    term          go to state 82
    operand       go to state 83
    factor        go to state 84
    unary_op      go to state 85
    size_of_stmt  go to state 86
    type_cast     go to state 87


State 233

   73 expr: expr • op term
   74     | expr • comp_op term
   75     | expr • bitwise_op term
   76     | expr • logical_op term
  148 return_stmt: RETURN expr •

    PLUS                   shift, and go to state 107
    MINUS                  shift, and go to state 108
    BITWISE_AND            shift, and go to state 109
    BITWISE_OR             shift, and go to state 110
    BITWISE_NOT            shift, and go to state 111
    BITWISE_XOR            shift, and go to state 112
    LOGICAL_AND            shift, and go to state 113
    LOGICAL_OR             shift, and go to state 114
    EQUAL                  shift, and go to state 115
    NOT_EQUAL              shift, and go to state 116
    LESS_THAN              shift, and go to state 117
    GREATER_THAN           shift, and go to state 118
    LESS_THAN_OR_EQUAL     shift, and go to state 119
    GREATER_THAN_OR_EQUAL  shift, and go to state 120
    RIGHT_SHIFT            shift, and go to state 121
    LEFT_SHIFT             shift, and go to state 122

    $default  reduce using rule 148 (return_stmt)

    op          go to state 123
    comp_op     go to state 124
    logical_op  go to state 125
    bitwise_op  go to state 126


State 234

   23 stmt: BREAK SEMI •

    $default  reduce using rule 23 (stmt)


State 235

   22 stmt: CONTINUE SEMI •

    $default  reduce using rule 22 (stmt)


State 236

  149 goto_stmt: GOTO ID • SEMI

    SEMI  shift, and go to state 262


State 237

   28 assignment_stmt: ID LEFT_BRACKET • expr RIGHT_BRACKET assign_op expr

    SIZEOF       shift, and go to state 71
    NUM          shift, and go to state 72
    ID           shift, and go to state 73
    FNUM         shift, and go to state 74
    LPAREN       shift, and go to state 75
    INCREMENT    shift, and go to state 76
    DECREMENT    shift, and go to state 77
    LOGICAL_NOT  shift, and go to state 78

    func_inst     go to state 79
    expr          go to state 263
    term          go to state 82
    operand       go to state 83
    factor        go to state 84
    unary_op      go to state 85
    size_of_stmt  go to state 86
    type_cast     go to state 87


State 238

  153 label: ID COLON •

    $default  reduce using rule 153 (label)


State 239

   26 assignment_stmt: ID unary_op •

    $default  reduce using rule 26 (assignment_stmt)


State 240

   24 assignment_stmt: ID assign_op • expr
   27                | ID assign_op • LEFT_BRACE expr RIGHT_BRACE

    SIZEOF       shift, and go to state 71
    NUM          shift, and go to state 72
    ID           shift, and go to state 73
    FNUM         shift, and go to state 74
    LPAREN       shift, and go to state 75
    LEFT_BRACE   shift, and go to state 264
    INCREMENT    shift, and go to state 76
    DECREMENT    shift, and go to state 77
    LOGICAL_NOT  shift, and go to state 78

    func_inst     go to state 79
    expr          go to state 265
    term          go to state 82
    operand       go to state 83
    factor        go to state 84
    unary_op      go to state 85
    size_of_stmt  go to state 86
    type_cast     go to state 87


State 241

  123 compound_stmt: LEFT_BRACE stmts RIGHT_BRACE •

    $default  reduce using rule 123 (compound_stmt)


State 242

    8 stmts: stmts stmt •

    $default  reduce using rule 8 (stmts)


State 243

   19 stmt: assignment_stmt SEMI •

    $default  reduce using rule 19 (stmt)


State 244

   18 stmt: declaration_stmt SEMI •

    $default  reduce using rule 18 (stmt)


State 245

   20 stmt: instantiation_stmt SEMI •

    $default  reduce using rule 20 (stmt)


State 246

   25 assignment_stmt: unary_op ID •

    $default  reduce using rule 25 (assignment_stmt)


State 247

   16 stmt: do_while_stmt SEMI •

    $default  reduce using rule 16 (stmt)


State 248

   17 stmt: return_stmt SEMI •

    $default  reduce using rule 17 (stmt)


State 249

   35 variable_declaration: prefixes type • ID
   36                     | prefixes type • ID assign_op expr
   37 array_declaration: prefixes type • ID LEFT_BRACKET expr RIGHT_BRACKET
   38                  | prefixes type • ID LEFT_BRACKET expr RIGHT_BRACKET assign_op LEFT_BRACE expr RIGHT_BRACE

    ID  shift, and go to state 266


State 250

   38 array_declaration: prefixes type ID LEFT_BRACKET expr RIGHT_BRACKET assign_op LEFT_BRACE expr • RIGHT_BRACE
   73 expr: expr • op term
   74     | expr • comp_op term
   75     | expr • bitwise_op term
   76     | expr • logical_op term

    PLUS                   shift, and go to state 107
    MINUS                  shift, and go to state 108
    RIGHT_BRACE            shift, and go to state 267
    BITWISE_AND            shift, and go to state 109
    BITWISE_OR             shift, and go to state 110
    BITWISE_NOT            shift, and go to state 111
    BITWISE_XOR            shift, and go to state 112
    LOGICAL_AND            shift, and go to state 113
    LOGICAL_OR             shift, and go to state 114
    EQUAL                  shift, and go to state 115
    NOT_EQUAL              shift, and go to state 116
    LESS_THAN              shift, and go to state 117
    GREATER_THAN           shift, and go to state 118
    LESS_THAN_OR_EQUAL     shift, and go to state 119
    GREATER_THAN_OR_EQUAL  shift, and go to state 120
    RIGHT_SHIFT            shift, and go to state 121
    LEFT_SHIFT             shift, and go to state 122

    op          go to state 123
    comp_op     go to state 124
    logical_op  go to state 125
    bitwise_op  go to state 126


State 251

   24 assignment_stmt: ID • assign_op expr
   26                | ID • unary_op
   27                | ID • assign_op LEFT_BRACE expr RIGHT_BRACE
   28                | ID • LEFT_BRACKET expr RIGHT_BRACKET assign_op expr
   68 func_inst: ID • LPAREN func_inst_parameters RPAREN
   87 factor: ID •

    ASSIGN              shift, and go to state 134
    LPAREN              shift, and go to state 47
    LEFT_BRACKET        shift, and go to state 237
    INCREMENT           shift, and go to state 76
    DECREMENT           shift, and go to state 77
    PLUS_ASSIGN         shift, and go to state 137
    MINUS_ASSIGN        shift, and go to state 138
    LEFT_SHIFT_ASSIGN   shift, and go to state 139
    RIGHT_SHIFT_ASSIGN  shift, and go to state 140
    BITWISE_AND_ASSIGN  shift, and go to state 141
    BITWISE_OR_ASSIGN   shift, and go to state 142
    BITWISE_XOR_ASSIGN  shift, and go to state 143
    MULTIPLY_ASSIGN     shift, and go to state 144
    DIVIDE_ASSIGN       shift, and go to state 145
    MODULUS_ASSIGN      shift, and go to state 146

    INCREMENT  [reduce using rule 87 (factor)]
    DECREMENT  [reduce using rule 87 (factor)]
    $default   reduce using rule 87 (factor)

    unary_op   go to state 239
    assign_op  go to state 240


State 252

  139 condition: assignment_stmt •

    $default  reduce using rule 139 (condition)


State 253

   73 expr: expr • op term
   74     | expr • comp_op term
   75     | expr • bitwise_op term
   76     | expr • logical_op term
  138 condition: expr •

    PLUS                   shift, and go to state 107
    MINUS                  shift, and go to state 108
    BITWISE_AND            shift, and go to state 109
    BITWISE_OR             shift, and go to state 110
    BITWISE_NOT            shift, and go to state 111
    BITWISE_XOR            shift, and go to state 112
    LOGICAL_AND            shift, and go to state 113
    LOGICAL_OR             shift, and go to state 114
    EQUAL                  shift, and go to state 115
    NOT_EQUAL              shift, and go to state 116
    LESS_THAN              shift, and go to state 117
    GREATER_THAN           shift, and go to state 118
    LESS_THAN_OR_EQUAL     shift, and go to state 119
    GREATER_THAN_OR_EQUAL  shift, and go to state 120
    RIGHT_SHIFT            shift, and go to state 121
    LEFT_SHIFT             shift, and go to state 122

    $default  reduce using rule 138 (condition)

    op          go to state 123
    comp_op     go to state 124
    logical_op  go to state 125
    bitwise_op  go to state 126


State 254

   25 assignment_stmt: unary_op • ID
   80 operand: unary_op • factor

    SIZEOF  shift, and go to state 71
    NUM     shift, and go to state 72
    ID      shift, and go to state 268
    FNUM    shift, and go to state 74
    LPAREN  shift, and go to state 103

    func_inst     go to state 79
    factor        go to state 132
    size_of_stmt  go to state 86


State 255

  125 if_stmt: IF LPAREN condition • RPAREN stmts
  126        | IF LPAREN condition • RPAREN stmts elseif_stmt
  127        | IF LPAREN condition • RPAREN stmts else_stmt
  128        | IF LPAREN condition • RPAREN SEMI

    RPAREN  shift, and go to state 269


State 256

  133 do_while_stmt: DO stmts WHILE • LPAREN LPAREN condition RPAREN
  134 while_stmt: WHILE • LPAREN condition RPAREN stmts
  135           | WHILE • LPAREN condition RPAREN SEMI

    LPAREN  shift, and go to state 270


State 257

  134 while_stmt: WHILE LPAREN condition • RPAREN stmts
  135           | WHILE LPAREN condition • RPAREN SEMI

    RPAREN  shift, and go to state 271


State 258

  137 for_stmt: FOR LPAREN variable_declaration • SEMI condition SEMI condition RPAREN stmts

    SEMI  shift, and go to state 272


State 259

  136 for_stmt: FOR LPAREN condition • SEMI condition SEMI condition RPAREN stmts

    SEMI  shift, and go to state 273


State 260

   68 func_inst: ID • LPAREN func_inst_parameters RPAREN
   87 factor: ID •
  140 switch_case: SWITCH LPAREN ID • RPAREN LEFT_BRACE case_list RIGHT_BRACE
  141            | SWITCH LPAREN ID • RPAREN LEFT_BRACE case_list case_default RIGHT_BRACE

    LPAREN  shift, and go to state 47
    RPAREN  shift, and go to state 274

    RPAREN    [reduce using rule 87 (factor)]
    $default  reduce using rule 87 (factor)


State 261

   73 expr: expr • op term
   74     | expr • comp_op term
   75     | expr • bitwise_op term
   76     | expr • logical_op term
  142 switch_case: SWITCH LPAREN expr • RPAREN LEFT_BRACE case_list RIGHT_BRACE
  143            | SWITCH LPAREN expr • RPAREN LEFT_BRACE case_list case_default RIGHT_BRACE

    PLUS                   shift, and go to state 107
    MINUS                  shift, and go to state 108
    RPAREN                 shift, and go to state 275
    BITWISE_AND            shift, and go to state 109
    BITWISE_OR             shift, and go to state 110
    BITWISE_NOT            shift, and go to state 111
    BITWISE_XOR            shift, and go to state 112
    LOGICAL_AND            shift, and go to state 113
    LOGICAL_OR             shift, and go to state 114
    EQUAL                  shift, and go to state 115
    NOT_EQUAL              shift, and go to state 116
    LESS_THAN              shift, and go to state 117
    GREATER_THAN           shift, and go to state 118
    LESS_THAN_OR_EQUAL     shift, and go to state 119
    GREATER_THAN_OR_EQUAL  shift, and go to state 120
    RIGHT_SHIFT            shift, and go to state 121
    LEFT_SHIFT             shift, and go to state 122

    op          go to state 123
    comp_op     go to state 124
    logical_op  go to state 125
    bitwise_op  go to state 126


State 262

  149 goto_stmt: GOTO ID SEMI •

    $default  reduce using rule 149 (goto_stmt)


State 263

   28 assignment_stmt: ID LEFT_BRACKET expr • RIGHT_BRACKET assign_op expr
   73 expr: expr • op term
   74     | expr • comp_op term
   75     | expr • bitwise_op term
   76     | expr • logical_op term

    PLUS                   shift, and go to state 107
    MINUS                  shift, and go to state 108
    RIGHT_BRACKET          shift, and go to state 276
    BITWISE_AND            shift, and go to state 109
    BITWISE_OR             shift, and go to state 110
    BITWISE_NOT            shift, and go to state 111
    BITWISE_XOR            shift, and go to state 112
    LOGICAL_AND            shift, and go to state 113
    LOGICAL_OR             shift, and go to state 114
    EQUAL                  shift, and go to state 115
    NOT_EQUAL              shift, and go to state 116
    LESS_THAN              shift, and go to state 117
    GREATER_THAN           shift, and go to state 118
    LESS_THAN_OR_EQUAL     shift, and go to state 119
    GREATER_THAN_OR_EQUAL  shift, and go to state 120
    RIGHT_SHIFT            shift, and go to state 121
    LEFT_SHIFT             shift, and go to state 122

    op          go to state 123
    comp_op     go to state 124
    logical_op  go to state 125
    bitwise_op  go to state 126


State 264

   27 assignment_stmt: ID assign_op LEFT_BRACE • expr RIGHT_BRACE

    SIZEOF       shift, and go to state 71
    NUM          shift, and go to state 72
    ID           shift, and go to state 73
    FNUM         shift, and go to state 74
    LPAREN       shift, and go to state 75
    INCREMENT    shift, and go to state 76
    DECREMENT    shift, and go to state 77
    LOGICAL_NOT  shift, and go to state 78

    func_inst     go to state 79
    expr          go to state 277
    term          go to state 82
    operand       go to state 83
    factor        go to state 84
    unary_op      go to state 85
    size_of_stmt  go to state 86
    type_cast     go to state 87


State 265

   24 assignment_stmt: ID assign_op expr •
   73 expr: expr • op term
   74     | expr • comp_op term
   75     | expr • bitwise_op term
   76     | expr • logical_op term

    PLUS                   shift, and go to state 107
    MINUS                  shift, and go to state 108
    BITWISE_AND            shift, and go to state 109
    BITWISE_OR             shift, and go to state 110
    BITWISE_NOT            shift, and go to state 111
    BITWISE_XOR            shift, and go to state 112
    LOGICAL_AND            shift, and go to state 113
    LOGICAL_OR             shift, and go to state 114
    EQUAL                  shift, and go to state 115
    NOT_EQUAL              shift, and go to state 116
    LESS_THAN              shift, and go to state 117
    GREATER_THAN           shift, and go to state 118
    LESS_THAN_OR_EQUAL     shift, and go to state 119
    GREATER_THAN_OR_EQUAL  shift, and go to state 120
    RIGHT_SHIFT            shift, and go to state 121
    LEFT_SHIFT             shift, and go to state 122

    $default  reduce using rule 24 (assignment_stmt)

    op          go to state 123
    comp_op     go to state 124
    logical_op  go to state 125
    bitwise_op  go to state 126


State 266

   35 variable_declaration: prefixes type ID •
   36                     | prefixes type ID • assign_op expr
   37 array_declaration: prefixes type ID • LEFT_BRACKET expr RIGHT_BRACKET
   38                  | prefixes type ID • LEFT_BRACKET expr RIGHT_BRACKET assign_op LEFT_BRACE expr RIGHT_BRACE

    ASSIGN              shift, and go to state 134
    LEFT_BRACKET        shift, and go to state 136
    PLUS_ASSIGN         shift, and go to state 137
    MINUS_ASSIGN        shift, and go to state 138
    LEFT_SHIFT_ASSIGN   shift, and go to state 139
    RIGHT_SHIFT_ASSIGN  shift, and go to state 140
    BITWISE_AND_ASSIGN  shift, and go to state 141
    BITWISE_OR_ASSIGN   shift, and go to state 142
    BITWISE_XOR_ASSIGN  shift, and go to state 143
    MULTIPLY_ASSIGN     shift, and go to state 144
    DIVIDE_ASSIGN       shift, and go to state 145
    MODULUS_ASSIGN      shift, and go to state 146

    $default  reduce using rule 35 (variable_declaration)

    assign_op  go to state 147


State 267

   38 array_declaration: prefixes type ID LEFT_BRACKET expr RIGHT_BRACKET assign_op LEFT_BRACE expr RIGHT_BRACE •

    $default  reduce using rule 38 (array_declaration)


State 268

   25 assignment_stmt: unary_op ID •
   68 func_inst: ID • LPAREN func_inst_parameters RPAREN
   87 factor: ID •

    LPAREN  shift, and go to state 47

    RPAREN    reduce using rule 25 (assignment_stmt)
    RPAREN    [reduce using rule 87 (factor)]
    SEMI      reduce using rule 25 (assignment_stmt)
    SEMI      [reduce using rule 87 (factor)]
    $default  reduce using rule 87 (factor)


State 269

  125 if_stmt: IF LPAREN condition RPAREN • stmts
  126        | IF LPAREN condition RPAREN • stmts elseif_stmt
  127        | IF LPAREN condition RPAREN • stmts else_stmt
  128        | IF LPAREN condition RPAREN • SEMI

    IF          shift, and go to state 200
    DO          shift, and go to state 201
    WHILE       shift, and go to state 202
    FOR         shift, and go to state 203
    SWITCH      shift, and go to state 204
    RETURN      shift, and go to state 205
    BREAK       shift, and go to state 206
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 207
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 208
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 209
    LEFT_BRACE  shift, and go to state 194
    SEMI        shift, and go to state 278
    INCREMENT   shift, and go to state 76
    DECREMENT   shift, and go to state 77
    CONSTANT    shift, and go to state 14

    EXTERN    [reduce using rule 164 (prefixes)]
    LONG      [reduce using rule 164 (prefixes)]
    REGISTER  [reduce using rule 164 (prefixes)]
    SHORT     [reduce using rule 164 (prefixes)]
    STATIC    [reduce using rule 164 (prefixes)]
    SIGNED    [reduce using rule 164 (prefixes)]
    UNSIGNED  [reduce using rule 164 (prefixes)]
    VOLATILE  [reduce using rule 164 (prefixes)]
    CONSTANT  [reduce using rule 164 (prefixes)]
    $default  reduce using rule 164 (prefixes)

    stmts                 go to state 279
    stmt                  go to state 212
    assignment_stmt       go to state 213
    declaration_stmt      go to state 214
    variable_declaration  go to state 19
    array_declaration     go to state 20
    struct_declaration    go to state 22
    union_declaration     go to state 23
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    instantiation_stmt    go to state 215
    struct_inst           go to state 27
    union_inst            go to state 28
    func_inst             go to state 29
    unary_op              go to state 216
    compound_stmt         go to state 217
    if_stmt               go to state 218
    do_while_stmt         go to state 219
    while_stmt            go to state 220
    for_stmt              go to state 221
    switch_case           go to state 222
    return_stmt           go to state 223
    goto_stmt             go to state 224
    label                 go to state 225
    prefixes              go to state 226
    prefix                go to state 31


State 270

  133 do_while_stmt: DO stmts WHILE LPAREN • LPAREN condition RPAREN
  134 while_stmt: WHILE LPAREN • condition RPAREN stmts
  135           | WHILE LPAREN • condition RPAREN SEMI

    SIZEOF       shift, and go to state 71
    NUM          shift, and go to state 72
    ID           shift, and go to state 251
    FNUM         shift, and go to state 74
    LPAREN       shift, and go to state 280
    INCREMENT    shift, and go to state 76
    DECREMENT    shift, and go to state 77
    LOGICAL_NOT  shift, and go to state 78

    assignment_stmt  go to state 252
    func_inst        go to state 79
    expr             go to state 253
    term             go to state 82
    operand          go to state 83
    factor           go to state 84
    unary_op         go to state 254
    condition        go to state 257
    size_of_stmt     go to state 86
    type_cast        go to state 87


State 271

  134 while_stmt: WHILE LPAREN condition RPAREN • stmts
  135           | WHILE LPAREN condition RPAREN • SEMI

    IF          shift, and go to state 200
    DO          shift, and go to state 201
    WHILE       shift, and go to state 202
    FOR         shift, and go to state 203
    SWITCH      shift, and go to state 204
    RETURN      shift, and go to state 205
    BREAK       shift, and go to state 206
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 207
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 208
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 209
    LEFT_BRACE  shift, and go to state 194
    SEMI        shift, and go to state 281
    INCREMENT   shift, and go to state 76
    DECREMENT   shift, and go to state 77
    CONSTANT    shift, and go to state 14

    EXTERN    [reduce using rule 164 (prefixes)]
    LONG      [reduce using rule 164 (prefixes)]
    REGISTER  [reduce using rule 164 (prefixes)]
    SHORT     [reduce using rule 164 (prefixes)]
    STATIC    [reduce using rule 164 (prefixes)]
    SIGNED    [reduce using rule 164 (prefixes)]
    UNSIGNED  [reduce using rule 164 (prefixes)]
    VOLATILE  [reduce using rule 164 (prefixes)]
    CONSTANT  [reduce using rule 164 (prefixes)]
    $default  reduce using rule 164 (prefixes)

    stmts                 go to state 282
    stmt                  go to state 212
    assignment_stmt       go to state 213
    declaration_stmt      go to state 214
    variable_declaration  go to state 19
    array_declaration     go to state 20
    struct_declaration    go to state 22
    union_declaration     go to state 23
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    instantiation_stmt    go to state 215
    struct_inst           go to state 27
    union_inst            go to state 28
    func_inst             go to state 29
    unary_op              go to state 216
    compound_stmt         go to state 217
    if_stmt               go to state 218
    do_while_stmt         go to state 219
    while_stmt            go to state 220
    for_stmt              go to state 221
    switch_case           go to state 222
    return_stmt           go to state 223
    goto_stmt             go to state 224
    label                 go to state 225
    prefixes              go to state 226
    prefix                go to state 31


State 272

  137 for_stmt: FOR LPAREN variable_declaration SEMI • condition SEMI condition RPAREN stmts

    SIZEOF       shift, and go to state 71
    NUM          shift, and go to state 72
    ID           shift, and go to state 251
    FNUM         shift, and go to state 74
    LPAREN       shift, and go to state 75
    INCREMENT    shift, and go to state 76
    DECREMENT    shift, and go to state 77
    LOGICAL_NOT  shift, and go to state 78

    assignment_stmt  go to state 252
    func_inst        go to state 79
    expr             go to state 253
    term             go to state 82
    operand          go to state 83
    factor           go to state 84
    unary_op         go to state 254
    condition        go to state 283
    size_of_stmt     go to state 86
    type_cast        go to state 87


State 273

  136 for_stmt: FOR LPAREN condition SEMI • condition SEMI condition RPAREN stmts

    SIZEOF       shift, and go to state 71
    NUM          shift, and go to state 72
    ID           shift, and go to state 251
    FNUM         shift, and go to state 74
    LPAREN       shift, and go to state 75
    INCREMENT    shift, and go to state 76
    DECREMENT    shift, and go to state 77
    LOGICAL_NOT  shift, and go to state 78

    assignment_stmt  go to state 252
    func_inst        go to state 79
    expr             go to state 253
    term             go to state 82
    operand          go to state 83
    factor           go to state 84
    unary_op         go to state 254
    condition        go to state 284
    size_of_stmt     go to state 86
    type_cast        go to state 87


State 274

  140 switch_case: SWITCH LPAREN ID RPAREN • LEFT_BRACE case_list RIGHT_BRACE
  141            | SWITCH LPAREN ID RPAREN • LEFT_BRACE case_list case_default RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 285


State 275

  142 switch_case: SWITCH LPAREN expr RPAREN • LEFT_BRACE case_list RIGHT_BRACE
  143            | SWITCH LPAREN expr RPAREN • LEFT_BRACE case_list case_default RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 286


State 276

   28 assignment_stmt: ID LEFT_BRACKET expr RIGHT_BRACKET • assign_op expr

    ASSIGN              shift, and go to state 134
    PLUS_ASSIGN         shift, and go to state 137
    MINUS_ASSIGN        shift, and go to state 138
    LEFT_SHIFT_ASSIGN   shift, and go to state 139
    RIGHT_SHIFT_ASSIGN  shift, and go to state 140
    BITWISE_AND_ASSIGN  shift, and go to state 141
    BITWISE_OR_ASSIGN   shift, and go to state 142
    BITWISE_XOR_ASSIGN  shift, and go to state 143
    MULTIPLY_ASSIGN     shift, and go to state 144
    DIVIDE_ASSIGN       shift, and go to state 145
    MODULUS_ASSIGN      shift, and go to state 146

    assign_op  go to state 287


State 277

   27 assignment_stmt: ID assign_op LEFT_BRACE expr • RIGHT_BRACE
   73 expr: expr • op term
   74     | expr • comp_op term
   75     | expr • bitwise_op term
   76     | expr • logical_op term

    PLUS                   shift, and go to state 107
    MINUS                  shift, and go to state 108
    RIGHT_BRACE            shift, and go to state 288
    BITWISE_AND            shift, and go to state 109
    BITWISE_OR             shift, and go to state 110
    BITWISE_NOT            shift, and go to state 111
    BITWISE_XOR            shift, and go to state 112
    LOGICAL_AND            shift, and go to state 113
    LOGICAL_OR             shift, and go to state 114
    EQUAL                  shift, and go to state 115
    NOT_EQUAL              shift, and go to state 116
    LESS_THAN              shift, and go to state 117
    GREATER_THAN           shift, and go to state 118
    LESS_THAN_OR_EQUAL     shift, and go to state 119
    GREATER_THAN_OR_EQUAL  shift, and go to state 120
    RIGHT_SHIFT            shift, and go to state 121
    LEFT_SHIFT             shift, and go to state 122

    op          go to state 123
    comp_op     go to state 124
    logical_op  go to state 125
    bitwise_op  go to state 126


State 278

  128 if_stmt: IF LPAREN condition RPAREN SEMI •

    $default  reduce using rule 128 (if_stmt)


State 279

    8 stmts: stmts • stmt
  125 if_stmt: IF LPAREN condition RPAREN stmts •
  126        | IF LPAREN condition RPAREN stmts • elseif_stmt
  127        | IF LPAREN condition RPAREN stmts • else_stmt

    IF          shift, and go to state 200
    ELSEIF      shift, and go to state 289
    ELSE        shift, and go to state 290
    DO          shift, and go to state 201
    WHILE       shift, and go to state 202
    FOR         shift, and go to state 203
    SWITCH      shift, and go to state 204
    RETURN      shift, and go to state 205
    BREAK       shift, and go to state 206
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 207
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 208
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 209
    LEFT_BRACE  shift, and go to state 194
    INCREMENT   shift, and go to state 76
    DECREMENT   shift, and go to state 77
    CONSTANT    shift, and go to state 14

    IF          [reduce using rule 125 (if_stmt)]
    ELSEIF      [reduce using rule 125 (if_stmt)]
    ELSE        [reduce using rule 125 (if_stmt)]
    DO          [reduce using rule 125 (if_stmt)]
    WHILE       [reduce using rule 125 (if_stmt)]
    FOR         [reduce using rule 125 (if_stmt)]
    SWITCH      [reduce using rule 125 (if_stmt)]
    RETURN      [reduce using rule 125 (if_stmt)]
    BREAK       [reduce using rule 125 (if_stmt)]
    INT         reduce using rule 125 (if_stmt)
    INT         [reduce using rule 164 (prefixes)]
    FLOAT       reduce using rule 125 (if_stmt)
    FLOAT       [reduce using rule 164 (prefixes)]
    DOUBLE      reduce using rule 125 (if_stmt)
    DOUBLE      [reduce using rule 164 (prefixes)]
    CHAR        reduce using rule 125 (if_stmt)
    CHAR        [reduce using rule 164 (prefixes)]
    VOID        reduce using rule 125 (if_stmt)
    VOID        [reduce using rule 164 (prefixes)]
    STRUCT      [reduce using rule 125 (if_stmt)]
    TYPEDEF     [reduce using rule 125 (if_stmt)]
    CONTINUE    [reduce using rule 125 (if_stmt)]
    EXTERN      [reduce using rule 125 (if_stmt)]
    EXTERN      [reduce using rule 164 (prefixes)]
    GOTO        [reduce using rule 125 (if_stmt)]
    LONG        [reduce using rule 125 (if_stmt)]
    LONG        [reduce using rule 164 (prefixes)]
    ENUM        [reduce using rule 125 (if_stmt)]
    REGISTER    [reduce using rule 125 (if_stmt)]
    REGISTER    [reduce using rule 164 (prefixes)]
    SHORT       [reduce using rule 125 (if_stmt)]
    SHORT       [reduce using rule 164 (prefixes)]
    STATIC      [reduce using rule 125 (if_stmt)]
    STATIC      [reduce using rule 164 (prefixes)]
    SIGNED      [reduce using rule 125 (if_stmt)]
    SIGNED      [reduce using rule 164 (prefixes)]
    UNION       [reduce using rule 125 (if_stmt)]
    UNSIGNED    [reduce using rule 125 (if_stmt)]
    UNSIGNED    [reduce using rule 164 (prefixes)]
    VOLATILE    [reduce using rule 125 (if_stmt)]
    VOLATILE    [reduce using rule 164 (prefixes)]
    ID          [reduce using rule 125 (if_stmt)]
    LEFT_BRACE  [reduce using rule 125 (if_stmt)]
    INCREMENT   [reduce using rule 125 (if_stmt)]
    DECREMENT   [reduce using rule 125 (if_stmt)]
    CONSTANT    [reduce using rule 125 (if_stmt)]
    CONSTANT    [reduce using rule 164 (prefixes)]
    $default    reduce using rule 125 (if_stmt)

    stmt                  go to state 242
    assignment_stmt       go to state 213
    declaration_stmt      go to state 214
    variable_declaration  go to state 19
    array_declaration     go to state 20
    struct_declaration    go to state 22
    union_declaration     go to state 23
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    instantiation_stmt    go to state 215
    struct_inst           go to state 27
    union_inst            go to state 28
    func_inst             go to state 29
    unary_op              go to state 216
    compound_stmt         go to state 217
    if_stmt               go to state 218
    elseif_stmt           go to state 291
    else_stmt             go to state 292
    do_while_stmt         go to state 219
    while_stmt            go to state 220
    for_stmt              go to state 221
    switch_case           go to state 222
    return_stmt           go to state 223
    goto_stmt             go to state 224
    label                 go to state 225
    prefixes              go to state 226
    prefix                go to state 31


State 280

   85 factor: LPAREN • expr RPAREN
  133 do_while_stmt: DO stmts WHILE LPAREN LPAREN • condition RPAREN
  176 type_cast: LPAREN • type RPAREN

    INT          shift, and go to state 33
    FLOAT        shift, and go to state 34
    DOUBLE       shift, and go to state 35
    CHAR         shift, and go to state 36
    VOID         shift, and go to state 37
    SIZEOF       shift, and go to state 71
    NUM          shift, and go to state 72
    ID           shift, and go to state 251
    FNUM         shift, and go to state 74
    LPAREN       shift, and go to state 75
    INCREMENT    shift, and go to state 76
    DECREMENT    shift, and go to state 77
    LOGICAL_NOT  shift, and go to state 78

    assignment_stmt  go to state 252
    func_inst        go to state 79
    expr             go to state 293
    term             go to state 82
    operand          go to state 83
    factor           go to state 84
    unary_op         go to state 254
    condition        go to state 294
    size_of_stmt     go to state 86
    type             go to state 102
    type_cast        go to state 87


State 281

  135 while_stmt: WHILE LPAREN condition RPAREN SEMI •

    $default  reduce using rule 135 (while_stmt)


State 282

    8 stmts: stmts • stmt
  134 while_stmt: WHILE LPAREN condition RPAREN stmts •

    IF          shift, and go to state 200
    DO          shift, and go to state 201
    WHILE       shift, and go to state 202
    FOR         shift, and go to state 203
    SWITCH      shift, and go to state 204
    RETURN      shift, and go to state 205
    BREAK       shift, and go to state 206
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 207
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 208
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 209
    LEFT_BRACE  shift, and go to state 194
    INCREMENT   shift, and go to state 76
    DECREMENT   shift, and go to state 77
    CONSTANT    shift, and go to state 14

    IF          [reduce using rule 134 (while_stmt)]
    DO          [reduce using rule 134 (while_stmt)]
    WHILE       [reduce using rule 134 (while_stmt)]
    FOR         [reduce using rule 134 (while_stmt)]
    SWITCH      [reduce using rule 134 (while_stmt)]
    RETURN      [reduce using rule 134 (while_stmt)]
    BREAK       [reduce using rule 134 (while_stmt)]
    INT         reduce using rule 134 (while_stmt)
    INT         [reduce using rule 164 (prefixes)]
    FLOAT       reduce using rule 134 (while_stmt)
    FLOAT       [reduce using rule 164 (prefixes)]
    DOUBLE      reduce using rule 134 (while_stmt)
    DOUBLE      [reduce using rule 164 (prefixes)]
    CHAR        reduce using rule 134 (while_stmt)
    CHAR        [reduce using rule 164 (prefixes)]
    VOID        reduce using rule 134 (while_stmt)
    VOID        [reduce using rule 164 (prefixes)]
    STRUCT      [reduce using rule 134 (while_stmt)]
    TYPEDEF     [reduce using rule 134 (while_stmt)]
    CONTINUE    [reduce using rule 134 (while_stmt)]
    EXTERN      [reduce using rule 134 (while_stmt)]
    EXTERN      [reduce using rule 164 (prefixes)]
    GOTO        [reduce using rule 134 (while_stmt)]
    LONG        [reduce using rule 134 (while_stmt)]
    LONG        [reduce using rule 164 (prefixes)]
    ENUM        [reduce using rule 134 (while_stmt)]
    REGISTER    [reduce using rule 134 (while_stmt)]
    REGISTER    [reduce using rule 164 (prefixes)]
    SHORT       [reduce using rule 134 (while_stmt)]
    SHORT       [reduce using rule 164 (prefixes)]
    STATIC      [reduce using rule 134 (while_stmt)]
    STATIC      [reduce using rule 164 (prefixes)]
    SIGNED      [reduce using rule 134 (while_stmt)]
    SIGNED      [reduce using rule 164 (prefixes)]
    UNION       [reduce using rule 134 (while_stmt)]
    UNSIGNED    [reduce using rule 134 (while_stmt)]
    UNSIGNED    [reduce using rule 164 (prefixes)]
    VOLATILE    [reduce using rule 134 (while_stmt)]
    VOLATILE    [reduce using rule 164 (prefixes)]
    ID          [reduce using rule 134 (while_stmt)]
    LEFT_BRACE  [reduce using rule 134 (while_stmt)]
    INCREMENT   [reduce using rule 134 (while_stmt)]
    DECREMENT   [reduce using rule 134 (while_stmt)]
    CONSTANT    [reduce using rule 134 (while_stmt)]
    CONSTANT    [reduce using rule 164 (prefixes)]
    $default    reduce using rule 134 (while_stmt)

    stmt                  go to state 242
    assignment_stmt       go to state 213
    declaration_stmt      go to state 214
    variable_declaration  go to state 19
    array_declaration     go to state 20
    struct_declaration    go to state 22
    union_declaration     go to state 23
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    instantiation_stmt    go to state 215
    struct_inst           go to state 27
    union_inst            go to state 28
    func_inst             go to state 29
    unary_op              go to state 216
    compound_stmt         go to state 217
    if_stmt               go to state 218
    do_while_stmt         go to state 219
    while_stmt            go to state 220
    for_stmt              go to state 221
    switch_case           go to state 222
    return_stmt           go to state 223
    goto_stmt             go to state 224
    label                 go to state 225
    prefixes              go to state 226
    prefix                go to state 31


State 283

  137 for_stmt: FOR LPAREN variable_declaration SEMI condition • SEMI condition RPAREN stmts

    SEMI  shift, and go to state 295


State 284

  136 for_stmt: FOR LPAREN condition SEMI condition • SEMI condition RPAREN stmts

    SEMI  shift, and go to state 296


State 285

  140 switch_case: SWITCH LPAREN ID RPAREN LEFT_BRACE • case_list RIGHT_BRACE
  141            | SWITCH LPAREN ID RPAREN LEFT_BRACE • case_list case_default RIGHT_BRACE

    CASE  shift, and go to state 297

    case_list  go to state 298
    case       go to state 299


State 286

  142 switch_case: SWITCH LPAREN expr RPAREN LEFT_BRACE • case_list RIGHT_BRACE
  143            | SWITCH LPAREN expr RPAREN LEFT_BRACE • case_list case_default RIGHT_BRACE

    CASE  shift, and go to state 297

    case_list  go to state 300
    case       go to state 299


State 287

   28 assignment_stmt: ID LEFT_BRACKET expr RIGHT_BRACKET assign_op • expr

    SIZEOF       shift, and go to state 71
    NUM          shift, and go to state 72
    ID           shift, and go to state 73
    FNUM         shift, and go to state 74
    LPAREN       shift, and go to state 75
    INCREMENT    shift, and go to state 76
    DECREMENT    shift, and go to state 77
    LOGICAL_NOT  shift, and go to state 78

    func_inst     go to state 79
    expr          go to state 301
    term          go to state 82
    operand       go to state 83
    factor        go to state 84
    unary_op      go to state 85
    size_of_stmt  go to state 86
    type_cast     go to state 87


State 288

   27 assignment_stmt: ID assign_op LEFT_BRACE expr RIGHT_BRACE •

    $default  reduce using rule 27 (assignment_stmt)


State 289

  130 elseif_stmt: ELSEIF • LPAREN condition RPAREN stmts
  131            | ELSEIF • LPAREN condition RPAREN stmts else_stmt

    LPAREN  shift, and go to state 302


State 290

  132 else_stmt: ELSE • stmts

    IF          shift, and go to state 200
    DO          shift, and go to state 201
    WHILE       shift, and go to state 202
    FOR         shift, and go to state 203
    SWITCH      shift, and go to state 204
    RETURN      shift, and go to state 205
    BREAK       shift, and go to state 206
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 207
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 208
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 209
    LEFT_BRACE  shift, and go to state 194
    INCREMENT   shift, and go to state 76
    DECREMENT   shift, and go to state 77
    CONSTANT    shift, and go to state 14

    EXTERN    [reduce using rule 164 (prefixes)]
    LONG      [reduce using rule 164 (prefixes)]
    REGISTER  [reduce using rule 164 (prefixes)]
    SHORT     [reduce using rule 164 (prefixes)]
    STATIC    [reduce using rule 164 (prefixes)]
    SIGNED    [reduce using rule 164 (prefixes)]
    UNSIGNED  [reduce using rule 164 (prefixes)]
    VOLATILE  [reduce using rule 164 (prefixes)]
    CONSTANT  [reduce using rule 164 (prefixes)]
    $default  reduce using rule 164 (prefixes)

    stmts                 go to state 303
    stmt                  go to state 212
    assignment_stmt       go to state 213
    declaration_stmt      go to state 214
    variable_declaration  go to state 19
    array_declaration     go to state 20
    struct_declaration    go to state 22
    union_declaration     go to state 23
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    instantiation_stmt    go to state 215
    struct_inst           go to state 27
    union_inst            go to state 28
    func_inst             go to state 29
    unary_op              go to state 216
    compound_stmt         go to state 217
    if_stmt               go to state 218
    do_while_stmt         go to state 219
    while_stmt            go to state 220
    for_stmt              go to state 221
    switch_case           go to state 222
    return_stmt           go to state 223
    goto_stmt             go to state 224
    label                 go to state 225
    prefixes              go to state 226
    prefix                go to state 31


State 291

  126 if_stmt: IF LPAREN condition RPAREN stmts elseif_stmt •
  129 elseif_stmt: elseif_stmt • ELSEIF LPAREN condition RPAREN stmts

    ELSEIF  shift, and go to state 304

    ELSEIF    [reduce using rule 126 (if_stmt)]
    $default  reduce using rule 126 (if_stmt)


State 292

  127 if_stmt: IF LPAREN condition RPAREN stmts else_stmt •

    $default  reduce using rule 127 (if_stmt)


State 293

   73 expr: expr • op term
   74     | expr • comp_op term
   75     | expr • bitwise_op term
   76     | expr • logical_op term
   85 factor: LPAREN expr • RPAREN
  138 condition: expr •

    PLUS                   shift, and go to state 107
    MINUS                  shift, and go to state 108
    RPAREN                 shift, and go to state 166
    BITWISE_AND            shift, and go to state 109
    BITWISE_OR             shift, and go to state 110
    BITWISE_NOT            shift, and go to state 111
    BITWISE_XOR            shift, and go to state 112
    LOGICAL_AND            shift, and go to state 113
    LOGICAL_OR             shift, and go to state 114
    EQUAL                  shift, and go to state 115
    NOT_EQUAL              shift, and go to state 116
    LESS_THAN              shift, and go to state 117
    GREATER_THAN           shift, and go to state 118
    LESS_THAN_OR_EQUAL     shift, and go to state 119
    GREATER_THAN_OR_EQUAL  shift, and go to state 120
    RIGHT_SHIFT            shift, and go to state 121
    LEFT_SHIFT             shift, and go to state 122

    RPAREN  [reduce using rule 138 (condition)]

    op          go to state 123
    comp_op     go to state 124
    logical_op  go to state 125
    bitwise_op  go to state 126


State 294

  133 do_while_stmt: DO stmts WHILE LPAREN LPAREN condition • RPAREN

    RPAREN  shift, and go to state 305


State 295

  137 for_stmt: FOR LPAREN variable_declaration SEMI condition SEMI • condition RPAREN stmts

    SIZEOF       shift, and go to state 71
    NUM          shift, and go to state 72
    ID           shift, and go to state 251
    FNUM         shift, and go to state 74
    LPAREN       shift, and go to state 75
    INCREMENT    shift, and go to state 76
    DECREMENT    shift, and go to state 77
    LOGICAL_NOT  shift, and go to state 78

    assignment_stmt  go to state 252
    func_inst        go to state 79
    expr             go to state 253
    term             go to state 82
    operand          go to state 83
    factor           go to state 84
    unary_op         go to state 254
    condition        go to state 306
    size_of_stmt     go to state 86
    type_cast        go to state 87


State 296

  136 for_stmt: FOR LPAREN condition SEMI condition SEMI • condition RPAREN stmts

    SIZEOF       shift, and go to state 71
    NUM          shift, and go to state 72
    ID           shift, and go to state 251
    FNUM         shift, and go to state 74
    LPAREN       shift, and go to state 75
    INCREMENT    shift, and go to state 76
    DECREMENT    shift, and go to state 77
    LOGICAL_NOT  shift, and go to state 78

    assignment_stmt  go to state 252
    func_inst        go to state 79
    expr             go to state 253
    term             go to state 82
    operand          go to state 83
    factor           go to state 84
    unary_op         go to state 254
    condition        go to state 307
    size_of_stmt     go to state 86
    type_cast        go to state 87


State 297

  146 case: CASE • NUM COLON stmts BREAK

    NUM  shift, and go to state 308


State 298

  140 switch_case: SWITCH LPAREN ID RPAREN LEFT_BRACE case_list • RIGHT_BRACE
  141            | SWITCH LPAREN ID RPAREN LEFT_BRACE case_list • case_default RIGHT_BRACE
  144 case_list: case_list • case

    CASE         shift, and go to state 297
    DEFAULT      shift, and go to state 309
    RIGHT_BRACE  shift, and go to state 310

    case          go to state 311
    case_default  go to state 312


State 299

  145 case_list: case •

    $default  reduce using rule 145 (case_list)


State 300

  142 switch_case: SWITCH LPAREN expr RPAREN LEFT_BRACE case_list • RIGHT_BRACE
  143            | SWITCH LPAREN expr RPAREN LEFT_BRACE case_list • case_default RIGHT_BRACE
  144 case_list: case_list • case

    CASE         shift, and go to state 297
    DEFAULT      shift, and go to state 309
    RIGHT_BRACE  shift, and go to state 313

    case          go to state 311
    case_default  go to state 314


State 301

   28 assignment_stmt: ID LEFT_BRACKET expr RIGHT_BRACKET assign_op expr •
   73 expr: expr • op term
   74     | expr • comp_op term
   75     | expr • bitwise_op term
   76     | expr • logical_op term

    PLUS                   shift, and go to state 107
    MINUS                  shift, and go to state 108
    BITWISE_AND            shift, and go to state 109
    BITWISE_OR             shift, and go to state 110
    BITWISE_NOT            shift, and go to state 111
    BITWISE_XOR            shift, and go to state 112
    LOGICAL_AND            shift, and go to state 113
    LOGICAL_OR             shift, and go to state 114
    EQUAL                  shift, and go to state 115
    NOT_EQUAL              shift, and go to state 116
    LESS_THAN              shift, and go to state 117
    GREATER_THAN           shift, and go to state 118
    LESS_THAN_OR_EQUAL     shift, and go to state 119
    GREATER_THAN_OR_EQUAL  shift, and go to state 120
    RIGHT_SHIFT            shift, and go to state 121
    LEFT_SHIFT             shift, and go to state 122

    $default  reduce using rule 28 (assignment_stmt)

    op          go to state 123
    comp_op     go to state 124
    logical_op  go to state 125
    bitwise_op  go to state 126


State 302

  130 elseif_stmt: ELSEIF LPAREN • condition RPAREN stmts
  131            | ELSEIF LPAREN • condition RPAREN stmts else_stmt

    SIZEOF       shift, and go to state 71
    NUM          shift, and go to state 72
    ID           shift, and go to state 251
    FNUM         shift, and go to state 74
    LPAREN       shift, and go to state 75
    INCREMENT    shift, and go to state 76
    DECREMENT    shift, and go to state 77
    LOGICAL_NOT  shift, and go to state 78

    assignment_stmt  go to state 252
    func_inst        go to state 79
    expr             go to state 253
    term             go to state 82
    operand          go to state 83
    factor           go to state 84
    unary_op         go to state 254
    condition        go to state 315
    size_of_stmt     go to state 86
    type_cast        go to state 87


State 303

    8 stmts: stmts • stmt
  132 else_stmt: ELSE stmts •

    IF          shift, and go to state 200
    DO          shift, and go to state 201
    WHILE       shift, and go to state 202
    FOR         shift, and go to state 203
    SWITCH      shift, and go to state 204
    RETURN      shift, and go to state 205
    BREAK       shift, and go to state 206
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 207
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 208
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 209
    LEFT_BRACE  shift, and go to state 194
    INCREMENT   shift, and go to state 76
    DECREMENT   shift, and go to state 77
    CONSTANT    shift, and go to state 14

    IF          [reduce using rule 132 (else_stmt)]
    DO          [reduce using rule 132 (else_stmt)]
    WHILE       [reduce using rule 132 (else_stmt)]
    FOR         [reduce using rule 132 (else_stmt)]
    SWITCH      [reduce using rule 132 (else_stmt)]
    RETURN      [reduce using rule 132 (else_stmt)]
    BREAK       [reduce using rule 132 (else_stmt)]
    INT         reduce using rule 132 (else_stmt)
    INT         [reduce using rule 164 (prefixes)]
    FLOAT       reduce using rule 132 (else_stmt)
    FLOAT       [reduce using rule 164 (prefixes)]
    DOUBLE      reduce using rule 132 (else_stmt)
    DOUBLE      [reduce using rule 164 (prefixes)]
    CHAR        reduce using rule 132 (else_stmt)
    CHAR        [reduce using rule 164 (prefixes)]
    VOID        reduce using rule 132 (else_stmt)
    VOID        [reduce using rule 164 (prefixes)]
    STRUCT      [reduce using rule 132 (else_stmt)]
    TYPEDEF     [reduce using rule 132 (else_stmt)]
    CONTINUE    [reduce using rule 132 (else_stmt)]
    EXTERN      [reduce using rule 132 (else_stmt)]
    EXTERN      [reduce using rule 164 (prefixes)]
    GOTO        [reduce using rule 132 (else_stmt)]
    LONG        [reduce using rule 132 (else_stmt)]
    LONG        [reduce using rule 164 (prefixes)]
    ENUM        [reduce using rule 132 (else_stmt)]
    REGISTER    [reduce using rule 132 (else_stmt)]
    REGISTER    [reduce using rule 164 (prefixes)]
    SHORT       [reduce using rule 132 (else_stmt)]
    SHORT       [reduce using rule 164 (prefixes)]
    STATIC      [reduce using rule 132 (else_stmt)]
    STATIC      [reduce using rule 164 (prefixes)]
    SIGNED      [reduce using rule 132 (else_stmt)]
    SIGNED      [reduce using rule 164 (prefixes)]
    UNION       [reduce using rule 132 (else_stmt)]
    UNSIGNED    [reduce using rule 132 (else_stmt)]
    UNSIGNED    [reduce using rule 164 (prefixes)]
    VOLATILE    [reduce using rule 132 (else_stmt)]
    VOLATILE    [reduce using rule 164 (prefixes)]
    ID          [reduce using rule 132 (else_stmt)]
    LEFT_BRACE  [reduce using rule 132 (else_stmt)]
    INCREMENT   [reduce using rule 132 (else_stmt)]
    DECREMENT   [reduce using rule 132 (else_stmt)]
    CONSTANT    [reduce using rule 132 (else_stmt)]
    CONSTANT    [reduce using rule 164 (prefixes)]
    $default    reduce using rule 132 (else_stmt)

    stmt                  go to state 242
    assignment_stmt       go to state 213
    declaration_stmt      go to state 214
    variable_declaration  go to state 19
    array_declaration     go to state 20
    struct_declaration    go to state 22
    union_declaration     go to state 23
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    instantiation_stmt    go to state 215
    struct_inst           go to state 27
    union_inst            go to state 28
    func_inst             go to state 29
    unary_op              go to state 216
    compound_stmt         go to state 217
    if_stmt               go to state 218
    do_while_stmt         go to state 219
    while_stmt            go to state 220
    for_stmt              go to state 221
    switch_case           go to state 222
    return_stmt           go to state 223
    goto_stmt             go to state 224
    label                 go to state 225
    prefixes              go to state 226
    prefix                go to state 31


State 304

  129 elseif_stmt: elseif_stmt ELSEIF • LPAREN condition RPAREN stmts

    LPAREN  shift, and go to state 316


State 305

  133 do_while_stmt: DO stmts WHILE LPAREN LPAREN condition RPAREN •

    $default  reduce using rule 133 (do_while_stmt)


State 306

  137 for_stmt: FOR LPAREN variable_declaration SEMI condition SEMI condition • RPAREN stmts

    RPAREN  shift, and go to state 317


State 307

  136 for_stmt: FOR LPAREN condition SEMI condition SEMI condition • RPAREN stmts

    RPAREN  shift, and go to state 318


State 308

  146 case: CASE NUM • COLON stmts BREAK

    COLON  shift, and go to state 319


State 309

  147 case_default: DEFAULT • COLON stmts BREAK

    COLON  shift, and go to state 320


State 310

  140 switch_case: SWITCH LPAREN ID RPAREN LEFT_BRACE case_list RIGHT_BRACE •

    $default  reduce using rule 140 (switch_case)


State 311

  144 case_list: case_list case •

    $default  reduce using rule 144 (case_list)


State 312

  141 switch_case: SWITCH LPAREN ID RPAREN LEFT_BRACE case_list case_default • RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 321


State 313

  142 switch_case: SWITCH LPAREN expr RPAREN LEFT_BRACE case_list RIGHT_BRACE •

    $default  reduce using rule 142 (switch_case)


State 314

  143 switch_case: SWITCH LPAREN expr RPAREN LEFT_BRACE case_list case_default • RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 322


State 315

  130 elseif_stmt: ELSEIF LPAREN condition • RPAREN stmts
  131            | ELSEIF LPAREN condition • RPAREN stmts else_stmt

    RPAREN  shift, and go to state 323


State 316

  129 elseif_stmt: elseif_stmt ELSEIF LPAREN • condition RPAREN stmts

    SIZEOF       shift, and go to state 71
    NUM          shift, and go to state 72
    ID           shift, and go to state 251
    FNUM         shift, and go to state 74
    LPAREN       shift, and go to state 75
    INCREMENT    shift, and go to state 76
    DECREMENT    shift, and go to state 77
    LOGICAL_NOT  shift, and go to state 78

    assignment_stmt  go to state 252
    func_inst        go to state 79
    expr             go to state 253
    term             go to state 82
    operand          go to state 83
    factor           go to state 84
    unary_op         go to state 254
    condition        go to state 324
    size_of_stmt     go to state 86
    type_cast        go to state 87


State 317

  137 for_stmt: FOR LPAREN variable_declaration SEMI condition SEMI condition RPAREN • stmts

    IF          shift, and go to state 200
    DO          shift, and go to state 201
    WHILE       shift, and go to state 202
    FOR         shift, and go to state 203
    SWITCH      shift, and go to state 204
    RETURN      shift, and go to state 205
    BREAK       shift, and go to state 206
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 207
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 208
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 209
    LEFT_BRACE  shift, and go to state 194
    INCREMENT   shift, and go to state 76
    DECREMENT   shift, and go to state 77
    CONSTANT    shift, and go to state 14

    EXTERN    [reduce using rule 164 (prefixes)]
    LONG      [reduce using rule 164 (prefixes)]
    REGISTER  [reduce using rule 164 (prefixes)]
    SHORT     [reduce using rule 164 (prefixes)]
    STATIC    [reduce using rule 164 (prefixes)]
    SIGNED    [reduce using rule 164 (prefixes)]
    UNSIGNED  [reduce using rule 164 (prefixes)]
    VOLATILE  [reduce using rule 164 (prefixes)]
    CONSTANT  [reduce using rule 164 (prefixes)]
    $default  reduce using rule 164 (prefixes)

    stmts                 go to state 325
    stmt                  go to state 212
    assignment_stmt       go to state 213
    declaration_stmt      go to state 214
    variable_declaration  go to state 19
    array_declaration     go to state 20
    struct_declaration    go to state 22
    union_declaration     go to state 23
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    instantiation_stmt    go to state 215
    struct_inst           go to state 27
    union_inst            go to state 28
    func_inst             go to state 29
    unary_op              go to state 216
    compound_stmt         go to state 217
    if_stmt               go to state 218
    do_while_stmt         go to state 219
    while_stmt            go to state 220
    for_stmt              go to state 221
    switch_case           go to state 222
    return_stmt           go to state 223
    goto_stmt             go to state 224
    label                 go to state 225
    prefixes              go to state 226
    prefix                go to state 31


State 318

  136 for_stmt: FOR LPAREN condition SEMI condition SEMI condition RPAREN • stmts

    IF          shift, and go to state 200
    DO          shift, and go to state 201
    WHILE       shift, and go to state 202
    FOR         shift, and go to state 203
    SWITCH      shift, and go to state 204
    RETURN      shift, and go to state 205
    BREAK       shift, and go to state 206
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 207
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 208
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 209
    LEFT_BRACE  shift, and go to state 194
    INCREMENT   shift, and go to state 76
    DECREMENT   shift, and go to state 77
    CONSTANT    shift, and go to state 14

    EXTERN    [reduce using rule 164 (prefixes)]
    LONG      [reduce using rule 164 (prefixes)]
    REGISTER  [reduce using rule 164 (prefixes)]
    SHORT     [reduce using rule 164 (prefixes)]
    STATIC    [reduce using rule 164 (prefixes)]
    SIGNED    [reduce using rule 164 (prefixes)]
    UNSIGNED  [reduce using rule 164 (prefixes)]
    VOLATILE  [reduce using rule 164 (prefixes)]
    CONSTANT  [reduce using rule 164 (prefixes)]
    $default  reduce using rule 164 (prefixes)

    stmts                 go to state 326
    stmt                  go to state 212
    assignment_stmt       go to state 213
    declaration_stmt      go to state 214
    variable_declaration  go to state 19
    array_declaration     go to state 20
    struct_declaration    go to state 22
    union_declaration     go to state 23
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    instantiation_stmt    go to state 215
    struct_inst           go to state 27
    union_inst            go to state 28
    func_inst             go to state 29
    unary_op              go to state 216
    compound_stmt         go to state 217
    if_stmt               go to state 218
    do_while_stmt         go to state 219
    while_stmt            go to state 220
    for_stmt              go to state 221
    switch_case           go to state 222
    return_stmt           go to state 223
    goto_stmt             go to state 224
    label                 go to state 225
    prefixes              go to state 226
    prefix                go to state 31


State 319

  146 case: CASE NUM COLON • stmts BREAK

    IF          shift, and go to state 200
    DO          shift, and go to state 201
    WHILE       shift, and go to state 202
    FOR         shift, and go to state 203
    SWITCH      shift, and go to state 204
    RETURN      shift, and go to state 205
    BREAK       shift, and go to state 206
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 207
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 208
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 209
    LEFT_BRACE  shift, and go to state 194
    INCREMENT   shift, and go to state 76
    DECREMENT   shift, and go to state 77
    CONSTANT    shift, and go to state 14

    EXTERN    [reduce using rule 164 (prefixes)]
    LONG      [reduce using rule 164 (prefixes)]
    REGISTER  [reduce using rule 164 (prefixes)]
    SHORT     [reduce using rule 164 (prefixes)]
    STATIC    [reduce using rule 164 (prefixes)]
    SIGNED    [reduce using rule 164 (prefixes)]
    UNSIGNED  [reduce using rule 164 (prefixes)]
    VOLATILE  [reduce using rule 164 (prefixes)]
    CONSTANT  [reduce using rule 164 (prefixes)]
    $default  reduce using rule 164 (prefixes)

    stmts                 go to state 327
    stmt                  go to state 212
    assignment_stmt       go to state 213
    declaration_stmt      go to state 214
    variable_declaration  go to state 19
    array_declaration     go to state 20
    struct_declaration    go to state 22
    union_declaration     go to state 23
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    instantiation_stmt    go to state 215
    struct_inst           go to state 27
    union_inst            go to state 28
    func_inst             go to state 29
    unary_op              go to state 216
    compound_stmt         go to state 217
    if_stmt               go to state 218
    do_while_stmt         go to state 219
    while_stmt            go to state 220
    for_stmt              go to state 221
    switch_case           go to state 222
    return_stmt           go to state 223
    goto_stmt             go to state 224
    label                 go to state 225
    prefixes              go to state 226
    prefix                go to state 31


State 320

  147 case_default: DEFAULT COLON • stmts BREAK

    IF          shift, and go to state 200
    DO          shift, and go to state 201
    WHILE       shift, and go to state 202
    FOR         shift, and go to state 203
    SWITCH      shift, and go to state 204
    RETURN      shift, and go to state 205
    BREAK       shift, and go to state 206
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 207
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 208
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 209
    LEFT_BRACE  shift, and go to state 194
    INCREMENT   shift, and go to state 76
    DECREMENT   shift, and go to state 77
    CONSTANT    shift, and go to state 14

    EXTERN    [reduce using rule 164 (prefixes)]
    LONG      [reduce using rule 164 (prefixes)]
    REGISTER  [reduce using rule 164 (prefixes)]
    SHORT     [reduce using rule 164 (prefixes)]
    STATIC    [reduce using rule 164 (prefixes)]
    SIGNED    [reduce using rule 164 (prefixes)]
    UNSIGNED  [reduce using rule 164 (prefixes)]
    VOLATILE  [reduce using rule 164 (prefixes)]
    CONSTANT  [reduce using rule 164 (prefixes)]
    $default  reduce using rule 164 (prefixes)

    stmts                 go to state 328
    stmt                  go to state 212
    assignment_stmt       go to state 213
    declaration_stmt      go to state 214
    variable_declaration  go to state 19
    array_declaration     go to state 20
    struct_declaration    go to state 22
    union_declaration     go to state 23
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    instantiation_stmt    go to state 215
    struct_inst           go to state 27
    union_inst            go to state 28
    func_inst             go to state 29
    unary_op              go to state 216
    compound_stmt         go to state 217
    if_stmt               go to state 218
    do_while_stmt         go to state 219
    while_stmt            go to state 220
    for_stmt              go to state 221
    switch_case           go to state 222
    return_stmt           go to state 223
    goto_stmt             go to state 224
    label                 go to state 225
    prefixes              go to state 226
    prefix                go to state 31


State 321

  141 switch_case: SWITCH LPAREN ID RPAREN LEFT_BRACE case_list case_default RIGHT_BRACE •

    $default  reduce using rule 141 (switch_case)


State 322

  143 switch_case: SWITCH LPAREN expr RPAREN LEFT_BRACE case_list case_default RIGHT_BRACE •

    $default  reduce using rule 143 (switch_case)


State 323

  130 elseif_stmt: ELSEIF LPAREN condition RPAREN • stmts
  131            | ELSEIF LPAREN condition RPAREN • stmts else_stmt

    IF          shift, and go to state 200
    DO          shift, and go to state 201
    WHILE       shift, and go to state 202
    FOR         shift, and go to state 203
    SWITCH      shift, and go to state 204
    RETURN      shift, and go to state 205
    BREAK       shift, and go to state 206
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 207
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 208
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 209
    LEFT_BRACE  shift, and go to state 194
    INCREMENT   shift, and go to state 76
    DECREMENT   shift, and go to state 77
    CONSTANT    shift, and go to state 14

    EXTERN    [reduce using rule 164 (prefixes)]
    LONG      [reduce using rule 164 (prefixes)]
    REGISTER  [reduce using rule 164 (prefixes)]
    SHORT     [reduce using rule 164 (prefixes)]
    STATIC    [reduce using rule 164 (prefixes)]
    SIGNED    [reduce using rule 164 (prefixes)]
    UNSIGNED  [reduce using rule 164 (prefixes)]
    VOLATILE  [reduce using rule 164 (prefixes)]
    CONSTANT  [reduce using rule 164 (prefixes)]
    $default  reduce using rule 164 (prefixes)

    stmts                 go to state 329
    stmt                  go to state 212
    assignment_stmt       go to state 213
    declaration_stmt      go to state 214
    variable_declaration  go to state 19
    array_declaration     go to state 20
    struct_declaration    go to state 22
    union_declaration     go to state 23
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    instantiation_stmt    go to state 215
    struct_inst           go to state 27
    union_inst            go to state 28
    func_inst             go to state 29
    unary_op              go to state 216
    compound_stmt         go to state 217
    if_stmt               go to state 218
    do_while_stmt         go to state 219
    while_stmt            go to state 220
    for_stmt              go to state 221
    switch_case           go to state 222
    return_stmt           go to state 223
    goto_stmt             go to state 224
    label                 go to state 225
    prefixes              go to state 226
    prefix                go to state 31


State 324

  129 elseif_stmt: elseif_stmt ELSEIF LPAREN condition • RPAREN stmts

    RPAREN  shift, and go to state 330


State 325

    8 stmts: stmts • stmt
  137 for_stmt: FOR LPAREN variable_declaration SEMI condition SEMI condition RPAREN stmts •

    IF          shift, and go to state 200
    DO          shift, and go to state 201
    WHILE       shift, and go to state 202
    FOR         shift, and go to state 203
    SWITCH      shift, and go to state 204
    RETURN      shift, and go to state 205
    BREAK       shift, and go to state 206
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 207
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 208
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 209
    LEFT_BRACE  shift, and go to state 194
    INCREMENT   shift, and go to state 76
    DECREMENT   shift, and go to state 77
    CONSTANT    shift, and go to state 14

    IF          [reduce using rule 137 (for_stmt)]
    DO          [reduce using rule 137 (for_stmt)]
    WHILE       [reduce using rule 137 (for_stmt)]
    FOR         [reduce using rule 137 (for_stmt)]
    SWITCH      [reduce using rule 137 (for_stmt)]
    RETURN      [reduce using rule 137 (for_stmt)]
    BREAK       [reduce using rule 137 (for_stmt)]
    INT         reduce using rule 137 (for_stmt)
    INT         [reduce using rule 164 (prefixes)]
    FLOAT       reduce using rule 137 (for_stmt)
    FLOAT       [reduce using rule 164 (prefixes)]
    DOUBLE      reduce using rule 137 (for_stmt)
    DOUBLE      [reduce using rule 164 (prefixes)]
    CHAR        reduce using rule 137 (for_stmt)
    CHAR        [reduce using rule 164 (prefixes)]
    VOID        reduce using rule 137 (for_stmt)
    VOID        [reduce using rule 164 (prefixes)]
    STRUCT      [reduce using rule 137 (for_stmt)]
    TYPEDEF     [reduce using rule 137 (for_stmt)]
    CONTINUE    [reduce using rule 137 (for_stmt)]
    EXTERN      [reduce using rule 137 (for_stmt)]
    EXTERN      [reduce using rule 164 (prefixes)]
    GOTO        [reduce using rule 137 (for_stmt)]
    LONG        [reduce using rule 137 (for_stmt)]
    LONG        [reduce using rule 164 (prefixes)]
    ENUM        [reduce using rule 137 (for_stmt)]
    REGISTER    [reduce using rule 137 (for_stmt)]
    REGISTER    [reduce using rule 164 (prefixes)]
    SHORT       [reduce using rule 137 (for_stmt)]
    SHORT       [reduce using rule 164 (prefixes)]
    STATIC      [reduce using rule 137 (for_stmt)]
    STATIC      [reduce using rule 164 (prefixes)]
    SIGNED      [reduce using rule 137 (for_stmt)]
    SIGNED      [reduce using rule 164 (prefixes)]
    UNION       [reduce using rule 137 (for_stmt)]
    UNSIGNED    [reduce using rule 137 (for_stmt)]
    UNSIGNED    [reduce using rule 164 (prefixes)]
    VOLATILE    [reduce using rule 137 (for_stmt)]
    VOLATILE    [reduce using rule 164 (prefixes)]
    ID          [reduce using rule 137 (for_stmt)]
    LEFT_BRACE  [reduce using rule 137 (for_stmt)]
    INCREMENT   [reduce using rule 137 (for_stmt)]
    DECREMENT   [reduce using rule 137 (for_stmt)]
    CONSTANT    [reduce using rule 137 (for_stmt)]
    CONSTANT    [reduce using rule 164 (prefixes)]
    $default    reduce using rule 137 (for_stmt)

    stmt                  go to state 242
    assignment_stmt       go to state 213
    declaration_stmt      go to state 214
    variable_declaration  go to state 19
    array_declaration     go to state 20
    struct_declaration    go to state 22
    union_declaration     go to state 23
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    instantiation_stmt    go to state 215
    struct_inst           go to state 27
    union_inst            go to state 28
    func_inst             go to state 29
    unary_op              go to state 216
    compound_stmt         go to state 217
    if_stmt               go to state 218
    do_while_stmt         go to state 219
    while_stmt            go to state 220
    for_stmt              go to state 221
    switch_case           go to state 222
    return_stmt           go to state 223
    goto_stmt             go to state 224
    label                 go to state 225
    prefixes              go to state 226
    prefix                go to state 31


State 326

    8 stmts: stmts • stmt
  136 for_stmt: FOR LPAREN condition SEMI condition SEMI condition RPAREN stmts •

    IF          shift, and go to state 200
    DO          shift, and go to state 201
    WHILE       shift, and go to state 202
    FOR         shift, and go to state 203
    SWITCH      shift, and go to state 204
    RETURN      shift, and go to state 205
    BREAK       shift, and go to state 206
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 207
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 208
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 209
    LEFT_BRACE  shift, and go to state 194
    INCREMENT   shift, and go to state 76
    DECREMENT   shift, and go to state 77
    CONSTANT    shift, and go to state 14

    IF          [reduce using rule 136 (for_stmt)]
    DO          [reduce using rule 136 (for_stmt)]
    WHILE       [reduce using rule 136 (for_stmt)]
    FOR         [reduce using rule 136 (for_stmt)]
    SWITCH      [reduce using rule 136 (for_stmt)]
    RETURN      [reduce using rule 136 (for_stmt)]
    BREAK       [reduce using rule 136 (for_stmt)]
    INT         reduce using rule 136 (for_stmt)
    INT         [reduce using rule 164 (prefixes)]
    FLOAT       reduce using rule 136 (for_stmt)
    FLOAT       [reduce using rule 164 (prefixes)]
    DOUBLE      reduce using rule 136 (for_stmt)
    DOUBLE      [reduce using rule 164 (prefixes)]
    CHAR        reduce using rule 136 (for_stmt)
    CHAR        [reduce using rule 164 (prefixes)]
    VOID        reduce using rule 136 (for_stmt)
    VOID        [reduce using rule 164 (prefixes)]
    STRUCT      [reduce using rule 136 (for_stmt)]
    TYPEDEF     [reduce using rule 136 (for_stmt)]
    CONTINUE    [reduce using rule 136 (for_stmt)]
    EXTERN      [reduce using rule 136 (for_stmt)]
    EXTERN      [reduce using rule 164 (prefixes)]
    GOTO        [reduce using rule 136 (for_stmt)]
    LONG        [reduce using rule 136 (for_stmt)]
    LONG        [reduce using rule 164 (prefixes)]
    ENUM        [reduce using rule 136 (for_stmt)]
    REGISTER    [reduce using rule 136 (for_stmt)]
    REGISTER    [reduce using rule 164 (prefixes)]
    SHORT       [reduce using rule 136 (for_stmt)]
    SHORT       [reduce using rule 164 (prefixes)]
    STATIC      [reduce using rule 136 (for_stmt)]
    STATIC      [reduce using rule 164 (prefixes)]
    SIGNED      [reduce using rule 136 (for_stmt)]
    SIGNED      [reduce using rule 164 (prefixes)]
    UNION       [reduce using rule 136 (for_stmt)]
    UNSIGNED    [reduce using rule 136 (for_stmt)]
    UNSIGNED    [reduce using rule 164 (prefixes)]
    VOLATILE    [reduce using rule 136 (for_stmt)]
    VOLATILE    [reduce using rule 164 (prefixes)]
    ID          [reduce using rule 136 (for_stmt)]
    LEFT_BRACE  [reduce using rule 136 (for_stmt)]
    INCREMENT   [reduce using rule 136 (for_stmt)]
    DECREMENT   [reduce using rule 136 (for_stmt)]
    CONSTANT    [reduce using rule 136 (for_stmt)]
    CONSTANT    [reduce using rule 164 (prefixes)]
    $default    reduce using rule 136 (for_stmt)

    stmt                  go to state 242
    assignment_stmt       go to state 213
    declaration_stmt      go to state 214
    variable_declaration  go to state 19
    array_declaration     go to state 20
    struct_declaration    go to state 22
    union_declaration     go to state 23
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    instantiation_stmt    go to state 215
    struct_inst           go to state 27
    union_inst            go to state 28
    func_inst             go to state 29
    unary_op              go to state 216
    compound_stmt         go to state 217
    if_stmt               go to state 218
    do_while_stmt         go to state 219
    while_stmt            go to state 220
    for_stmt              go to state 221
    switch_case           go to state 222
    return_stmt           go to state 223
    goto_stmt             go to state 224
    label                 go to state 225
    prefixes              go to state 226
    prefix                go to state 31


State 327

    8 stmts: stmts • stmt
  146 case: CASE NUM COLON stmts • BREAK

    IF          shift, and go to state 200
    DO          shift, and go to state 201
    WHILE       shift, and go to state 202
    FOR         shift, and go to state 203
    SWITCH      shift, and go to state 204
    RETURN      shift, and go to state 205
    BREAK       shift, and go to state 331
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 207
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 208
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 209
    LEFT_BRACE  shift, and go to state 194
    INCREMENT   shift, and go to state 76
    DECREMENT   shift, and go to state 77
    CONSTANT    shift, and go to state 14

    EXTERN    [reduce using rule 164 (prefixes)]
    LONG      [reduce using rule 164 (prefixes)]
    REGISTER  [reduce using rule 164 (prefixes)]
    SHORT     [reduce using rule 164 (prefixes)]
    STATIC    [reduce using rule 164 (prefixes)]
    SIGNED    [reduce using rule 164 (prefixes)]
    UNSIGNED  [reduce using rule 164 (prefixes)]
    VOLATILE  [reduce using rule 164 (prefixes)]
    CONSTANT  [reduce using rule 164 (prefixes)]
    $default  reduce using rule 164 (prefixes)

    stmt                  go to state 242
    assignment_stmt       go to state 213
    declaration_stmt      go to state 214
    variable_declaration  go to state 19
    array_declaration     go to state 20
    struct_declaration    go to state 22
    union_declaration     go to state 23
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    instantiation_stmt    go to state 215
    struct_inst           go to state 27
    union_inst            go to state 28
    func_inst             go to state 29
    unary_op              go to state 216
    compound_stmt         go to state 217
    if_stmt               go to state 218
    do_while_stmt         go to state 219
    while_stmt            go to state 220
    for_stmt              go to state 221
    switch_case           go to state 222
    return_stmt           go to state 223
    goto_stmt             go to state 224
    label                 go to state 225
    prefixes              go to state 226
    prefix                go to state 31


State 328

    8 stmts: stmts • stmt
  147 case_default: DEFAULT COLON stmts • BREAK

    IF          shift, and go to state 200
    DO          shift, and go to state 201
    WHILE       shift, and go to state 202
    FOR         shift, and go to state 203
    SWITCH      shift, and go to state 204
    RETURN      shift, and go to state 205
    BREAK       shift, and go to state 332
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 207
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 208
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 209
    LEFT_BRACE  shift, and go to state 194
    INCREMENT   shift, and go to state 76
    DECREMENT   shift, and go to state 77
    CONSTANT    shift, and go to state 14

    EXTERN    [reduce using rule 164 (prefixes)]
    LONG      [reduce using rule 164 (prefixes)]
    REGISTER  [reduce using rule 164 (prefixes)]
    SHORT     [reduce using rule 164 (prefixes)]
    STATIC    [reduce using rule 164 (prefixes)]
    SIGNED    [reduce using rule 164 (prefixes)]
    UNSIGNED  [reduce using rule 164 (prefixes)]
    VOLATILE  [reduce using rule 164 (prefixes)]
    CONSTANT  [reduce using rule 164 (prefixes)]
    $default  reduce using rule 164 (prefixes)

    stmt                  go to state 242
    assignment_stmt       go to state 213
    declaration_stmt      go to state 214
    variable_declaration  go to state 19
    array_declaration     go to state 20
    struct_declaration    go to state 22
    union_declaration     go to state 23
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    instantiation_stmt    go to state 215
    struct_inst           go to state 27
    union_inst            go to state 28
    func_inst             go to state 29
    unary_op              go to state 216
    compound_stmt         go to state 217
    if_stmt               go to state 218
    do_while_stmt         go to state 219
    while_stmt            go to state 220
    for_stmt              go to state 221
    switch_case           go to state 222
    return_stmt           go to state 223
    goto_stmt             go to state 224
    label                 go to state 225
    prefixes              go to state 226
    prefix                go to state 31


State 329

    8 stmts: stmts • stmt
  130 elseif_stmt: ELSEIF LPAREN condition RPAREN stmts •
  131            | ELSEIF LPAREN condition RPAREN stmts • else_stmt

    IF          shift, and go to state 200
    ELSE        shift, and go to state 290
    DO          shift, and go to state 201
    WHILE       shift, and go to state 202
    FOR         shift, and go to state 203
    SWITCH      shift, and go to state 204
    RETURN      shift, and go to state 205
    BREAK       shift, and go to state 206
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 207
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 208
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 209
    LEFT_BRACE  shift, and go to state 194
    INCREMENT   shift, and go to state 76
    DECREMENT   shift, and go to state 77
    CONSTANT    shift, and go to state 14

    IF          [reduce using rule 130 (elseif_stmt)]
    ELSE        [reduce using rule 130 (elseif_stmt)]
    DO          [reduce using rule 130 (elseif_stmt)]
    WHILE       [reduce using rule 130 (elseif_stmt)]
    FOR         [reduce using rule 130 (elseif_stmt)]
    SWITCH      [reduce using rule 130 (elseif_stmt)]
    RETURN      [reduce using rule 130 (elseif_stmt)]
    BREAK       [reduce using rule 130 (elseif_stmt)]
    INT         reduce using rule 130 (elseif_stmt)
    INT         [reduce using rule 164 (prefixes)]
    FLOAT       reduce using rule 130 (elseif_stmt)
    FLOAT       [reduce using rule 164 (prefixes)]
    DOUBLE      reduce using rule 130 (elseif_stmt)
    DOUBLE      [reduce using rule 164 (prefixes)]
    CHAR        reduce using rule 130 (elseif_stmt)
    CHAR        [reduce using rule 164 (prefixes)]
    VOID        reduce using rule 130 (elseif_stmt)
    VOID        [reduce using rule 164 (prefixes)]
    STRUCT      [reduce using rule 130 (elseif_stmt)]
    TYPEDEF     [reduce using rule 130 (elseif_stmt)]
    CONTINUE    [reduce using rule 130 (elseif_stmt)]
    EXTERN      [reduce using rule 130 (elseif_stmt)]
    EXTERN      [reduce using rule 164 (prefixes)]
    GOTO        [reduce using rule 130 (elseif_stmt)]
    LONG        [reduce using rule 130 (elseif_stmt)]
    LONG        [reduce using rule 164 (prefixes)]
    ENUM        [reduce using rule 130 (elseif_stmt)]
    REGISTER    [reduce using rule 130 (elseif_stmt)]
    REGISTER    [reduce using rule 164 (prefixes)]
    SHORT       [reduce using rule 130 (elseif_stmt)]
    SHORT       [reduce using rule 164 (prefixes)]
    STATIC      [reduce using rule 130 (elseif_stmt)]
    STATIC      [reduce using rule 164 (prefixes)]
    SIGNED      [reduce using rule 130 (elseif_stmt)]
    SIGNED      [reduce using rule 164 (prefixes)]
    UNION       [reduce using rule 130 (elseif_stmt)]
    UNSIGNED    [reduce using rule 130 (elseif_stmt)]
    UNSIGNED    [reduce using rule 164 (prefixes)]
    VOLATILE    [reduce using rule 130 (elseif_stmt)]
    VOLATILE    [reduce using rule 164 (prefixes)]
    ID          [reduce using rule 130 (elseif_stmt)]
    LEFT_BRACE  [reduce using rule 130 (elseif_stmt)]
    INCREMENT   [reduce using rule 130 (elseif_stmt)]
    DECREMENT   [reduce using rule 130 (elseif_stmt)]
    CONSTANT    [reduce using rule 130 (elseif_stmt)]
    CONSTANT    [reduce using rule 164 (prefixes)]
    $default    reduce using rule 130 (elseif_stmt)

    stmt                  go to state 242
    assignment_stmt       go to state 213
    declaration_stmt      go to state 214
    variable_declaration  go to state 19
    array_declaration     go to state 20
    struct_declaration    go to state 22
    union_declaration     go to state 23
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    instantiation_stmt    go to state 215
    struct_inst           go to state 27
    union_inst            go to state 28
    func_inst             go to state 29
    unary_op              go to state 216
    compound_stmt         go to state 217
    if_stmt               go to state 218
    else_stmt             go to state 333
    do_while_stmt         go to state 219
    while_stmt            go to state 220
    for_stmt              go to state 221
    switch_case           go to state 222
    return_stmt           go to state 223
    goto_stmt             go to state 224
    label                 go to state 225
    prefixes              go to state 226
    prefix                go to state 31


State 330

  129 elseif_stmt: elseif_stmt ELSEIF LPAREN condition RPAREN • stmts

    IF          shift, and go to state 200
    DO          shift, and go to state 201
    WHILE       shift, and go to state 202
    FOR         shift, and go to state 203
    SWITCH      shift, and go to state 204
    RETURN      shift, and go to state 205
    BREAK       shift, and go to state 206
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 207
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 208
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 209
    LEFT_BRACE  shift, and go to state 194
    INCREMENT   shift, and go to state 76
    DECREMENT   shift, and go to state 77
    CONSTANT    shift, and go to state 14

    EXTERN    [reduce using rule 164 (prefixes)]
    LONG      [reduce using rule 164 (prefixes)]
    REGISTER  [reduce using rule 164 (prefixes)]
    SHORT     [reduce using rule 164 (prefixes)]
    STATIC    [reduce using rule 164 (prefixes)]
    SIGNED    [reduce using rule 164 (prefixes)]
    UNSIGNED  [reduce using rule 164 (prefixes)]
    VOLATILE  [reduce using rule 164 (prefixes)]
    CONSTANT  [reduce using rule 164 (prefixes)]
    $default  reduce using rule 164 (prefixes)

    stmts                 go to state 334
    stmt                  go to state 212
    assignment_stmt       go to state 213
    declaration_stmt      go to state 214
    variable_declaration  go to state 19
    array_declaration     go to state 20
    struct_declaration    go to state 22
    union_declaration     go to state 23
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    instantiation_stmt    go to state 215
    struct_inst           go to state 27
    union_inst            go to state 28
    func_inst             go to state 29
    unary_op              go to state 216
    compound_stmt         go to state 217
    if_stmt               go to state 218
    do_while_stmt         go to state 219
    while_stmt            go to state 220
    for_stmt              go to state 221
    switch_case           go to state 222
    return_stmt           go to state 223
    goto_stmt             go to state 224
    label                 go to state 225
    prefixes              go to state 226
    prefix                go to state 31


State 331

   23 stmt: BREAK • SEMI
  146 case: CASE NUM COLON stmts BREAK •

    SEMI  shift, and go to state 234

    $default  reduce using rule 146 (case)


State 332

   23 stmt: BREAK • SEMI
  147 case_default: DEFAULT COLON stmts BREAK •

    SEMI  shift, and go to state 234

    $default  reduce using rule 147 (case_default)


State 333

  131 elseif_stmt: ELSEIF LPAREN condition RPAREN stmts else_stmt •

    $default  reduce using rule 131 (elseif_stmt)


State 334

    8 stmts: stmts • stmt
  129 elseif_stmt: elseif_stmt ELSEIF LPAREN condition RPAREN stmts •

    IF          shift, and go to state 200
    DO          shift, and go to state 201
    WHILE       shift, and go to state 202
    FOR         shift, and go to state 203
    SWITCH      shift, and go to state 204
    RETURN      shift, and go to state 205
    BREAK       shift, and go to state 206
    STRUCT      shift, and go to state 1
    TYPEDEF     shift, and go to state 2
    CONTINUE    shift, and go to state 207
    EXTERN      shift, and go to state 3
    GOTO        shift, and go to state 208
    LONG        shift, and go to state 4
    ENUM        shift, and go to state 5
    REGISTER    shift, and go to state 6
    SHORT       shift, and go to state 7
    STATIC      shift, and go to state 8
    SIGNED      shift, and go to state 9
    UNION       shift, and go to state 10
    UNSIGNED    shift, and go to state 11
    VOLATILE    shift, and go to state 12
    ID          shift, and go to state 209
    LEFT_BRACE  shift, and go to state 194
    INCREMENT   shift, and go to state 76
    DECREMENT   shift, and go to state 77
    CONSTANT    shift, and go to state 14

    IF          [reduce using rule 129 (elseif_stmt)]
    DO          [reduce using rule 129 (elseif_stmt)]
    WHILE       [reduce using rule 129 (elseif_stmt)]
    FOR         [reduce using rule 129 (elseif_stmt)]
    SWITCH      [reduce using rule 129 (elseif_stmt)]
    RETURN      [reduce using rule 129 (elseif_stmt)]
    BREAK       [reduce using rule 129 (elseif_stmt)]
    INT         reduce using rule 129 (elseif_stmt)
    INT         [reduce using rule 164 (prefixes)]
    FLOAT       reduce using rule 129 (elseif_stmt)
    FLOAT       [reduce using rule 164 (prefixes)]
    DOUBLE      reduce using rule 129 (elseif_stmt)
    DOUBLE      [reduce using rule 164 (prefixes)]
    CHAR        reduce using rule 129 (elseif_stmt)
    CHAR        [reduce using rule 164 (prefixes)]
    VOID        reduce using rule 129 (elseif_stmt)
    VOID        [reduce using rule 164 (prefixes)]
    STRUCT      [reduce using rule 129 (elseif_stmt)]
    TYPEDEF     [reduce using rule 129 (elseif_stmt)]
    CONTINUE    [reduce using rule 129 (elseif_stmt)]
    EXTERN      [reduce using rule 129 (elseif_stmt)]
    EXTERN      [reduce using rule 164 (prefixes)]
    GOTO        [reduce using rule 129 (elseif_stmt)]
    LONG        [reduce using rule 129 (elseif_stmt)]
    LONG        [reduce using rule 164 (prefixes)]
    ENUM        [reduce using rule 129 (elseif_stmt)]
    REGISTER    [reduce using rule 129 (elseif_stmt)]
    REGISTER    [reduce using rule 164 (prefixes)]
    SHORT       [reduce using rule 129 (elseif_stmt)]
    SHORT       [reduce using rule 164 (prefixes)]
    STATIC      [reduce using rule 129 (elseif_stmt)]
    STATIC      [reduce using rule 164 (prefixes)]
    SIGNED      [reduce using rule 129 (elseif_stmt)]
    SIGNED      [reduce using rule 164 (prefixes)]
    UNION       [reduce using rule 129 (elseif_stmt)]
    UNSIGNED    [reduce using rule 129 (elseif_stmt)]
    UNSIGNED    [reduce using rule 164 (prefixes)]
    VOLATILE    [reduce using rule 129 (elseif_stmt)]
    VOLATILE    [reduce using rule 164 (prefixes)]
    ID          [reduce using rule 129 (elseif_stmt)]
    LEFT_BRACE  [reduce using rule 129 (elseif_stmt)]
    INCREMENT   [reduce using rule 129 (elseif_stmt)]
    DECREMENT   [reduce using rule 129 (elseif_stmt)]
    CONSTANT    [reduce using rule 129 (elseif_stmt)]
    CONSTANT    [reduce using rule 164 (prefixes)]
    $default    reduce using rule 129 (elseif_stmt)

    stmt                  go to state 242
    assignment_stmt       go to state 213
    declaration_stmt      go to state 214
    variable_declaration  go to state 19
    array_declaration     go to state 20
    struct_declaration    go to state 22
    union_declaration     go to state 23
    enum_declaration      go to state 24
    typeDef_declaration   go to state 25
    instantiation_stmt    go to state 215
    struct_inst           go to state 27
    union_inst            go to state 28
    func_inst             go to state 29
    unary_op              go to state 216
    compound_stmt         go to state 217
    if_stmt               go to state 218
    do_while_stmt         go to state 219
    while_stmt            go to state 220
    for_stmt              go to state 221
    switch_case           go to state 222
    return_stmt           go to state 223
    goto_stmt             go to state 224
    label                 go to state 225
    prefixes              go to state 226
    prefix                go to state 31
